for i in clang/8.0.0 gcc/9.1.0 ThunderX2CN99/RHEL/7/gcc-8.2.0/armpl/19.2.0
do
    module purge
    module load cmake $i
    cmake .
    make 
    ./globalsums
    make clean
    make distclean
    module purge
done
MODULEPATH=/opt/ohpc/pub/modulefiles:/opt/arm/modulefiles:/projects/darwin/modulefiles/aarch64; export MODULEPATH; _ModuleTable001_=X01vZHVsZVRhYmxlXz17WyJNVHZlcnNpb24iXT0zLFsiY19yZWJ1aWxkVGltZSJdPTcyMDAsWyJjX3Nob3J0VGltZSJdPTMuNjQ2MTQyMDA1OTIwNCxkZXB0aFQ9e30sZmFtaWx5PXt9LG1UPXt9LG1wYXRoQT17Ii9vcHQvb2hwYy9wdWIvbW9kdWxlZmlsZXMiLCIvb3B0L2FybS9tb2R1bGVmaWxlcyIsIi9wcm9qZWN0cy9kYXJ3aW4vbW9kdWxlZmlsZXMvYWFyY2g2NCIsfSxbInN5c3RlbUJhc2VNUEFUSCJdPSIvb3B0L29ocGMvcHViL21vZHVsZWZpbGVzOi9vcHQvYXJtL21vZHVsZWZpbGVzOi9wcm9qZWN0cy9kYXJ3aW4vbW9kdWxlZmlsZXMvYWFyY2g2NCIsfQ==; export _ModuleTable001_; _ModuleTable_Sz_=1; export _ModuleTable_Sz_;
CC=clang; export CC; CLANGROOT=/projects/opt/aarch64/clang/8.0.0; export CLANGROOT; CLANGVER=8.0.0; export CLANGVER; CPP=clang\ -E; export CPP; CXX=clang++; export CXX; __LMOD_REF_COUNT_LD_LIBRARY_PATH=/projects/opt/aarch64/clang/8.0.0/lib:1\;/projects/opt/aarch64/gcc/8.3.0/lib64:1\;/projects/opt/aarch64/gcc/8.3.0/lib:1; export __LMOD_REF_COUNT_LD_LIBRARY_PATH; LD_LIBRARY_PATH=/projects/opt/aarch64/clang/8.0.0/lib:/projects/opt/aarch64/gcc/8.3.0/lib64:/projects/opt/aarch64/gcc/8.3.0/lib; export LD_LIBRARY_PATH; LLVMROOT=/projects/opt/aarch64/clang/8.0.0; export LLVMROOT; __LMOD_REF_COUNT_LOADEDMODULES=cmake/3.15.0:1\;clang/8.0.0:1; export __LMOD_REF_COUNT_LOADEDMODULES; LOADEDMODULES=cmake/3.15.0:clang/8.0.0; export LOADEDMODULES; __LMOD_REF_COUNT_MANPATH=/projects/opt/aarch64/clang/8.0.0/share/man:1; export __LMOD_REF_COUNT_MANPATH; MANPATH=/projects/opt/aarch64/clang/8.0.0/share/man; export MANPATH; MODULEPATH=/opt/ohpc/pub/modulefiles:/opt/arm/modulefiles:/projects/darwin/modulefiles/aarch64; export MODULEPATH; __LMOD_REF_COUNT_PATH=/projects/opt/aarch64/clang/8.0.0/bin:1\;/projects/opt/aarch64/cmake/3.15.0/bin:1\;/home/brobey/bin:2\;/home/brobey/parsplice-install/bin:2\;/home/brobey/spack/bin:1\;/usr/local/bin:1\;/usr/bin:1\;/usr/local/sbin:1\;/usr/sbin:1\;/opt/ibutils/bin:1; export __LMOD_REF_COUNT_PATH; PATH=/projects/opt/aarch64/clang/8.0.0/bin:/projects/opt/aarch64/cmake/3.15.0/bin:/home/brobey/bin:/home/brobey/parsplice-install/bin:/home/brobey/spack/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/opt/ibutils/bin; export PATH; __LMOD_REF_COUNT_PYTHONPATH=/projects/opt/aarch64/clang/8.0.0/lib64/python2.7/site-packages:1; export __LMOD_REF_COUNT_PYTHONPATH; PYTHONPATH=/projects/opt/aarch64/clang/8.0.0/lib64/python2.7/site-packages; export PYTHONPATH; __LMOD_REF_COUNT__LMFILES_=/projects/darwin/modulefiles/aarch64/cmake/3.15.0:1\;/projects/darwin/modulefiles/aarch64/clang/8.0.0:1; export __LMOD_REF_COUNT__LMFILES_; _LMFILES_=/projects/darwin/modulefiles/aarch64/cmake/3.15.0:/projects/darwin/modulefiles/aarch64/clang/8.0.0; export _LMFILES_; _ModuleTable001_=X01vZHVsZVRhYmxlXz17WyJNVHZlcnNpb24iXT0zLFsiY19yZWJ1aWxkVGltZSJdPTcyMDAsWyJjX3Nob3J0VGltZSJdPTMuNjQ2MTQyMDA1OTIwNCxkZXB0aFQ9e30sZmFtaWx5PXt9LG1UPXtjbGFuZz17WyJmbiJdPSIvcHJvamVjdHMvZGFyd2luL21vZHVsZWZpbGVzL2FhcmNoNjQvY2xhbmcvOC4wLjAiLFsiZnVsbE5hbWUiXT0iY2xhbmcvOC4wLjAiLFsibG9hZE9yZGVyIl09Mixwcm9wVD17fSxbInN0YWNrRGVwdGgiXT0wLFsic3RhdHVzIl09ImFjdGl2ZSIsWyJ1c2VyTmFtZSJdPSJjbGFuZy84LjAuMCIsfSxjbWFrZT17WyJmbiJdPSIvcHJvamVjdHMvZGFyd2luL21vZHVsZWZpbGVzL2FhcmNoNjQvY21ha2UvMy4xNS4wIixbImZ1bGxOYW1lIl09ImNtYWtlLzMuMTUu; export _ModuleTable001_; _ModuleTable002_=MCIsWyJsb2FkT3JkZXIiXT0xLHByb3BUPXt9LFsic3RhY2tEZXB0aCJdPTAsWyJzdGF0dXMiXT0iYWN0aXZlIixbInVzZXJOYW1lIl09ImNtYWtlIix9LH0sbXBhdGhBPXsiL29wdC9vaHBjL3B1Yi9tb2R1bGVmaWxlcyIsIi9vcHQvYXJtL21vZHVsZWZpbGVzIiwiL3Byb2plY3RzL2Rhcndpbi9tb2R1bGVmaWxlcy9hYXJjaDY0Iix9LFsic3lzdGVtQmFzZU1QQVRIIl09Ii9vcHQvb2hwYy9wdWIvbW9kdWxlZmlsZXM6L29wdC9hcm0vbW9kdWxlZmlsZXM6L3Byb2plY3RzL2Rhcndpbi9tb2R1bGVmaWxlcy9hYXJjaDY0Iix9; export _ModuleTable002_; _ModuleTable_Sz_=2; export _ModuleTable_Sz_;
-- The C compiler identification is Clang 8.0.0
-- The CXX compiler identification is Clang 8.0.0
-- Check for working C compiler: /projects/opt/aarch64/clang/8.0.0/bin/clang
-- Check for working C compiler: /projects/opt/aarch64/clang/8.0.0/bin/clang -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /projects/opt/aarch64/clang/8.0.0/bin/clang++
-- Check for working CXX compiler: /projects/opt/aarch64/clang/8.0.0/bin/clang++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Could NOT find OpenMP_C (missing: OpenMP_C_FLAGS OpenMP_C_LIB_NAMES) 
-- Could NOT find OpenMP_CXX (missing: OpenMP_CXX_FLAGS OpenMP_CXX_LIB_NAMES) 
-- Could NOT find OpenMP (missing: OpenMP_C_FOUND OpenMP_CXX_FOUND) 
-- Trying Fog Vector Class -- fails
-- Trying X86_64 intrinsics -- fails
-- Trying GCC Vector Extensions -- fails
-- Trying Quad math library -- fails
-- Configuring done
-- Generating done
-- Build files have been written to: /home/brobey/GlobalSums
Scanning dependencies of target globalsums
[  6%] Building C object CMakeFiles/globalsums.dir/globalsums.c.o
clang-8: error: the clang compiler does not support '-march=native'
make[2]: *** [CMakeFiles/globalsums.dir/globalsums.c.o] Error 1
make[1]: *** [CMakeFiles/globalsums.dir/all] Error 2
make: *** [all] Error 2
./arm_batch.sh: line 9: ./globalsums: No such file or directory
Scanning dependencies of target distclean
Built target distclean
unset CC; unset CLANGROOT; unset CLANGVER; unset CPP; unset CXX; unset __LMOD_REF_COUNT_LD_LIBRARY_PATH; unset LD_LIBRARY_PATH; unset LLVMROOT; unset __LMOD_REF_COUNT_LOADEDMODULES; unset LOADEDMODULES; unset __LMOD_REF_COUNT_MANPATH; unset MANPATH; MODULEPATH=/opt/ohpc/pub/modulefiles:/opt/arm/modulefiles:/projects/darwin/modulefiles/aarch64; export MODULEPATH; __LMOD_REF_COUNT_PATH=/home/brobey/bin:2\;/home/brobey/parsplice-install/bin:2\;/home/brobey/spack/bin:1\;/usr/local/bin:1\;/usr/bin:1\;/usr/local/sbin:1\;/usr/sbin:1\;/opt/ibutils/bin:1; export __LMOD_REF_COUNT_PATH; PATH=/home/brobey/bin:/home/brobey/parsplice-install/bin:/home/brobey/spack/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/opt/ibutils/bin; export PATH; unset __LMOD_REF_COUNT_PYTHONPATH; unset PYTHONPATH; unset __LMOD_REF_COUNT__LMFILES_; unset _LMFILES_; _ModuleTable001_=X01vZHVsZVRhYmxlXz17WyJNVHZlcnNpb24iXT0zLFsiY19yZWJ1aWxkVGltZSJdPTcyMDAsWyJjX3Nob3J0VGltZSJdPTMuNjQ2MTQyMDA1OTIwNCxkZXB0aFQ9e30sZmFtaWx5PXt9LG1UPXt9LG1wYXRoQT17Ii9vcHQvb2hwYy9wdWIvbW9kdWxlZmlsZXMiLCIvb3B0L2FybS9tb2R1bGVmaWxlcyIsIi9wcm9qZWN0cy9kYXJ3aW4vbW9kdWxlZmlsZXMvYWFyY2g2NCIsfSxbInN5c3RlbUJhc2VNUEFUSCJdPSIvb3B0L29ocGMvcHViL21vZHVsZWZpbGVzOi9vcHQvYXJtL21vZHVsZWZpbGVzOi9wcm9qZWN0cy9kYXJ3aW4vbW9kdWxlZmlsZXMvYWFyY2g2NCIsfQ==; export _ModuleTable001_; _ModuleTable_Sz_=1; export _ModuleTable_Sz_;
MODULEPATH=/opt/ohpc/pub/modulefiles:/opt/arm/modulefiles:/projects/darwin/modulefiles/aarch64; export MODULEPATH; _ModuleTable001_=X01vZHVsZVRhYmxlXz17WyJNVHZlcnNpb24iXT0zLFsiY19yZWJ1aWxkVGltZSJdPTcyMDAsWyJjX3Nob3J0VGltZSJdPTMuNjQ2MTQyMDA1OTIwNCxkZXB0aFQ9e30sZmFtaWx5PXt9LG1UPXt9LG1wYXRoQT17Ii9vcHQvb2hwYy9wdWIvbW9kdWxlZmlsZXMiLCIvb3B0L2FybS9tb2R1bGVmaWxlcyIsIi9wcm9qZWN0cy9kYXJ3aW4vbW9kdWxlZmlsZXMvYWFyY2g2NCIsfSxbInN5c3RlbUJhc2VNUEFUSCJdPSIvb3B0L29ocGMvcHViL21vZHVsZWZpbGVzOi9vcHQvYXJtL21vZHVsZWZpbGVzOi9wcm9qZWN0cy9kYXJ3aW4vbW9kdWxlZmlsZXMvYWFyY2g2NCIsfQ==; export _ModuleTable001_; _ModuleTable_Sz_=1; export _ModuleTable_Sz_;
CC=gcc\ -mcpu=thunderx2t99; export CC; CPP=cpp\ -mcpu=thunderx2t99; export CPP; CXX=g++\ -mcpu=thunderx2t99; export CXX; F77=gfortran\ -mcpu=thunderx2t99; export F77; F90=gfortran\ -mcpu=thunderx2t99; export F90; FC=gfortran\ -mcpu=thunderx2t99; export FC; __LMOD_REF_COUNT_LD_LIBRARY_PATH=/projects/opt/aarch64/gcc/9.1.0/lib64:1\;/projects/opt/aarch64/gcc/9.1.0/lib:1\;/usr/local/lib:1; export __LMOD_REF_COUNT_LD_LIBRARY_PATH; LD_LIBRARY_PATH=/projects/opt/aarch64/gcc/9.1.0/lib64:/projects/opt/aarch64/gcc/9.1.0/lib:/usr/local/lib; export LD_LIBRARY_PATH; __LMOD_REF_COUNT_LOADEDMODULES=cmake/3.15.0:1\;gcc/9.1.0:1; export __LMOD_REF_COUNT_LOADEDMODULES; LOADEDMODULES=cmake/3.15.0:gcc/9.1.0; export LOADEDMODULES; __LMOD_REF_COUNT_MANPATH=/projects/opt/aarch64/gcc/9.1.0/share/man:1; export __LMOD_REF_COUNT_MANPATH; MANPATH=/projects/opt/aarch64/gcc/9.1.0/share/man; export MANPATH; MODULEPATH=/opt/ohpc/pub/modulefiles:/opt/arm/modulefiles:/projects/darwin/modulefiles/aarch64; export MODULEPATH; __LMOD_REF_COUNT_PATH=/projects/opt/aarch64/gcc/9.1.0/bin:1\;/projects/opt/aarch64/cmake/3.15.0/bin:1\;/home/brobey/bin:2\;/home/brobey/parsplice-install/bin:2\;/home/brobey/spack/bin:1\;/usr/local/bin:1\;/usr/bin:1\;/usr/local/sbin:1\;/usr/sbin:1\;/opt/ibutils/bin:1; export __LMOD_REF_COUNT_PATH; PATH=/projects/opt/aarch64/gcc/9.1.0/bin:/projects/opt/aarch64/cmake/3.15.0/bin:/home/brobey/bin:/home/brobey/parsplice-install/bin:/home/brobey/spack/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/opt/ibutils/bin; export PATH; __LMOD_REF_COUNT__LMFILES_=/projects/darwin/modulefiles/aarch64/cmake/3.15.0:1\;/projects/darwin/modulefiles/aarch64/gcc/9.1.0:1; export __LMOD_REF_COUNT__LMFILES_; _LMFILES_=/projects/darwin/modulefiles/aarch64/cmake/3.15.0:/projects/darwin/modulefiles/aarch64/gcc/9.1.0; export _LMFILES_; _ModuleTable001_=X01vZHVsZVRhYmxlXz17WyJNVHZlcnNpb24iXT0zLFsiY19yZWJ1aWxkVGltZSJdPTcyMDAsWyJjX3Nob3J0VGltZSJdPTMuNjQ2MTQyMDA1OTIwNCxkZXB0aFQ9e30sZmFtaWx5PXt9LG1UPXtjbWFrZT17WyJmbiJdPSIvcHJvamVjdHMvZGFyd2luL21vZHVsZWZpbGVzL2FhcmNoNjQvY21ha2UvMy4xNS4wIixbImZ1bGxOYW1lIl09ImNtYWtlLzMuMTUuMCIsWyJsb2FkT3JkZXIiXT0xLHByb3BUPXt9LFsic3RhY2tEZXB0aCJdPTAsWyJzdGF0dXMiXT0iYWN0aXZlIixbInVzZXJOYW1lIl09ImNtYWtlIix9LGdjYz17WyJmbiJdPSIvcHJvamVjdHMvZGFyd2luL21vZHVsZWZpbGVzL2FhcmNoNjQvZ2NjLzkuMS4wIixbImZ1bGxOYW1lIl09ImdjYy85LjEuMCIsWyJsb2FkT3Jk; export _ModuleTable001_; _ModuleTable002_=ZXIiXT0yLHByb3BUPXt9LFsic3RhY2tEZXB0aCJdPTAsWyJzdGF0dXMiXT0iYWN0aXZlIixbInVzZXJOYW1lIl09ImdjYy85LjEuMCIsfSx9LG1wYXRoQT17Ii9vcHQvb2hwYy9wdWIvbW9kdWxlZmlsZXMiLCIvb3B0L2FybS9tb2R1bGVmaWxlcyIsIi9wcm9qZWN0cy9kYXJ3aW4vbW9kdWxlZmlsZXMvYWFyY2g2NCIsfSxbInN5c3RlbUJhc2VNUEFUSCJdPSIvb3B0L29ocGMvcHViL21vZHVsZWZpbGVzOi9vcHQvYXJtL21vZHVsZWZpbGVzOi9wcm9qZWN0cy9kYXJ3aW4vbW9kdWxlZmlsZXMvYWFyY2g2NCIsfQ==; export _ModuleTable002_; _ModuleTable_Sz_=2; export _ModuleTable_Sz_;
-- The C compiler identification is GNU 9.1.0
-- The CXX compiler identification is GNU 9.1.0
-- Check for working C compiler: /projects/opt/aarch64/gcc/9.1.0/bin/gcc
-- Check for working C compiler: /projects/opt/aarch64/gcc/9.1.0/bin/gcc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /projects/opt/aarch64/gcc/9.1.0/bin/g++
-- Check for working CXX compiler: /projects/opt/aarch64/gcc/9.1.0/bin/g++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Found OpenMP_C: -fopenmp (found version "4.5") 
-- Found OpenMP_CXX: -fopenmp (found version "4.5") 
-- Found OpenMP: TRUE (found version "4.5")  
-- Trying Fog Vector Class -- fails
-- Trying X86_64 intrinsics -- fails
-- Trying GCC Vector Extensions -- works
-- Trying Quad math library -- fails
-- Configuring done
-- Generating done
-- Build files have been written to: /home/brobey/GlobalSums
Scanning dependencies of target globalsums
[  5%] Building C object CMakeFiles/globalsums.dir/globalsums.c.o
/home/brobey/GlobalSums/globalsums.c:542:10: missed: couldn't vectorize loop
/home/brobey/GlobalSums/globalsums.c:542:10: missed: not vectorized: unsupported data-type
/home/brobey/GlobalSums/globalsums.c:542:10: missed: couldn't vectorize loop
/home/brobey/GlobalSums/globalsums.c:542:10: missed: not vectorized: unsupported data-type
/home/brobey/GlobalSums/globalsums.c:100:7: missed: statement clobbers memory: printf ("--- num openmp threads in parallel region: %d\n", _2);
/home/brobey/GlobalSums/globalsums.c:104:3: missed: couldn't vectorize loop
/home/brobey/GlobalSums/globalsums.c:104:3: missed: not vectorized: loop nest containing two or more consecutive inner loops cannot be vectorized
/home/brobey/GlobalSums/globalsums.c:137:7: missed: couldn't vectorize loop
/home/brobey/GlobalSums/globalsums.c:137:7: missed: not vectorized: unsupported data-type
/home/brobey/GlobalSums/globalsums.c:137:7: missed: couldn't vectorize loop
/home/brobey/GlobalSums/globalsums.c:137:7: missed: not vectorized: unsupported data-type
/home/brobey/GlobalSums/globalsums.c:89:9: missed: statement clobbers memory: nt_90 = omp_get_max_threads ();
/home/brobey/GlobalSums/globalsums.c:90:10: missed: statement clobbers memory: tid_92 = omp_get_thread_num ();
/home/brobey/GlobalSums/globalsums.c:92:9: missed: statement clobbers memory: printf ("--- max num openmp threads: %d\n", nt_90);
/home/brobey/GlobalSums/globalsums.c:82:5: missed: statement clobbers memory: __builtin_GOMP_parallel (main._omp_fn.0, &.omp_data_o.9, 0, 0);
/home/brobey/GlobalSums/globalsums.c:82:5: missed: statement clobbers memory: __builtin_GOMP_parallel (main._omp_fn.0, &.omp_data_o.9, 0, 0);
/home/brobey/GlobalSums/globalsums.c:105:27: missed: statement clobbers memory: _2 = pow (2.0e+0, _1);
/home/brobey/GlobalSums/globalsums.c:108:37: missed: statement clobbers memory: _4 = log (_3);
/home/brobey/GlobalSums/globalsums.c:109:37: missed: statement clobbers memory: _8 = log (_3);
/home/brobey/GlobalSums/globalsums.c:110:40: missed: statement clobbers memory: _11 = log (_3);
/home/brobey/GlobalSums/globalsums.c:113:36: missed: statement clobbers memory: _15 = log (_3);
/home/brobey/GlobalSums/globalsums.c:114:36: missed: statement clobbers memory: _19 = log (_3);
/home/brobey/GlobalSums/globalsums.c:116:109: missed: statement clobbers memory: _22 = log2 (_3);
/home/brobey/GlobalSums/globalsums.c:116:7: missed: statement clobbers memory: printf ("SETTINGS INFO -- ncells %ld log %d ndigits %d ndigitsld %d nbits %d nbitsld %d\n", ncells_99, _23, ndigits_108, ndigitsld_110, nbits_102, nbitsld_104);
/home/brobey/GlobalSums/globalsums.c:133:34: missed: statement clobbers memory: energy_116 = malloc (_31);
/home/brobey/GlobalSums/globalsums.c:136:7: missed: statement clobbers memory: __builtin_puts (&"Initializing mesh with Leblanc problem, high values first"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:156:18: missed: statement clobbers memory: test_sum_119 = do_sum_novec (energy_116, ncells_99);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:160:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", accurate_sum_113, test_sum_119, _35, _36, result_503);
/home/brobey/GlobalSums/globalsums.c:162:7: missed: statement clobbers memory: __builtin_puts (&"   Serial sum"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:168:18: missed: statement clobbers memory: test_sum_125 = do_sum (energy_116, ncells_99);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:171:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", accurate_sum_113, test_sum_125, _37, _38, result_493);
/home/brobey/GlobalSums/globalsums.c:173:7: missed: statement clobbers memory: __builtin_puts (&"   Serial sum (OpenMP SIMD pragma)"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:179:18: missed: statement clobbers memory: test_sum_131 = do_sum_wdigittrunc (energy_116, ncells_99, ndigits_108);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:617:17: missed: statement clobbers memory: _458 = log10 (accurate_sum_113);
/home/brobey/GlobalSums/globalsums.c:620:21: missed: statement clobbers memory: mult_463 = pow (1.0e+1, _462);
/home/brobey/GlobalSums/globalsums.c:623:20: missed: statement clobbers memory: div_469 = pow (1.0e+1, _468);
/home/brobey/GlobalSums/globalsums.c:183:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", _473, test_sum_131, _39, _40, result_483);
/home/brobey/GlobalSums/globalsums.c:185:7: missed: statement clobbers memory: __builtin_puts (&"   Serial sum with digit truncation"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:191:18: missed: statement clobbers memory: test_sum_139 = do_sum_wbittrunc (energy_116, ncells_99, nbits_102);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:630:23: missed: not vectorized: more than one data ref in stmt: bitmask = *.LC0;
/home/brobey/GlobalSums/globalsums.c:196:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", var_267, test_sum_139, _41, _42, result_457);
/home/brobey/GlobalSums/globalsums.c:198:7: missed: statement clobbers memory: __builtin_puts (&"   Serial sum with bit truncation"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:204:20: missed: statement clobbers memory: test_ldsum_145 = do_ldsum (energy_116, ncells_99);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:207:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", _43, _44, _46, _48, result_447);
/home/brobey/GlobalSums/globalsums.c:209:7: missed: statement clobbers memory: __builtin_puts (&"   Serial sum with long double accumulator"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:215:20: missed: statement clobbers memory: test_ldsum_151 = do_ldsum_wdigittrunc (energy_116, ncells_99, ndigitsld_110);
/home/brobey/GlobalSums/globalsums.c:617:17: missed: statement clobbers memory: _422 = log10 (_43);
/home/brobey/GlobalSums/globalsums.c:620:21: missed: statement clobbers memory: mult_427 = pow (1.0e+1, _426);
/home/brobey/GlobalSums/globalsums.c:623:20: missed: statement clobbers memory: div_433 = pow (1.0e+1, _432);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:220:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", _437, _50, _52, _54, result_421);
/home/brobey/GlobalSums/globalsums.c:222:7: missed: statement clobbers memory: __builtin_puts (&"   Serial sum with long double accumulator with ndigit truncation"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:228:20: missed: statement clobbers memory: test_ldsum_159 = do_ldsum_wbittrunc (energy_116, ncells_99, nbitsld_104);
/home/brobey/GlobalSums/globalsums.c:630:23: missed: not vectorized: more than one data ref in stmt: bitmask = *.LC0;
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:233:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", var_261, _55, _57, _59, result_411);
/home/brobey/GlobalSums/globalsums.c:235:7: missed: statement clobbers memory: __builtin_puts (&"   Serial sum with long double accumulator with bit truncation"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:241:18: missed: statement clobbers memory: test_sum_166 = do_kahan_sum (energy_116, ncells_99);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:244:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", accurate_sum_113, test_sum_166, _60, _61, result_401);
/home/brobey/GlobalSums/globalsums.c:246:7: missed: statement clobbers memory: __builtin_puts (&"   Serial sum with double double kahan sum accumulator"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:266:18: missed: statement clobbers memory: test_sum_172 = do_kahan_sum_gcc_v (energy_116, ncells_99);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:269:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", accurate_sum_113, test_sum_172, _62, _63, result_391);
/home/brobey/GlobalSums/globalsums.c:271:7: missed: statement clobbers memory: __builtin_puts (&"   GCC Extensions Vectorized sum with double double kahan sum accumulator"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:309:18: missed: statement clobbers memory: test_sum_178 = do_kahan_sum_gcc_v8 (energy_116, ncells_99);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:313:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", accurate_sum_113, test_sum_178, _64, _65, result_381);
/home/brobey/GlobalSums/globalsums.c:315:7: missed: statement clobbers memory: __builtin_puts (&"   8 wide GCC vector extensions Kahan sum"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:336:18: missed: statement clobbers memory: test_sum_184 = do_knuth_sum (energy_116, ncells_99);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:339:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", accurate_sum_113, test_sum_184, _66, _67, result_371);
/home/brobey/GlobalSums/globalsums.c:341:7: missed: statement clobbers memory: __builtin_puts (&"   Serial sum with double double knuth sum accumulator"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:361:18: missed: statement clobbers memory: test_sum_190 = do_knuth_sum_gcc_v (energy_116, ncells_99);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:364:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", accurate_sum_113, test_sum_190, _68, _69, result_361);
/home/brobey/GlobalSums/globalsums.c:366:7: missed: statement clobbers memory: __builtin_puts (&"   GCC Extensions Vectorized sum with double double knuth sum accumulator"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:403:18: missed: statement clobbers memory: test_sum_196 = do_knuth_sum_gcc_v8 (energy_116, ncells_99);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:407:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", accurate_sum_113, test_sum_196, _70, _71, result_351);
/home/brobey/GlobalSums/globalsums.c:409:7: missed: statement clobbers memory: __builtin_puts (&"   8 wide GCC vector extensions Knuth sum"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:430:18: missed: statement clobbers memory: test_sum_202 = do_pair_sum (energy_116, ncells_99);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:433:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", accurate_sum_113, test_sum_202, _72, _73, result_341);
/home/brobey/GlobalSums/globalsums.c:435:7: missed: statement clobbers memory: __builtin_puts (&"   Pair-wise sum"[0]);
/home/brobey/GlobalSums/globalsums.c:439:7: missed: statement clobbers memory: __builtin_putchar (10);
/home/brobey/GlobalSums/globalsums.c:483:7: missed: statement clobbers memory: free (energy_116);
/home/brobey/GlobalSums/globalsums.c:535:7: missed: statement clobbers memory: __builtin_putchar (10);
/home/brobey/GlobalSums/globalsums.c:537:26: missed: statement clobbers memory: energy_211 = malloc (_31);
/home/brobey/GlobalSums/globalsums.c:82:5: missed: statement clobbers memory: __builtin_GOMP_parallel (main._omp_fn.1, &.omp_data_o.11, 0, 0);
/home/brobey/GlobalSums/globalsums.c:82:5: missed: statement clobbers memory: __builtin_GOMP_parallel (main._omp_fn.1, &.omp_data_o.11, 0, 0);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:549:18: missed: statement clobbers memory: test_sum_220 = do_sum_omp (energy_211, ncells_99);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:552:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", accurate_sum_113, test_sum_220, _74, _75, result_331);
/home/brobey/GlobalSums/globalsums.c:554:7: missed: statement clobbers memory: __builtin_puts (&"   OpenMP sum"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:560:18: missed: statement clobbers memory: test_sum_226 = do_sum_omp_wbittrunc (energy_211, ncells_99, nbitsomp_106);
/home/brobey/GlobalSums/globalsums.c:630:23: missed: not vectorized: more than one data ref in stmt: bitmask = *.LC0;
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:566:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", var_255, test_sum_226, _76, _77, result_321);
/home/brobey/GlobalSums/globalsums.c:568:7: missed: statement clobbers memory: __builtin_puts (&"   OpenMP sum with bit truncation"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:574:18: missed: statement clobbers memory: test_sum_232 = do_kahan_sum_omp (energy_211, ncells_99);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:577:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", accurate_sum_113, test_sum_232, _78, _79, result_311);
/home/brobey/GlobalSums/globalsums.c:579:7: missed: statement clobbers memory: __builtin_puts (&"   OpenMP sum with double double kahan sum accumulator"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:585:18: missed: statement clobbers memory: test_sum_238 = do_kahan_sum_omp_wbittrunc (energy_211, ncells_99, 2);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:590:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", var_250, test_sum_238, _80, _81, result_301);
/home/brobey/GlobalSums/globalsums.c:592:7: missed: statement clobbers memory: __builtin_puts (&"   OpenMP sum with double double kahan sum accumulator with bit truncation"[0]);
/home/brobey/GlobalSums/globalsums.c:595:7: missed: statement clobbers memory: free (energy_211);
/home/brobey/GlobalSums/globalsums.c:597:7: missed: statement clobbers memory: __builtin_putchar (10);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, tstart_cpu_2(D));
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:617:17: missed: statement clobbers memory: _1 = log10 (var_13(D));
/home/brobey/GlobalSums/globalsums.c:620:21: missed: statement clobbers memory: mult_22 = pow (1.0e+1, _3);
/home/brobey/GlobalSums/globalsums.c:623:20: missed: statement clobbers memory: div_19 = pow (1.0e+1, _7);
/home/brobey/GlobalSums/globalsums.c:630:23: missed: not vectorized: more than one data ref in stmt: bitmask = *.LC0;
[ 10%] Building C object CMakeFiles/globalsums.dir/do_kahan_sum.c.o
/home/brobey/GlobalSums/do_kahan_sum.c:10:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_kahan_sum.c:13:59: missed: not vectorized: unsupported use in stmt.
[ 15%] Building C object CMakeFiles/globalsums.dir/serial_sum_novec.c.o
[ 20%] Building C object CMakeFiles/globalsums.dir/do_kahan_sum_omp.c.o
/home/brobey/GlobalSums/do_kahan_sum_omp.c:10:31: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_kahan_sum_omp.c:10:9: missed: not vectorized: number of iterations cannot be computed.
/home/brobey/GlobalSums/do_kahan_sum_omp.c:19:10: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_kahan_sum_omp.c:21:62: missed: not vectorized: unsupported use in stmt.
/home/brobey/GlobalSums/do_kahan_sum_omp.c:10:9: missed: statement clobbers memory: _46 = __sync_val_compare_and_swap_8 (_39, _4, _44);
/home/brobey/GlobalSums/do_kahan_sum_omp.c:10:9: missed: statement clobbers memory: __builtin_GOMP_barrier ();
/home/brobey/GlobalSums/do_kahan_sum_omp.c:26:9: missed: statement clobbers memory: __builtin_GOMP_barrier ();
/home/brobey/GlobalSums/do_kahan_sum_omp.c:10:9: missed: statement clobbers memory: _41 = __atomic_load_8 (_39, 0);
/home/brobey/GlobalSums/do_kahan_sum_omp.c:10:9: missed: statement clobbers memory: _46 = __sync_val_compare_and_swap_8 (_39, _4, _44);
/home/brobey/GlobalSums/do_kahan_sum_omp.c:1:8: missed: statement clobbers memory: __builtin_GOMP_parallel (do_kahan_sum_omp._omp_fn.0, &.omp_data_o.3, 0, 0);
[ 25%] Building C object CMakeFiles/globalsums.dir/do_kahan_sum_omp_wbittrunc.c.o
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:23:10: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:25:62: missed: not vectorized: unsupported use in stmt.
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:14:9: missed: statement clobbers memory: __builtin_GOMP_barrier ();
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:37:9: missed: statement clobbers memory: __builtin_GOMP_barrier ();
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:14:9: missed: statement clobbers memory: __builtin_GOMP_atomic_start ();
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:14:9: missed: statement clobbers memory: __builtin_GOMP_atomic_end ();
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:14:9: optimized: basic block part vectorized using 16 byte vectors
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:4:8: missed: statement clobbers memory: __builtin_GOMP_parallel (do_kahan_sum_omp_wbittrunc._omp_fn.0, &.omp_data_o.3, 0, 0);
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:4:8: missed: statement clobbers memory: __builtin_GOMP_parallel (do_kahan_sum_omp_wbittrunc._omp_fn.0, &.omp_data_o.3, 0, 0);
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:46:10: missed: statement clobbers memory: sum_13 = bittruncate (sum_9, nbits_11(D));
[ 30%] Building C object CMakeFiles/globalsums.dir/do_knuth_sum.c.o
/home/brobey/GlobalSums/do_knuth_sum.c:13:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_knuth_sum.c:15:9: missed: not vectorized: unsupported use in stmt.
[ 35%] Building C object CMakeFiles/globalsums.dir/do_ldsum.c.o
/home/brobey/GlobalSums/do_ldsum.c:5:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_ldsum.c:1:13: missed: not vectorized: unsupported data-type long double
[ 40%] Building C object CMakeFiles/globalsums.dir/do_ldsum_wbittrunc.c.o
/home/brobey/GlobalSums/do_ldsum_wbittrunc.c:8:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_ldsum_wbittrunc.c:4:13: missed: not vectorized: unsupported data-type long double
/home/brobey/GlobalSums/do_ldsum_wbittrunc.c:12:12: missed: statement clobbers memory: _7 = bittruncate (prephitmp_37, nbits_13(D));
[ 45%] Building C object CMakeFiles/globalsums.dir/do_ldsum_wdigittrunc.c.o
/home/brobey/GlobalSums/do_ldsum_wdigittrunc.c:7:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_ldsum_wdigittrunc.c:3:13: missed: not vectorized: unsupported data-type long double
/home/brobey/GlobalSums/do_ldsum_wdigittrunc.c:11:12: missed: statement clobbers memory: _7 = digitround (prephitmp_37, ndigits_13(D));
[ 50%] Building C object CMakeFiles/globalsums.dir/do_pair_sum.c.o
/home/brobey/GlobalSums/do_pair_sum.c:14:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_pair_sum.c:14:4: missed: not vectorized: control flow in loop.
/home/brobey/GlobalSums/do_pair_sum.c:16:7: optimized: loop vectorized using 16 byte vectors
/home/brobey/GlobalSums/do_pair_sum.c:16:7: optimized:  loop versioned for vectorization because of possible aliasing
/home/brobey/GlobalSums/do_pair_sum.c:10:4: optimized: loop vectorized using 16 byte vectors
/home/brobey/GlobalSums/do_pair_sum.c:16:7: optimized: loop turned into non-loop; it never loops
/home/brobey/GlobalSums/do_pair_sum.c:10:4: optimized: loop turned into non-loop; it never loops
/home/brobey/GlobalSums/do_pair_sum.c:7:30: missed: statement clobbers memory: pwsum_37 = malloc (_3);
/home/brobey/GlobalSums/do_pair_sum.c:11:21: missed: not vectorized: more than one data ref in stmt: vect_array.29 = .LOAD_LANES (MEM[(double *)vectp_var.27_139]);
/home/brobey/GlobalSums/do_pair_sum.c:17:26: missed: not vectorized: more than one data ref in stmt: vect_array.17 = .LOAD_LANES (MEM[(double *)vectp_pwsum.15_101]);
/home/brobey/GlobalSums/do_pair_sum.c:14:23: missed: statement clobbers memory: _26 = log2 (_86);
/home/brobey/GlobalSums/do_pair_sum.c:22:4: missed: statement clobbers memory: free (pwsum_37);
[ 55%] Building C object CMakeFiles/globalsums.dir/do_sum.c.o
/home/brobey/GlobalSums/do_sum.c:5:9: optimized: Loop 1 distributed: split to 0 loops and 1 library calls.
/home/brobey/GlobalSums/do_sum.c:5:9: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_sum.c:5:9: missed: not vectorized: unsupported data-type
/home/brobey/GlobalSums/do_sum.c:7:7: optimized: loop vectorized using 16 byte vectors
/home/brobey/GlobalSums/do_sum.c:1:8: optimized: loop with 1 iterations completely unrolled (header execution count 105119324)
/home/brobey/GlobalSums/do_sum.c:1:8: optimized: loop turned into non-loop; it never loops
/home/brobey/GlobalSums/do_sum.c:1:8: missed: statement clobbers memory: __builtin_memset (&D.3541, 0, _32);
[ 60%] Building C object CMakeFiles/globalsums.dir/do_sum_omp.c.o
/home/brobey/GlobalSums/do_sum_omp.c:5:35: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_sum_omp.c:5:9: missed: not vectorized: number of iterations cannot be computed.
/home/brobey/GlobalSums/do_sum_omp.c:7:7: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_sum_omp.c:7:7: missed: not vectorized: unsupported data-type
/home/brobey/GlobalSums/do_sum_omp.c:5:9: missed: statement clobbers memory: _35 = __sync_val_compare_and_swap_8 (_28, _6, _33);
/home/brobey/GlobalSums/do_sum_omp.c:5:9: missed: statement clobbers memory: _30 = __atomic_load_8 (_28, 0);
/home/brobey/GlobalSums/do_sum_omp.c:5:9: missed: statement clobbers memory: _35 = __sync_val_compare_and_swap_8 (_28, _6, _33);
/home/brobey/GlobalSums/do_sum_omp.c:1:8: missed: statement clobbers memory: __builtin_GOMP_parallel (do_sum_omp._omp_fn.0, &.omp_data_o.3, 0, 0);
[ 65%] Building C object CMakeFiles/globalsums.dir/do_sum_omp_wbittrunc.c.o
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:8:35: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:8:9: missed: not vectorized: number of iterations cannot be computed.
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:10:7: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:10:7: missed: not vectorized: unsupported data-type
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:8:9: missed: statement clobbers memory: _35 = __sync_val_compare_and_swap_8 (_28, _6, _33);
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:8:9: missed: statement clobbers memory: _30 = __atomic_load_8 (_28, 0);
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:8:9: missed: statement clobbers memory: _35 = __sync_val_compare_and_swap_8 (_28, _6, _33);
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:4:8: missed: statement clobbers memory: __builtin_GOMP_parallel (do_sum_omp_wbittrunc._omp_fn.0, &.omp_data_o.3, 0, 0);
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:13:10: missed: statement clobbers memory: sum_12 = bittruncate (sum_8, nbits_10(D));
[ 70%] Building C object CMakeFiles/globalsums.dir/do_sum_wbittrunc.c.o
/home/brobey/GlobalSums/do_sum_wbittrunc.c:8:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_sum_wbittrunc.c:8:4: missed: not vectorized: unsupported data-type
/home/brobey/GlobalSums/do_sum_wbittrunc.c:12:10: missed: statement clobbers memory: sum_12 = bittruncate (sum_18, nbits_10(D));
[ 75%] Building C object CMakeFiles/globalsums.dir/do_sum_wdigittrunc.c.o
/home/brobey/GlobalSums/do_sum_wdigittrunc.c:7:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_sum_wdigittrunc.c:7:4: missed: not vectorized: unsupported data-type
/home/brobey/GlobalSums/do_sum_wdigittrunc.c:11:10: missed: statement clobbers memory: sum_12 = digitround (sum_18, ndigits_10(D));
[ 80%] Building C object CMakeFiles/globalsums.dir/kahan_gcc_vector.c.o
/home/brobey/GlobalSums/kahan_gcc_vector.c:30:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/kahan_gcc_vector.c:33:63: missed: not vectorized: unsupported use in stmt.
/home/brobey/GlobalSums/kahan_gcc_vector.c:11:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/kahan_gcc_vector.c:12:14: missed: not vectorized: no vectype for stmt: var_v_28 = MEM[(vec4d *)_3];
 scalar_type: vec4d
/home/brobey/GlobalSums/kahan_gcc_vector.c:30:4: optimized: loop with 3 iterations completely unrolled (header execution count 118111601)
[ 85%] Building C object CMakeFiles/globalsums.dir/kahan_gcc_vector8.c.o
/home/brobey/GlobalSums/kahan_gcc_vector8.c:29:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/kahan_gcc_vector8.c:32:63: missed: not vectorized: unsupported use in stmt.
/home/brobey/GlobalSums/kahan_gcc_vector8.c:10:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/kahan_gcc_vector8.c:11:14: missed: not vectorized: no vectype for stmt: var_v_28 = MEM[(vec8d *)_3];
 scalar_type: vec8d
/home/brobey/GlobalSums/kahan_gcc_vector8.c:29:4: optimized: loop with 7 iterations completely unrolled (header execution count 118111604)
[ 90%] Building C object CMakeFiles/globalsums.dir/knuth_gcc_vector.c.o
/home/brobey/GlobalSums/knuth_gcc_vector.c:30:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/knuth_gcc_vector.c:33:12: missed: not vectorized: unsupported use in stmt.
/home/brobey/GlobalSums/knuth_gcc_vector.c:11:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/knuth_gcc_vector.c:12:13: missed: not vectorized: no vectype for stmt: var_v_28 = MEM[(vec4d *)_3];
 scalar_type: vec4d
/home/brobey/GlobalSums/knuth_gcc_vector.c:30:4: optimized: loop with 3 iterations completely unrolled (header execution count 118111601)
[ 95%] Building C object CMakeFiles/globalsums.dir/knuth_gcc_vector8.c.o
/home/brobey/GlobalSums/knuth_gcc_vector8.c:30:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/knuth_gcc_vector8.c:33:12: missed: not vectorized: unsupported use in stmt.
/home/brobey/GlobalSums/knuth_gcc_vector8.c:11:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/knuth_gcc_vector8.c:12:13: missed: not vectorized: no vectype for stmt: var_v_28 = MEM[(vec8d *)_3];
 scalar_type: vec8d
/home/brobey/GlobalSums/knuth_gcc_vector8.c:30:4: optimized: loop with 7 iterations completely unrolled (header execution count 118111604)
[100%] Linking C executable globalsums
[100%] Built target globalsums
--- max num openmp threads: 256
--- num openmp threads in parallel region: 256
SETTINGS INFO -- ncells 16 log 4 ndigits 3 ndigitsld 0 nbits 8 nbitsld 2
Initializing mesh with Leblanc problem, high values first
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Serial sum
  accurate sum 0.8000000008      sum 0.8000000008000001 diff   1.11e-16 relative diff  1.388e-16 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000003   Serial sum with digit truncation
  accurate sum 0.8000000007999972 sum 0.8000000007999972 diff          0 relative diff          0 runtime 0.000002   Serial sum with bit truncation
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000002   Serial sum with long double accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000003   Serial sum with long double accumulator with ndigit truncation
  accurate sum 0.8000000007999999 sum 0.8000000007999999 diff          0 relative diff          0 runtime 0.000002   Serial sum with long double accumulator with bit truncation
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double kahan sum accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 0.8000000008      sum 0.8000000007999999 diff  -1.11e-16 relative diff -1.388e-16 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double knuth sum accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000001   8 wide GCC vector extensions Knuth sum
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000003   Pair-wise sum


  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.003680   OpenMP sum
  accurate sum 0.8000000007999972 sum 0.8000000007999972 diff          0 relative diff          0 runtime 0.004294   OpenMP sum with bit truncation
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.009653   OpenMP sum with double double kahan sum accumulator
  accurate sum 0.8000000007999999 sum 0.8000000007999999 diff          0 relative diff          0 runtime 0.008674   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 32 log 5 ndigits 4 ndigitsld 1 nbits 9 nbitsld 3
Initializing mesh with Leblanc problem, high values first
  accurate sum 1.6000000016      sum 1.6000000016      diff  4.441e-16 relative diff  2.776e-16 runtime 0.000000   Serial sum
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000001   Serial sum with digit truncation
  accurate sum 1.600000001599938 sum 1.600000001599938 diff          0 relative diff          0 runtime 0.000000   Serial sum with bit truncation
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000003   Serial sum with long double accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000004   Serial sum with long double accumulator with ndigit truncation
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000003   Serial sum with long double accumulator with bit truncation
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double kahan sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff  -2.22e-16 relative diff -1.388e-16 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000001   Serial sum with double double knuth sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   8 wide GCC vector extensions Knuth sum
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000001   Pair-wise sum


  accurate sum 1.6000000016      sum 1.600000001600001 diff  6.661e-16 relative diff  4.163e-16 runtime 0.004331   OpenMP sum
  accurate sum 1.600000001599994 sum 1.600000001599994 diff          0 relative diff          0 runtime 0.004315   OpenMP sum with bit truncation
  accurate sum 1.6000000016      sum 1.600000001600001 diff  6.661e-16 relative diff  4.163e-16 runtime 0.010772   OpenMP sum with double double kahan sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.008433   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 64 log 6 ndigits 4 ndigitsld 1 nbits 9 nbitsld 3
Initializing mesh with Leblanc problem, high values first
  accurate sum 3.2000000032      sum 3.200000003200002 diff  1.776e-15 relative diff  5.551e-16 runtime 0.000000   Serial sum
  accurate sum 3.2000000032      sum 3.200000003200001 diff  8.882e-16 relative diff  2.776e-16 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000001   Serial sum with digit truncation
  accurate sum 3.200000003199875 sum 3.200000003199875 diff          0 relative diff          0 runtime 0.000001   Serial sum with bit truncation
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000006   Serial sum with long double accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000007   Serial sum with long double accumulator with ndigit truncation
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000006   Serial sum with long double accumulator with bit truncation
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000001   Serial sum with double double kahan sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff -4.441e-16 relative diff -1.388e-16 runtime 0.000001   8 wide GCC vector extensions Kahan sum
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000001   Serial sum with double double knuth sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000001   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000001   8 wide GCC vector extensions Knuth sum
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000001   Pair-wise sum


  accurate sum 3.2000000032      sum 3.200000003200002 diff   2.22e-15 relative diff  6.939e-16 runtime 0.004836   OpenMP sum
  accurate sum 3.200000003199989 sum 3.200000003199989 diff          0 relative diff          0 runtime 0.004371   OpenMP sum with bit truncation
  accurate sum 3.2000000032      sum 3.200000003200002 diff   2.22e-15 relative diff  6.939e-16 runtime 0.007536   OpenMP sum with double double kahan sum accumulator
  accurate sum 3.2000000032      sum 3.200000003200001 diff  1.776e-15 relative diff  5.551e-16 runtime 0.007258   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 128 log 7 ndigits 4 ndigitsld 1 nbits 11 nbitsld 4
Initializing mesh with Leblanc problem, high values first
  accurate sum 6.4000000064      sum 6.400000006399994 diff -6.217e-15 relative diff -9.714e-16 runtime 0.000000   Serial sum
  accurate sum 6.4000000064      sum 6.400000006400004 diff  3.553e-15 relative diff  5.551e-16 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000001   Serial sum with digit truncation
  accurate sum 6.400000006398841 sum 6.400000006398841 diff          0 relative diff          0 runtime 0.000001   Serial sum with bit truncation
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000004   Serial sum with long double accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000005   Serial sum with long double accumulator with ndigit truncation
  accurate sum 6.400000006399992 sum 6.400000006399992 diff          0 relative diff          0 runtime 0.000004   Serial sum with long double accumulator with bit truncation
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000001   Serial sum with double double kahan sum accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000001   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 6.4000000064      sum 6.400000006399999 diff -8.882e-16 relative diff -1.388e-16 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000002   Serial sum with double double knuth sum accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000001   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000001   8 wide GCC vector extensions Knuth sum
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000001   Pair-wise sum


  accurate sum 6.4000000064      sum 6.400000006399995 diff -5.329e-15 relative diff -8.327e-16 runtime 0.003701   OpenMP sum
  accurate sum 6.400000006399978 sum 6.400000006399978 diff          0 relative diff          0 runtime 0.003301   OpenMP sum with bit truncation
  accurate sum 6.4000000064      sum 6.400000006399995 diff -5.329e-15 relative diff -8.327e-16 runtime 0.005654   OpenMP sum with double double kahan sum accumulator
  accurate sum 6.400000006399999 sum 6.400000006399992 diff -7.105e-15 relative diff  -1.11e-15 runtime 0.007805   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 256 log 8 ndigits 4 ndigitsld 1 nbits 12 nbitsld 4
Initializing mesh with Leblanc problem, high values first
  accurate sum 12.8000000128     sum 12.80000001279997 diff -2.842e-14 relative diff  -2.22e-15 runtime 0.000001   Serial sum
  accurate sum 12.8000000128     sum 12.80000001279999 diff -1.243e-14 relative diff -9.714e-16 runtime 0.000001   Serial sum (OpenMP SIMD pragma)
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000003   Serial sum with digit truncation
  accurate sum 12.80000001279404 sum 12.80000001279404 diff          0 relative diff          0 runtime 0.000001   Serial sum with bit truncation
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000017   Serial sum with long double accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000017   Serial sum with long double accumulator with ndigit truncation
  accurate sum 12.80000001279998 sum 12.80000001279998 diff          0 relative diff          0 runtime 0.000017   Serial sum with long double accumulator with bit truncation
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000002   Serial sum with double double kahan sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000001   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff -1.776e-15 relative diff -1.388e-16 runtime 0.000001   8 wide GCC vector extensions Kahan sum
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000004   Serial sum with double double knuth sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000002   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000002   8 wide GCC vector extensions Knuth sum
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000002   Pair-wise sum


  accurate sum 12.8000000128     sum 12.80000001279997 diff -2.665e-14 relative diff -2.082e-15 runtime 0.003099   OpenMP sum
  accurate sum 12.8000000127995  sum 12.8000000127995  diff          0 relative diff          0 runtime 0.002309   OpenMP sum with bit truncation
  accurate sum 12.8000000128     sum 12.80000001279997 diff -2.665e-14 relative diff -2.082e-15 runtime 0.004870   OpenMP sum with double double kahan sum accumulator
  accurate sum 12.8000000128     sum 12.80000001279997 diff -2.842e-14 relative diff  -2.22e-15 runtime 0.005667   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 512 log 9 ndigits 4 ndigitsld 1 nbits 13 nbitsld 5
Initializing mesh with Leblanc problem, high values first
  accurate sum 25.6000000256     sum 25.60000002559964 diff -3.588e-13 relative diff -1.402e-14 runtime 0.000002   Serial sum
  accurate sum 25.6000000256     sum 25.60000002559994 diff -5.684e-14 relative diff  -2.22e-15 runtime 0.000001   Serial sum (OpenMP SIMD pragma)
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000003   Serial sum with digit truncation
  accurate sum 25.60000002558809 sum 25.60000002558809 diff          0 relative diff          0 runtime 0.000002   Serial sum with bit truncation
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000044   Serial sum with long double accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000044   Serial sum with long double accumulator with ndigit truncation
  accurate sum 25.60000002559991 sum 25.60000002559991 diff          0 relative diff          0 runtime 0.000044   Serial sum with long double accumulator with bit truncation
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000004   Serial sum with double double kahan sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000002   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff -3.553e-15 relative diff -1.388e-16 runtime 0.000002   8 wide GCC vector extensions Kahan sum
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000008   Serial sum with double double knuth sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000003   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000003   8 wide GCC vector extensions Knuth sum
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000004   Pair-wise sum


  accurate sum 25.6000000256     sum 25.60000002559995 diff -5.329e-14 relative diff -2.082e-15 runtime 0.003347   OpenMP sum
  accurate sum 25.600000025599   sum 25.600000025599   diff          0 relative diff          0 runtime 0.002370   OpenMP sum with bit truncation
  accurate sum 25.6000000256     sum 25.60000002559995 diff -5.329e-14 relative diff -2.082e-15 runtime 0.004534   OpenMP sum with double double kahan sum accumulator
  accurate sum 25.6000000256     sum 25.60000002559994 diff -5.684e-14 relative diff  -2.22e-15 runtime 0.003696   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 1024 log 10 ndigits 5 ndigitsld 2 nbits 14 nbitsld 6
Initializing mesh with Leblanc problem, high values first
  accurate sum 51.2000000512     sum 51.20000005120137 diff  1.371e-12 relative diff  2.678e-14 runtime 0.000003   Serial sum
  accurate sum 51.2000000512     sum 51.20000005119928 diff -7.176e-13 relative diff -1.402e-14 runtime 0.000002   Serial sum (OpenMP SIMD pragma)
  accurate sum 51.200000051      sum 51.200000051      diff          0 relative diff          0 runtime 0.000004   Serial sum with digit truncation
  accurate sum 51.20000005117618 sum 51.20000005117618 diff          0 relative diff          0 runtime 0.000003   Serial sum with bit truncation
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000079   Serial sum with long double accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000087   Serial sum with long double accumulator with ndigit truncation
  accurate sum 51.20000005119982 sum 51.20000005119982 diff          0 relative diff          0 runtime 0.000087   Serial sum with long double accumulator with bit truncation
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000009   Serial sum with double double kahan sum accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000004   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 51.2000000512     sum 51.20000005119999 diff -7.105e-15 relative diff -1.388e-16 runtime 0.000004   8 wide GCC vector extensions Kahan sum
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000017   Serial sum with double double knuth sum accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000005   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000005   8 wide GCC vector extensions Knuth sum
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000005   Pair-wise sum


  accurate sum 51.2000000512     sum 51.20000005119989 diff -1.066e-13 relative diff -2.082e-15 runtime 0.000704   OpenMP sum
  accurate sum 51.20000005119073 sum 51.20000005119073 diff          0 relative diff          0 runtime 0.000474   OpenMP sum with bit truncation
  accurate sum 51.2000000512     sum 51.20000005119989 diff -1.066e-13 relative diff -2.082e-15 runtime 0.000969   OpenMP sum with double double kahan sum accumulator
  accurate sum 51.20000005119999 sum 51.20000005119988 diff -1.137e-13 relative diff  -2.22e-15 runtime 0.001015   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 2048 log 11 ndigits 5 ndigitsld 2 nbits 15 nbitsld 6
Initializing mesh with Leblanc problem, high values first
  accurate sum 102.4000001024    sum 102.4000001024003 diff  2.842e-13 relative diff  2.776e-15 runtime 0.000006   Serial sum
  accurate sum 102.4000001024    sum 102.4000001024027 diff  2.743e-12 relative diff  2.678e-14 runtime 0.000003   Serial sum (OpenMP SIMD pragma)
  accurate sum 102.4000001       sum 102.4000001       diff          0 relative diff          0 runtime 0.000007   Serial sum with digit truncation
  accurate sum 102.4000001023524 sum 102.4000001023524 diff          0 relative diff          0 runtime 0.000006   Serial sum with bit truncation
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000172   Serial sum with long double accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000172   Serial sum with long double accumulator with ndigit truncation
  accurate sum 102.4000001023996 sum 102.4000001023996 diff          0 relative diff          0 runtime 0.000173   Serial sum with long double accumulator with bit truncation
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000017   Serial sum with double double kahan sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000007   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff -1.421e-14 relative diff -1.388e-16 runtime 0.000007   8 wide GCC vector extensions Kahan sum
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000034   Serial sum with double double knuth sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000011   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000009   8 wide GCC vector extensions Knuth sum
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000009   Pair-wise sum


  accurate sum 102.4000001024    sum 102.4000001023998 diff -2.274e-13 relative diff  -2.22e-15 runtime 0.000589   OpenMP sum
  accurate sum 102.4000001023524 sum 102.4000001023524 diff          0 relative diff          0 runtime 0.000588   OpenMP sum with bit truncation
  accurate sum 102.4000001024    sum 102.4000001023998 diff -2.132e-13 relative diff -2.082e-15 runtime 0.000841   OpenMP sum with double double kahan sum accumulator
  accurate sum 102.4000001024    sum 102.4000001023998 diff -2.274e-13 relative diff  -2.22e-15 runtime 0.001035   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 4096 log 12 ndigits 5 ndigitsld 2 nbits 15 nbitsld 7
Initializing mesh with Leblanc problem, high values first
  accurate sum 204.8000002048    sum 204.8000002047672 diff  -3.28e-11 relative diff -1.601e-13 runtime 0.000012   Serial sum
  accurate sum 204.8000002048    sum 204.8000002048006 diff  5.684e-13 relative diff  2.776e-15 runtime 0.000006   Serial sum (OpenMP SIMD pragma)
  accurate sum 204.8000002       sum 204.8000002       diff          0 relative diff          0 runtime 0.000014   Serial sum with digit truncation
  accurate sum 204.8000002047047 sum 204.8000002047047 diff          0 relative diff          0 runtime 0.000012   Serial sum with bit truncation
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000182   Serial sum with long double accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000133   Serial sum with long double accumulator with ndigit truncation
  accurate sum 204.8000002047993 sum 204.8000002047993 diff          0 relative diff          0 runtime 0.000131   Serial sum with long double accumulator with bit truncation
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000034   Serial sum with double double kahan sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000014   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff -2.842e-14 relative diff -1.388e-16 runtime 0.000007   8 wide GCC vector extensions Kahan sum
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000067   Serial sum with double double knuth sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000021   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000011   8 wide GCC vector extensions Knuth sum
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000006   Pair-wise sum


  accurate sum 204.8000002048    sum 204.8000002047996 diff -4.263e-13 relative diff -2.082e-15 runtime 0.000585   OpenMP sum
  accurate sum 204.8000002047047 sum 204.8000002047047 diff          0 relative diff          0 runtime 0.000602   OpenMP sum with bit truncation
  accurate sum 204.8000002048    sum 204.8000002047996 diff -4.263e-13 relative diff -2.082e-15 runtime 0.000843   OpenMP sum with double double kahan sum accumulator
  accurate sum 204.8000002048    sum 204.8000002047995 diff -4.547e-13 relative diff  -2.22e-15 runtime 0.001045   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 8192 log 13 ndigits 5 ndigitsld 2 nbits 17 nbitsld 7
Initializing mesh with Leblanc problem, high values first
  accurate sum 409.6000004096    sum 409.6000004095737 diff -2.626e-11 relative diff -6.412e-14 runtime 0.000026   Serial sum
  accurate sum 409.6000004096    sum 409.6000004095344 diff  -6.56e-11 relative diff -1.601e-13 runtime 0.000012   Serial sum (OpenMP SIMD pragma)
  accurate sum 409.60000041      sum 409.60000041      diff          0 relative diff          0 runtime 0.000024   Serial sum with digit truncation
  accurate sum 409.6000004038215 sum 409.6000004038215 diff          0 relative diff          0 runtime 0.000024   Serial sum with bit truncation
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000686   Serial sum with long double accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000344   Serial sum with long double accumulator with ndigit truncation
  accurate sum 409.6000004095986 sum 409.6000004095986 diff          0 relative diff          0 runtime 0.000262   Serial sum with long double accumulator with bit truncation
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000067   Serial sum with double double kahan sum accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000028   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 409.6000004096    sum 409.6000004095999 diff -5.684e-14 relative diff -1.388e-16 runtime 0.000013   8 wide GCC vector extensions Kahan sum
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000134   Serial sum with double double knuth sum accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000041   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000022   8 wide GCC vector extensions Knuth sum
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000011   Pair-wise sum


  accurate sum 409.6000004096    sum 409.6000004095991 diff -8.527e-13 relative diff -2.082e-15 runtime 0.000597   OpenMP sum
  accurate sum 409.6000004094094 sum 409.6000004094094 diff          0 relative diff          0 runtime 0.000602   OpenMP sum with bit truncation
  accurate sum 409.6000004096    sum 409.6000004095991 diff -8.527e-13 relative diff -2.082e-15 runtime 0.000871   OpenMP sum with double double kahan sum accumulator
  accurate sum 409.6000004095999 sum 409.600000409599  diff -9.095e-13 relative diff  -2.22e-15 runtime 0.001013   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 16384 log 14 ndigits 5 ndigitsld 2 nbits 18 nbitsld 8
Initializing mesh with Leblanc problem, high values first
  accurate sum 819.2000008192    sum 819.2000008196816 diff  4.816e-10 relative diff  5.879e-13 runtime 0.000050   Serial sum
  accurate sum 819.2000008192    sum 819.2000008191475 diff -5.252e-11 relative diff -6.412e-14 runtime 0.000025   Serial sum (OpenMP SIMD pragma)
  accurate sum 819.20000082      sum 819.20000082      diff          0 relative diff          0 runtime 0.000050   Serial sum with digit truncation
  accurate sum 819.2000007927418 sum 819.2000007927418 diff          0 relative diff          0 runtime 0.000050   Serial sum with bit truncation
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.001014   Serial sum with long double accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000526   Serial sum with long double accumulator with ndigit truncation
  accurate sum 819.2000008191972 sum 819.2000008191972 diff          0 relative diff          0 runtime 0.000523   Serial sum with long double accumulator with bit truncation
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000134   Serial sum with double double kahan sum accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000055   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 819.2000008192    sum 819.2000008191999 diff -1.137e-13 relative diff -1.388e-16 runtime 0.000026   8 wide GCC vector extensions Kahan sum
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000268   Serial sum with double double knuth sum accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000082   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000044   8 wide GCC vector extensions Knuth sum
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000047   Pair-wise sum


  accurate sum 819.2000008192    sum 819.2000008191981 diff -1.933e-12 relative diff -2.359e-15 runtime 0.000619   OpenMP sum
  accurate sum 819.2000008188188 sum 819.2000008188188 diff          0 relative diff          0 runtime 0.000589   OpenMP sum with bit truncation
  accurate sum 819.2000008192    sum 819.2000008191983 diff -1.705e-12 relative diff -2.082e-15 runtime 0.000860   OpenMP sum with double double kahan sum accumulator
  accurate sum 819.2000008191999 sum 819.2000008191981 diff -1.819e-12 relative diff  -2.22e-15 runtime 0.001077   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 32768 log 15 ndigits 6 ndigitsld 3 nbits 19 nbitsld 9
Initializing mesh with Leblanc problem, high values first
  accurate sum 1638.4000016384   sum 1638.400001638733 diff  3.331e-10 relative diff  2.033e-13 runtime 0.000091   Serial sum
  accurate sum 1638.4000016384   sum 1638.400001639363 diff  9.632e-10 relative diff  5.879e-13 runtime 0.000045   Serial sum (OpenMP SIMD pragma)
  accurate sum 1638.400002       sum 1638.400002       diff          0 relative diff          0 runtime 0.000091   Serial sum with digit truncation
  accurate sum 1638.400001525879 sum 1638.400001525879 diff          0 relative diff          0 runtime 0.000090   Serial sum with bit truncation
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.001077   Serial sum with long double accumulator
  accurate sum 1638.400001638    sum 1638.400001638    diff          0 relative diff          0 runtime 0.001054   Serial sum with long double accumulator with ndigit truncation
  accurate sum 1638.400001638336 sum 1638.400001638336 diff          0 relative diff          0 runtime 0.001049   Serial sum with long double accumulator with bit truncation
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000268   Serial sum with double double kahan sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000111   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff -2.274e-13 relative diff -1.388e-16 runtime 0.000056   8 wide GCC vector extensions Kahan sum
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000536   Serial sum with double double knuth sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000165   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000087   8 wide GCC vector extensions Knuth sum
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000051   Pair-wise sum


  accurate sum 1638.4000016384   sum 1638.400001638395 diff  -5.23e-12 relative diff -3.192e-15 runtime 0.000592   OpenMP sum
  accurate sum 1638.400001630187 sum 1638.400001630187 diff          0 relative diff          0 runtime 0.000540   OpenMP sum with bit truncation
  accurate sum 1638.4000016384   sum 1638.400001638397 diff -3.411e-12 relative diff -2.082e-15 runtime 0.000869   OpenMP sum with double double kahan sum accumulator
  accurate sum 1638.4000016384   sum 1638.400001638396 diff -3.638e-12 relative diff  -2.22e-15 runtime 0.001110   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 65536 log 16 ndigits 6 ndigitsld 3 nbits 20 nbitsld 9
Initializing mesh with Leblanc problem, high values first
  accurate sum 3276.8000032768   sum 3276.800003276371 diff -4.293e-10 relative diff  -1.31e-13 runtime 0.000200   Serial sum
  accurate sum 3276.8000032768   sum 3276.800003277466 diff  6.662e-10 relative diff  2.033e-13 runtime 0.000098   Serial sum (OpenMP SIMD pragma)
  accurate sum 3276.800003       sum 3276.800003       diff          0 relative diff          0 runtime 0.000201   Serial sum with digit truncation
  accurate sum 3276.800003051758 sum 3276.800003051758 diff          0 relative diff          0 runtime 0.000211   Serial sum with bit truncation
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.002088   Serial sum with long double accumulator
  accurate sum 3276.800003277    sum 3276.800003277    diff          0 relative diff          0 runtime 0.002095   Serial sum with long double accumulator with ndigit truncation
  accurate sum 3276.800003276672 sum 3276.800003276672 diff          0 relative diff          0 runtime 0.002088   Serial sum with long double accumulator with bit truncation
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000536   Serial sum with double double kahan sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000217   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff -4.547e-13 relative diff -1.388e-16 runtime 0.000110   8 wide GCC vector extensions Kahan sum
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.001080   Serial sum with double double knuth sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000328   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000175   8 wide GCC vector extensions Knuth sum
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000103   Pair-wise sum


  accurate sum 3276.8000032768   sum 3276.800003276805 diff  5.457e-12 relative diff  1.665e-15 runtime 0.000564   OpenMP sum
  accurate sum 3276.800003260374 sum 3276.800003260374 diff          0 relative diff          0 runtime 0.000563   OpenMP sum with bit truncation
  accurate sum 3276.8000032768   sum 3276.800003276793 diff -7.276e-12 relative diff  -2.22e-15 runtime 0.000843   OpenMP sum with double double kahan sum accumulator
  accurate sum 3276.8000032768   sum 3276.800003276792 diff -7.276e-12 relative diff  -2.22e-15 runtime 0.001128   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 131072 log 17 ndigits 6 ndigitsld 3 nbits 21 nbitsld 10
Initializing mesh with Leblanc problem, high values first
  accurate sum 6553.6000065536   sum 6553.600006562821 diff  9.221e-09 relative diff  1.407e-12 runtime 0.000403   Serial sum
  accurate sum 6553.6000065536   sum 6553.600006552741 diff -8.586e-10 relative diff  -1.31e-13 runtime 0.000179   Serial sum (OpenMP SIMD pragma)
  accurate sum 6553.600007       sum 6553.600007       diff          0 relative diff          0 runtime 0.000358   Serial sum with digit truncation
  accurate sum 6553.600006103516 sum 6553.600006103516 diff          0 relative diff          0 runtime 0.000358   Serial sum with bit truncation
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.004185   Serial sum with long double accumulator
  accurate sum 6553.600006554    sum 6553.600006554    diff          0 relative diff          0 runtime 0.004187   Serial sum with long double accumulator with ndigit truncation
  accurate sum 6553.600006553344 sum 6553.600006553344 diff          0 relative diff          0 runtime 0.004175   Serial sum with long double accumulator with bit truncation
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.001083   Serial sum with double double kahan sum accumulator
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000444   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 6553.6000065536   sum 6553.600006553599 diff -9.095e-13 relative diff -1.388e-16 runtime 0.000221   8 wide GCC vector extensions Kahan sum
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.002144   Serial sum with double double knuth sum accumulator
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000656   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000350   8 wide GCC vector extensions Knuth sum
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000209   Pair-wise sum


  accurate sum 6553.6000065536   sum 6553.600006553666 diff  6.639e-11 relative diff  1.013e-14 runtime 0.000620   OpenMP sum
  accurate sum 6553.600006461143 sum 6553.600006461143 diff          0 relative diff          0 runtime 0.000487   OpenMP sum with bit truncation
  accurate sum 6553.6000065536   sum 6553.600006553586 diff -1.364e-11 relative diff -2.082e-15 runtime 0.000967   OpenMP sum with double double kahan sum accumulator
  accurate sum 6553.600006553599 sum 6553.600006553585 diff -1.455e-11 relative diff  -2.22e-15 runtime 0.001071   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 262144 log 18 ndigits 6 ndigitsld 3 nbits 22 nbitsld 10
Initializing mesh with Leblanc problem, high values first
  accurate sum 13107.2000131072  sum 13107.20001314317 diff  3.597e-08 relative diff  2.745e-12 runtime 0.000724   Serial sum
  accurate sum 13107.2000131072  sum 13107.20001312564 diff  1.844e-08 relative diff  1.407e-12 runtime 0.000358   Serial sum (OpenMP SIMD pragma)
  accurate sum 13107.20001       sum 13107.20001       diff          0 relative diff          0 runtime 0.000716   Serial sum with digit truncation
  accurate sum 13107.20001220703 sum 13107.20001220703 diff          0 relative diff          0 runtime 0.000715   Serial sum with bit truncation
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.008359   Serial sum with long double accumulator
  accurate sum 13107.20001311    sum 13107.20001311    diff          0 relative diff          0 runtime 0.008373   Serial sum with long double accumulator with ndigit truncation
  accurate sum 13107.20001310669 sum 13107.20001310669 diff          0 relative diff          0 runtime 0.008358   Serial sum with long double accumulator with bit truncation
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.002144   Serial sum with double double kahan sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000894   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff -1.819e-12 relative diff -1.388e-16 runtime 0.000439   8 wide GCC vector extensions Kahan sum
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.004289   Serial sum with double double knuth sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.001311   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000698   8 wide GCC vector extensions Knuth sum
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000419   Pair-wise sum


  accurate sum 13107.2000131072  sum 13107.20001310698 diff -2.201e-10 relative diff -1.679e-14 runtime 0.000608   OpenMP sum
  accurate sum 13107.20001268387 sum 13107.20001268387 diff          0 relative diff          0 runtime 0.000535   OpenMP sum with bit truncation
  accurate sum 13107.2000131072  sum 13107.20001310717 diff -2.728e-11 relative diff -2.082e-15 runtime 0.001026   OpenMP sum with double double kahan sum accumulator
  accurate sum 13107.2000131072  sum 13107.20001310717 diff  -2.91e-11 relative diff  -2.22e-15 runtime 0.001120   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 524288 log 19 ndigits 6 ndigitsld 3 nbits 23 nbitsld 11
Initializing mesh with Leblanc problem, high values first
  accurate sum 26214.4000262144  sum 26214.40002564823 diff -5.662e-07 relative diff  -2.16e-11 runtime 0.001430   Serial sum
  accurate sum 26214.4000262144  sum 26214.40002628635 diff  7.195e-08 relative diff  2.745e-12 runtime 0.000715   Serial sum (OpenMP SIMD pragma)
  accurate sum 26214.40003       sum 26214.40003       diff          0 relative diff          0 runtime 0.001430   Serial sum with digit truncation
  accurate sum 26214.40002441406 sum 26214.40002441406 diff          0 relative diff          0 runtime 0.001430   Serial sum with bit truncation
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.016715   Serial sum with long double accumulator
  accurate sum 26214.40002621    sum 26214.40002621    diff          0 relative diff          0 runtime 0.016757   Serial sum with long double accumulator with ndigit truncation
  accurate sum 26214.40002620965 sum 26214.40002620965 diff          0 relative diff          0 runtime 0.016706   Serial sum with long double accumulator with bit truncation
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.004296   Serial sum with double double kahan sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.001786   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff -3.638e-12 relative diff -1.388e-16 runtime 0.000886   8 wide GCC vector extensions Kahan sum
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.008587   Serial sum with double double knuth sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.002624   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.001399   8 wide GCC vector extensions Knuth sum
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.000850   Pair-wise sum


  accurate sum 26214.4000262144  sum 26214.40002621341 diff -9.932e-10 relative diff -3.789e-14 runtime 0.000545   OpenMP sum
  accurate sum 26214.40002441406 sum 26214.40002441406 diff          0 relative diff          0 runtime 0.000485   OpenMP sum with bit truncation
  accurate sum 26214.4000262144  sum 26214.40002621435 diff -5.457e-11 relative diff -2.082e-15 runtime 0.001008   OpenMP sum with double double kahan sum accumulator
  accurate sum 26214.4000262144  sum 26214.40002621434 diff -5.821e-11 relative diff  -2.22e-15 runtime 0.001012   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 1048576 log 20 ndigits 7 ndigitsld 4 nbits 24 nbitsld 12
Initializing mesh with Leblanc problem, high values first
  accurate sum 52428.8000524288  sum 52428.80005292332 diff  4.945e-07 relative diff  9.432e-12 runtime 0.002859   Serial sum
  accurate sum 52428.8000524288  sum 52428.80005129646 diff -1.132e-06 relative diff  -2.16e-11 runtime 0.001439   Serial sum (OpenMP SIMD pragma)
  accurate sum 52428.8001        sum 52428.8001        diff          0 relative diff          0 runtime 0.002860   Serial sum with digit truncation
  accurate sum 52428.80004882812 sum 52428.80004882812 diff          0 relative diff          0 runtime 0.002859   Serial sum with bit truncation
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.033417   Serial sum with long double accumulator
  accurate sum 52428.8000524     sum 52428.8000524     diff          0 relative diff          0 runtime 0.033510   Serial sum with long double accumulator with ndigit truncation
  accurate sum 52428.8000524044  sum 52428.8000524044  diff          0 relative diff          0 runtime 0.033418   Serial sum with long double accumulator with bit truncation
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.008583   Serial sum with double double kahan sum accumulator
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.003564   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 52428.8000524288  sum 52428.80005242879 diff -7.276e-12 relative diff -1.388e-16 runtime 0.001770   8 wide GCC vector extensions Kahan sum
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.017163   Serial sum with double double knuth sum accumulator
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.005310   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.002792   8 wide GCC vector extensions Knuth sum
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.001702   Pair-wise sum


  accurate sum 52428.8000524288  sum 52428.80005243207 diff  3.267e-09 relative diff  6.231e-14 runtime 0.000703   OpenMP sum
  accurate sum 52428.80004882812 sum 52428.80004882812 diff          0 relative diff          0 runtime 0.000552   OpenMP sum with bit truncation
  accurate sum 52428.8000524288  sum 52428.80005242869 diff -1.091e-10 relative diff -2.082e-15 runtime 0.000918   OpenMP sum with double double kahan sum accumulator
  accurate sum 52428.80005242879 sum 52428.80005242868 diff -1.164e-10 relative diff  -2.22e-15 runtime 0.001191   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 2097152 log 21 ndigits 7 ndigitsld 4 nbits 25 nbitsld 12
Initializing mesh with Leblanc problem, high values first
  accurate sum 104857.6001048576 sum 104857.6001084272 diff   3.57e-06 relative diff  3.404e-11 runtime 0.005735   Serial sum
  accurate sum 104857.6001048576 sum 104857.6001058466 diff   9.89e-07 relative diff  9.432e-12 runtime 0.002863   Serial sum (OpenMP SIMD pragma)
  accurate sum 104857.6          sum 104857.6          diff          0 relative diff          0 runtime 0.005727   Serial sum with digit truncation
  accurate sum 104857.6000976562 sum 104857.6000976562 diff          0 relative diff          0 runtime 0.005719   Serial sum with bit truncation
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.066924   Serial sum with long double accumulator
  accurate sum 104857.600105     sum 104857.600105     diff          0 relative diff          0 runtime 0.067020   Serial sum with long double accumulator with ndigit truncation
  accurate sum 104857.6001048088 sum 104857.6001048088 diff          0 relative diff          0 runtime 0.066818   Serial sum with long double accumulator with bit truncation
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.017170   Serial sum with double double kahan sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.007113   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff -1.455e-11 relative diff -1.388e-16 runtime 0.003522   8 wide GCC vector extensions Kahan sum
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.034341   Serial sum with double double knuth sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.010569   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.005587   8 wide GCC vector extensions Knuth sum
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.003686   Pair-wise sum


  accurate sum 104857.6001048576 sum 104857.6001048726 diff  1.497e-08 relative diff  1.428e-13 runtime 0.000534   OpenMP sum
  accurate sum 104857.6000976562 sum 104857.6000976562 diff          0 relative diff          0 runtime 0.000608   OpenMP sum with bit truncation
  accurate sum 104857.6001048576 sum 104857.6001048574 diff -2.183e-10 relative diff -2.082e-15 runtime 0.000907   OpenMP sum with double double kahan sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048574 diff -2.328e-10 relative diff  -2.22e-15 runtime 0.001229   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 4194304 log 22 ndigits 7 ndigitsld 4 nbits 26 nbitsld 13
Initializing mesh with Leblanc problem, high values first
  accurate sum 209715.2002097152 sum 209715.2001908246 diff -1.889e-05 relative diff -9.008e-11 runtime 0.011513   Serial sum
  accurate sum 209715.2002097152 sum 209715.2002168543 diff  7.139e-06 relative diff  3.404e-11 runtime 0.005880   Serial sum (OpenMP SIMD pragma)
  accurate sum 209715.2          sum 209715.2          diff          0 relative diff          0 runtime 0.011472   Serial sum with digit truncation
  accurate sum 209715.19921875   sum 209715.19921875   diff          0 relative diff          0 runtime 0.011464   Serial sum with bit truncation
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.133695   Serial sum with long double accumulator
  accurate sum 209715.20021      sum 209715.20021      diff          0 relative diff          0 runtime 0.136679   Serial sum with long double accumulator with ndigit truncation
  accurate sum 209715.2002096176 sum 209715.2002096176 diff          0 relative diff          0 runtime 0.133687   Serial sum with long double accumulator with bit truncation
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.034339   Serial sum with double double kahan sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.014266   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff  -2.91e-11 relative diff -1.388e-16 runtime 0.007118   8 wide GCC vector extensions Kahan sum
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.068663   Serial sum with double double knuth sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.020989   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.011183   8 wide GCC vector extensions Knuth sum
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.009301   Pair-wise sum


  accurate sum 209715.2002097152 sum 209715.2002096651 diff -5.009e-08 relative diff -2.388e-13 runtime 0.000534   OpenMP sum
  accurate sum 209715.2001953125 sum 209715.2001953125 diff          0 relative diff          0 runtime 0.000571   OpenMP sum with bit truncation
  accurate sum 209715.2002097152 sum 209715.2002097148 diff -4.366e-10 relative diff -2.082e-15 runtime 0.001046   OpenMP sum with double double kahan sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097147 diff -4.657e-10 relative diff  -2.22e-15 runtime 0.001185   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 8388608 log 23 ndigits 7 ndigitsld 4 nbits 27 nbitsld 13
Initializing mesh with Leblanc problem, high values first
  accurate sum 419430.4004194304 sum 419430.400462431  diff    4.3e-05 relative diff  1.025e-10 runtime 0.023025   Serial sum
  accurate sum 419430.4004194304 sum 419430.4003816492 diff -3.778e-05 relative diff -9.008e-11 runtime 0.011794   Serial sum (OpenMP SIMD pragma)
  accurate sum 419430.4          sum 419430.4          diff          0 relative diff          0 runtime 0.022987   Serial sum with digit truncation
  accurate sum 419430.3984375    sum 419430.3984375    diff          0 relative diff          0 runtime 0.022971   Serial sum with bit truncation
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.267661   Serial sum with long double accumulator
  accurate sum 419430.400419     sum 419430.400419     diff          0 relative diff          0 runtime 0.268164   Serial sum with long double accumulator with ndigit truncation
  accurate sum 419430.4004192352 sum 419430.4004192352 diff          0 relative diff          0 runtime 0.270064   Serial sum with long double accumulator with bit truncation
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.068703   Serial sum with double double kahan sum accumulator
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.028578   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 419430.4004194304 sum 419430.4004194303 diff -5.821e-11 relative diff -1.388e-16 runtime 0.014422   8 wide GCC vector extensions Kahan sum
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.137347   Serial sum with double double knuth sum accumulator
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.041953   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.022357   8 wide GCC vector extensions Knuth sum
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.022146   Pair-wise sum


  accurate sum 419430.4004194304 sum 419430.4004191901 diff -2.403e-07 relative diff  -5.73e-13 runtime 0.002253   OpenMP sum
  accurate sum 419430.400390625  sum 419430.400390625  diff          0 relative diff          0 runtime 0.002217   OpenMP sum with bit truncation
  accurate sum 419430.4004194304 sum 419430.4004194295 diff -8.731e-10 relative diff -2.082e-15 runtime 0.004820   OpenMP sum with double double kahan sum accumulator
  accurate sum 419430.4004194303 sum 419430.4004194294 diff -9.313e-10 relative diff  -2.22e-15 runtime 0.005926   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 16777216 log 24 ndigits 7 ndigitsld 4 nbits 27 nbitsld 14
Initializing mesh with Leblanc problem, high values first
  accurate sum 838860.8008388608 sum 838860.800853056  diff   1.42e-05 relative diff  1.692e-11 runtime 0.046058   Serial sum
  accurate sum 838860.8008388608 sum 838860.800924862  diff    8.6e-05 relative diff  1.025e-10 runtime 0.023699   Serial sum (OpenMP SIMD pragma)
  accurate sum 838860.801        sum 838860.801        diff          0 relative diff          0 runtime 0.046016   Serial sum with digit truncation
  accurate sum 838860.796875     sum 838860.796875     diff          0 relative diff          0 runtime 0.045991   Serial sum with bit truncation
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.536147   Serial sum with long double accumulator
  accurate sum 838860.800839     sum 838860.800839     diff          0 relative diff          0 runtime 0.536926   Serial sum with long double accumulator with ndigit truncation
  accurate sum 838860.8008384705 sum 838860.8008384705 diff          0 relative diff          0 runtime 0.535045   Serial sum with long double accumulator with bit truncation
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.137443   Serial sum with double double kahan sum accumulator
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.057096   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 838860.8008388608 sum 838860.8008388607 diff -1.164e-10 relative diff -1.388e-16 runtime 0.028932   8 wide GCC vector extensions Kahan sum
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.274744   Serial sum with double double knuth sum accumulator
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.084021   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.044797   8 wide GCC vector extensions Knuth sum
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.047222   Pair-wise sum


  accurate sum 838860.8008388608 sum 838860.8008396669 diff  8.061e-07 relative diff  9.609e-13 runtime 0.002502   OpenMP sum
  accurate sum 838860.80078125   sum 838860.80078125   diff          0 relative diff          0 runtime 0.002750   OpenMP sum with bit truncation
  accurate sum 838860.8008388608 sum 838860.8008388591 diff -1.746e-09 relative diff -2.082e-15 runtime 0.006123   OpenMP sum with double double kahan sum accumulator
  accurate sum 838860.8008388607 sum 838860.8008388588 diff -1.863e-09 relative diff  -2.22e-15 runtime 0.005921   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 33554432 log 25 ndigits 8 ndigitsld 5 nbits 29 nbitsld 15
Initializing mesh with Leblanc problem, high values first
  accurate sum 1677721.601677722 sum 1677721.600413603 diff  -0.001264 relative diff -7.535e-10 runtime 0.092247   Serial sum
  accurate sum 1677721.601677722 sum 1677721.601706112 diff  2.839e-05 relative diff  1.692e-11 runtime 0.047716   Serial sum (OpenMP SIMD pragma)
  accurate sum 1677721.6         sum 1677721.6         diff          0 relative diff          0 runtime 0.092186   Serial sum with digit truncation
  accurate sum 1677721.5         sum 1677721.5         diff          0 relative diff          0 runtime 0.092193   Serial sum with bit truncation
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 1.070008   Serial sum with long double accumulator
  accurate sum 1677721.6017      sum 1677721.6017      diff          0 relative diff          0 runtime 1.075357   Serial sum with long double accumulator with ndigit truncation
  accurate sum 1677721.601676941 sum 1677721.601676941 diff          0 relative diff          0 runtime 1.070007   Serial sum with long double accumulator with bit truncation
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.274990   Serial sum with double double kahan sum accumulator
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.114915   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 1677721.601677722 sum 1677721.601677721 diff -2.328e-10 relative diff -1.388e-16 runtime 0.060845   8 wide GCC vector extensions Kahan sum
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.549695   Serial sum with double double knuth sum accumulator
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.168275   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.090550   8 wide GCC vector extensions Knuth sum
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.090856   Pair-wise sum


  accurate sum 1677721.601677722 sum 1677721.601681583 diff  3.861e-06 relative diff  2.302e-12 runtime 0.004747   OpenMP sum
  accurate sum 1677721.6015625   sum 1677721.6015625   diff          0 relative diff          0 runtime 0.006361   OpenMP sum with bit truncation
  accurate sum 1677721.601677722 sum 1677721.601677718 diff -3.492e-09 relative diff -2.082e-15 runtime 0.012669   OpenMP sum with double double kahan sum accumulator
  accurate sum 1677721.601677721 sum 1677721.601677718 diff -3.725e-09 relative diff  -2.22e-15 runtime 0.011242   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 67108864 log 26 ndigits 8 ndigitsld 5 nbits 30 nbitsld 15
Initializing mesh with Leblanc problem, high values first
  accurate sum 3355443.203355443 sum 3355443.201976103 diff  -0.001379 relative diff -4.111e-10 runtime 0.184478   Serial sum
  accurate sum 3355443.203355443 sum 3355443.200827206 diff  -0.002528 relative diff -7.535e-10 runtime 0.095587   Serial sum (OpenMP SIMD pragma)
  accurate sum 3355443.2         sum 3355443.2         diff          0 relative diff          0 runtime 0.184414   Serial sum with digit truncation
  accurate sum 3355443           sum 3355443           diff          0 relative diff          0 runtime 0.184409   Serial sum with bit truncation
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 2.143875   Serial sum with long double accumulator
  accurate sum 3355443.2034      sum 3355443.2034      diff          0 relative diff          0 runtime 2.145645   Serial sum with long double accumulator with ndigit truncation
  accurate sum 3355443.203353882 sum 3355443.203353882 diff          0 relative diff          0 runtime 2.142962   Serial sum with long double accumulator with bit truncation
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.550002   Serial sum with double double kahan sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.229731   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff -4.657e-10 relative diff -1.388e-16 runtime 0.117913   8 wide GCC vector extensions Kahan sum
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 1.099153   Serial sum with double double knuth sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.336785   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.181108   8 wide GCC vector extensions Knuth sum
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.185034   Pair-wise sum


  accurate sum 3355443.203355443 sum 3355443.203342512 diff -1.293e-05 relative diff -3.854e-12 runtime 0.006553   OpenMP sum
  accurate sum 3355443.1875      sum 3355443.1875      diff          0 relative diff          0 runtime 0.006616   OpenMP sum with bit truncation
  accurate sum 3355443.203355443 sum 3355443.203355436 diff -6.985e-09 relative diff -2.082e-15 runtime 0.016856   OpenMP sum with double double kahan sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355435 diff -7.451e-09 relative diff  -2.22e-15 runtime 0.013949   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 134217728 log 27 ndigits 8 ndigitsld 5 nbits 31 nbitsld 16
Initializing mesh with Leblanc problem, high values first
  accurate sum 6710886.406710886 sum 6710886.393382353 diff   -0.01333 relative diff -1.986e-09 runtime 0.368971   Serial sum
  accurate sum 6710886.406710886 sum 6710886.403952206 diff  -0.002759 relative diff -4.111e-10 runtime 0.191364   Serial sum (OpenMP SIMD pragma)
  accurate sum 6710886.4         sum 6710886.4         diff          0 relative diff          0 runtime 0.368861   Serial sum with digit truncation
  accurate sum 6710886           sum 6710886           diff          0 relative diff          0 runtime 0.371376   Serial sum with bit truncation
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 4.280974   Serial sum with long double accumulator
  accurate sum 6710886.4067      sum 6710886.4067      diff          0 relative diff          0 runtime 4.297029   Serial sum with long double accumulator with ndigit truncation
  accurate sum 6710886.406677246 sum 6710886.406677246 diff          0 relative diff          0 runtime 4.287198   Serial sum with long double accumulator with bit truncation
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 1.100171   Serial sum with double double kahan sum accumulator
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.459827   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 6710886.406710886 sum 6710886.406710885 diff -9.313e-10 relative diff -1.388e-16 runtime 0.236275   8 wide GCC vector extensions Kahan sum
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 2.198640   Serial sum with double double knuth sum accumulator
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.674329   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.363017   8 wide GCC vector extensions Knuth sum
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.387779   Pair-wise sum


  accurate sum 6710886.406710886 sum 6710886.40664912  diff -6.177e-05 relative diff -9.204e-12 runtime 0.009797   OpenMP sum
  accurate sum 6710886.375       sum 6710886.375       diff          0 relative diff          0 runtime 0.010076   OpenMP sum with bit truncation
  accurate sum 6710886.406710886 sum 6710886.406710871 diff  -1.49e-08 relative diff  -2.22e-15 runtime 0.019034   OpenMP sum with double double kahan sum accumulator
  accurate sum 6710886.406710885 sum 6710886.406710871 diff  -1.49e-08 relative diff  -2.22e-15 runtime 0.018484   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 268435456 log 28 ndigits 8 ndigitsld 5 nbits 32 nbitsld 16
Initializing mesh with Leblanc problem, high values first
  accurate sum 13421772.81342177 sum 13421772.76838235 diff   -0.04504 relative diff -3.356e-09 runtime 0.737910   Serial sum
  accurate sum 13421772.81342177 sum 13421772.78676471 diff   -0.02666 relative diff -1.986e-09 runtime 0.385401   Serial sum (OpenMP SIMD pragma)
  accurate sum 13421773          sum 13421773          diff          0 relative diff          0 runtime 0.737818   Serial sum with digit truncation
  accurate sum 13421768          sum 13421768          diff          0 relative diff          0 runtime 0.737774   Serial sum with bit truncation
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 8.564396   Serial sum with long double accumulator
  accurate sum 13421772.813      sum 13421772.813      diff          0 relative diff          0 runtime 8.583667   Serial sum with long double accumulator with ndigit truncation
  accurate sum 13421772.81335449 sum 13421772.81335449 diff          0 relative diff          0 runtime 8.566129   Serial sum with long double accumulator with bit truncation
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 2.206180   Serial sum with double double kahan sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.920721   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff -1.863e-09 relative diff -1.388e-16 runtime 0.473056   8 wide GCC vector extensions Kahan sum
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 4.403439   Serial sum with double double knuth sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 1.348992   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.726448   8 wide GCC vector extensions Knuth sum
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.781232   Pair-wise sum


  accurate sum 13421772.81342177 sum 13421772.8136286  diff  0.0002068 relative diff  1.541e-11 runtime 0.014870   OpenMP sum
  accurate sum 13421772.5        sum 13421772.5        diff          0 relative diff          0 runtime 0.015770   OpenMP sum with bit truncation
  accurate sum 13421772.81342177 sum 13421772.81342174 diff -2.794e-08 relative diff -2.082e-15 runtime 0.033212   OpenMP sum with double double kahan sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342174 diff  -2.98e-08 relative diff  -2.22e-15 runtime 0.022558   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 536870912 log 29 ndigits 8 ndigitsld 5 nbits 33 nbitsld 17
Initializing mesh with Leblanc problem, high values first
  accurate sum 26843545.62684355 sum 26843545.70588235 diff    0.07904 relative diff  2.944e-09 runtime 1.476054   Serial sum
  accurate sum 26843545.62684355 sum 26843545.53676471 diff   -0.09008 relative diff -3.356e-09 runtime 0.771360   Serial sum (OpenMP SIMD pragma)
  accurate sum 26843546          sum 26843546          diff          0 relative diff          0 runtime 1.475812   Serial sum with digit truncation
  accurate sum 26843520          sum 26843520          diff          0 relative diff          0 runtime 1.475823   Serial sum with bit truncation
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 17.135508   Serial sum with long double accumulator
  accurate sum 26843545.627      sum 26843545.627      diff          0 relative diff          0 runtime 17.183773   Serial sum with long double accumulator with ndigit truncation
  accurate sum 26843545.62646484 sum 26843545.62646484 diff          0 relative diff          0 runtime 17.133170   Serial sum with long double accumulator with bit truncation
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 4.405674   Serial sum with double double kahan sum accumulator
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 1.840195   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 26843545.62684355 sum 26843545.62684354 diff -3.725e-09 relative diff -1.388e-16 runtime 0.944674   8 wide GCC vector extensions Kahan sum
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 8.801369   Serial sum with double double knuth sum accumulator
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 2.710355   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 1.452028   8 wide GCC vector extensions Knuth sum
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 1.569681   Pair-wise sum


  accurate sum 26843545.62684355 sum 26843545.62783157 diff   0.000988 relative diff  3.681e-11 runtime 0.021401   OpenMP sum
  accurate sum 26843544          sum 26843544          diff          0 relative diff          0 runtime 0.031542   OpenMP sum with bit truncation
  accurate sum 26843545.62684355 sum 26843545.62684349 diff  -5.96e-08 relative diff  -2.22e-15 runtime 0.052182   OpenMP sum with double double kahan sum accumulator
  accurate sum 26843545.62684354 sum 26843545.62684348 diff  -5.96e-08 relative diff  -2.22e-15 runtime 0.042243   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 1073741824 log 30 ndigits 9 ndigitsld 6 nbits 34 nbitsld 18
Initializing mesh with Leblanc problem, high values first
  accurate sum 53687091.25368709 sum 53687091.70588235 diff     0.4522 relative diff  8.423e-09 runtime 2.951852   Serial sum
  accurate sum 53687091.25368709 sum 53687091.4117647  diff     0.1581 relative diff  2.944e-09 runtime 1.536535   Serial sum (OpenMP SIMD pragma)
  accurate sum 53687090          sum 53687090          diff          0 relative diff          0 runtime 2.952039   Serial sum with digit truncation
  accurate sum 53687040          sum 53687040          diff          0 relative diff          0 runtime 2.958355   Serial sum with bit truncation
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 34.290693   Serial sum with long double accumulator
  accurate sum 53687091.25       sum 53687091.25       diff          0 relative diff          0 runtime 34.348332   Serial sum with long double accumulator with ndigit truncation
  accurate sum 53687091.25195312 sum 53687091.25195312 diff          0 relative diff          0 runtime 34.343080   Serial sum with long double accumulator with bit truncation
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 8.894058   Serial sum with double double kahan sum accumulator
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 3.678604   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 53687091.25368709 sum 53687091.25368708 diff -7.451e-09 relative diff -1.388e-16 runtime 1.897639   8 wide GCC vector extensions Kahan sum
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 17.613009   Serial sum with double double knuth sum accumulator
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 5.444762   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 2.916381   8 wide GCC vector extensions Knuth sum
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 3.157168   Pair-wise sum


  accurate sum 53687091.25368709 sum 53687091.25037837 diff  -0.003309 relative diff -6.163e-11 runtime 0.036784   OpenMP sum
  accurate sum 53687088          sum 53687088          diff          0 relative diff          0 runtime 0.037139   OpenMP sum with bit truncation
  accurate sum 53687091.25368709 sum 53687091.25368698 diff -1.118e-07 relative diff -2.082e-15 runtime 0.036803   OpenMP sum with double double kahan sum accumulator
  accurate sum 53687091.25368708 sum 53687091.25368696 diff -1.192e-07 relative diff  -2.22e-15 runtime 0.036499   OpenMP sum with double double kahan sum accumulator with bit truncation

Scanning dependencies of target distclean
Built target distclean
unset CC; unset CPP; unset CXX; unset F77; unset F90; unset FC; unset __LMOD_REF_COUNT_LD_LIBRARY_PATH; unset LD_LIBRARY_PATH; unset __LMOD_REF_COUNT_LOADEDMODULES; unset LOADEDMODULES; unset __LMOD_REF_COUNT_MANPATH; unset MANPATH; MODULEPATH=/opt/ohpc/pub/modulefiles:/opt/arm/modulefiles:/projects/darwin/modulefiles/aarch64; export MODULEPATH; __LMOD_REF_COUNT_PATH=/home/brobey/bin:2\;/home/brobey/parsplice-install/bin:2\;/home/brobey/spack/bin:1\;/usr/local/bin:1\;/usr/bin:1\;/usr/local/sbin:1\;/usr/sbin:1\;/opt/ibutils/bin:1; export __LMOD_REF_COUNT_PATH; PATH=/home/brobey/bin:/home/brobey/parsplice-install/bin:/home/brobey/spack/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/opt/ibutils/bin; export PATH; unset __LMOD_REF_COUNT__LMFILES_; unset _LMFILES_; _ModuleTable001_=X01vZHVsZVRhYmxlXz17WyJNVHZlcnNpb24iXT0zLFsiY19yZWJ1aWxkVGltZSJdPTcyMDAsWyJjX3Nob3J0VGltZSJdPTMuNjQ2MTQyMDA1OTIwNCxkZXB0aFQ9e30sZmFtaWx5PXt9LG1UPXt9LG1wYXRoQT17Ii9vcHQvb2hwYy9wdWIvbW9kdWxlZmlsZXMiLCIvb3B0L2FybS9tb2R1bGVmaWxlcyIsIi9wcm9qZWN0cy9kYXJ3aW4vbW9kdWxlZmlsZXMvYWFyY2g2NCIsfSxbInN5c3RlbUJhc2VNUEFUSCJdPSIvb3B0L29ocGMvcHViL21vZHVsZWZpbGVzOi9vcHQvYXJtL21vZHVsZWZpbGVzOi9wcm9qZWN0cy9kYXJ3aW4vbW9kdWxlZmlsZXMvYWFyY2g2NCIsfQ==; export _ModuleTable001_; _ModuleTable_Sz_=1; export _ModuleTable_Sz_;
MODULEPATH=/opt/ohpc/pub/modulefiles:/opt/arm/modulefiles:/projects/darwin/modulefiles/aarch64; export MODULEPATH; _ModuleTable001_=X01vZHVsZVRhYmxlXz17WyJNVHZlcnNpb24iXT0zLFsiY19yZWJ1aWxkVGltZSJdPTcyMDAsWyJjX3Nob3J0VGltZSJdPTMuNjQ2MTQyMDA1OTIwNCxkZXB0aFQ9e30sZmFtaWx5PXt9LG1UPXt9LG1wYXRoQT17Ii9vcHQvb2hwYy9wdWIvbW9kdWxlZmlsZXMiLCIvb3B0L2FybS9tb2R1bGVmaWxlcyIsIi9wcm9qZWN0cy9kYXJ3aW4vbW9kdWxlZmlsZXMvYWFyY2g2NCIsfSxbInN5c3RlbUJhc2VNUEFUSCJdPSIvb3B0L29ocGMvcHViL21vZHVsZWZpbGVzOi9vcHQvYXJtL21vZHVsZWZpbGVzOi9wcm9qZWN0cy9kYXJ3aW4vbW9kdWxlZmlsZXMvYWFyY2g2NCIsfQ==; export _ModuleTable001_; _ModuleTable_Sz_=1; export _ModuleTable_Sz_;
ARMPL_BUILD=50; export ARMPL_BUILD; ARMPL_DIR=/opt/arm/armpl-19.2.0_ThunderX2CN99_RHEL-7_gcc_8.2.0_aarch64-linux; export ARMPL_DIR; ARMPL_INCLUDES=/opt/arm/armpl-19.2.0_ThunderX2CN99_RHEL-7_gcc_8.2.0_aarch64-linux/include; export ARMPL_INCLUDES; ARMPL_INCLUDES_ILP64=/opt/arm/armpl-19.2.0_ThunderX2CN99_RHEL-7_gcc_8.2.0_aarch64-linux/include_ilp64; export ARMPL_INCLUDES_ILP64; ARMPL_INCLUDES_ILP64_MP=/opt/arm/armpl-19.2.0_ThunderX2CN99_RHEL-7_gcc_8.2.0_aarch64-linux/include_ilp64_mp; export ARMPL_INCLUDES_ILP64_MP; ARMPL_INCLUDES_INT64=/opt/arm/armpl-19.2.0_ThunderX2CN99_RHEL-7_gcc_8.2.0_aarch64-linux/include_ilp64; export ARMPL_INCLUDES_INT64; ARMPL_INCLUDES_INT64_MP=/opt/arm/armpl-19.2.0_ThunderX2CN99_RHEL-7_gcc_8.2.0_aarch64-linux/include_ilp64_mp; export ARMPL_INCLUDES_INT64_MP; ARMPL_INCLUDES_LP64_MP=/opt/arm/armpl-19.2.0_ThunderX2CN99_RHEL-7_gcc_8.2.0_aarch64-linux/include_lp64_mp; export ARMPL_INCLUDES_LP64_MP; ARMPL_INCLUDES_MP=/opt/arm/armpl-19.2.0_ThunderX2CN99_RHEL-7_gcc_8.2.0_aarch64-linux/include_lp64_mp; export ARMPL_INCLUDES_MP; __LMOD_REF_COUNT_ARMPL_LIBRARIES=/opt/arm/armpl-19.2.0_ThunderX2CN99_RHEL-7_gcc_8.2.0_aarch64-linux/lib:1; export __LMOD_REF_COUNT_ARMPL_LIBRARIES; ARMPL_LIBRARIES=/opt/arm/armpl-19.2.0_ThunderX2CN99_RHEL-7_gcc_8.2.0_aarch64-linux/lib; export ARMPL_LIBRARIES; BLAS=/opt/arm/armpl-19.2.0_ThunderX2CN99_RHEL-7_gcc_8.2.0_aarch64-linux/lib/libarmpl_lp64.a; export BLAS; BLAS_SHARED=/opt/arm/armpl-19.2.0_ThunderX2CN99_RHEL-7_gcc_8.2.0_aarch64-linux/lib/libarmpl_lp64.so; export BLAS_SHARED; BLAS_STATIC=/opt/arm/armpl-19.2.0_ThunderX2CN99_RHEL-7_gcc_8.2.0_aarch64-linux/lib/libarmpl_lp64.a; export BLAS_STATIC; CC=gcc; export CC; COMPILER_PATH=/opt/arm/gcc-8.2.0_Generic-AArch64_RHEL-7_aarch64-linux; export COMPILER_PATH; __LMOD_REF_COUNT_CPATH=/opt/arm/armpl-19.2.0_ThunderX2CN99_RHEL-7_gcc_8.2.0_aarch64-linux/include:1\;/opt/arm/gcc-8.2.0_Generic-AArch64_RHEL-7_aarch64-linux/include:1; export __LMOD_REF_COUNT_CPATH; CPATH=/opt/arm/armpl-19.2.0_ThunderX2CN99_RHEL-7_gcc_8.2.0_aarch64-linux/include:/opt/arm/gcc-8.2.0_Generic-AArch64_RHEL-7_aarch64-linux/include; export CPATH; CPP=cpp; export CPP; CXX=g++; export CXX; F77=gfortran; export F77; F90=gfortran; export F90; FC=gfortran; export FC; GCC_BUILD=8; export GCC_BUILD; GCC_DIR=/opt/arm/gcc-8.2.0_Generic-AArch64_RHEL-7_aarch64-linux; export GCC_DIR; GCC_INCLUDES=/opt/arm/gcc-8.2.0_Generic-AArch64_RHEL-7_aarch64-linux/include; export GCC_INCLUDES; __LMOD_REF_COUNT_GCC_LIBRARIES=/opt/arm/gcc-8.2.0_Generic-AArch64_RHEL-7_aarch64-linux/lib:1\;/opt/arm/gcc-8.2.0_Generic-AArch64_RHEL-7_aarch64-linux/lib64:1; export __LMOD_REF_COUNT_GCC_LIBRARIES; GCC_LIBRARIES=/opt/arm/gcc-8.2.0_Generic-AArch64_RHEL-7_aarch64-linux/lib:/opt/arm/gcc-8.2.0_Generic-AArch64_RHEL-7_aarch64-linux/lib64; export GCC_LIBRARIES; LAPACK=/opt/arm/armpl-19.2.0_ThunderX2CN99_RHEL-7_gcc_8.2.0_aarch64-linux/lib/libarmpl_lp64.a; export LAPACK; LAPACK_SHARED=/opt/arm/armpl-19.2.0_ThunderX2CN99_RHEL-7_gcc_8.2.0_aarch64-linux/lib/libarmpl_lp64.so; export LAPACK_SHARED; LAPACK_STATIC=/opt/arm/armpl-19.2.0_ThunderX2CN99_RHEL-7_gcc_8.2.0_aarch64-linux/lib/libarmpl_lp64.a; export LAPACK_STATIC; __LMOD_REF_COUNT_LD_LIBRARY_PATH=/opt/arm/armpl-19.2.0_ThunderX2CN99_RHEL-7_gcc_8.2.0_aarch64-linux/lib:1\;/opt/arm/gcc-8.2.0_Generic-AArch64_RHEL-7_aarch64-linux/lib64:1\;/opt/arm/gcc-8.2.0_Generic-AArch64_RHEL-7_aarch64-linux/lib:1; export __LMOD_REF_COUNT_LD_LIBRARY_PATH; LD_LIBRARY_PATH=/opt/arm/armpl-19.2.0_ThunderX2CN99_RHEL-7_gcc_8.2.0_aarch64-linux/lib:/opt/arm/gcc-8.2.0_Generic-AArch64_RHEL-7_aarch64-linux/lib64:/opt/arm/gcc-8.2.0_Generic-AArch64_RHEL-7_aarch64-linux/lib; export LD_LIBRARY_PATH; __LMOD_REF_COUNT_LIBRARY_PATH=/opt/arm/armpl-19.2.0_ThunderX2CN99_RHEL-7_gcc_8.2.0_aarch64-linux/lib:1\;/opt/arm/gcc-8.2.0_Generic-AArch64_RHEL-7_aarch64-linux/lib64:1\;/opt/arm/gcc-8.2.0_Generic-AArch64_RHEL-7_aarch64-linux/lib:1; export __LMOD_REF_COUNT_LIBRARY_PATH; LIBRARY_PATH=/opt/arm/armpl-19.2.0_ThunderX2CN99_RHEL-7_gcc_8.2.0_aarch64-linux/lib:/opt/arm/gcc-8.2.0_Generic-AArch64_RHEL-7_aarch64-linux/lib64:/opt/arm/gcc-8.2.0_Generic-AArch64_RHEL-7_aarch64-linux/lib; export LIBRARY_PATH; __LMOD_REF_COUNT_LOADEDMODULES=cmake/3.15.0:1\;Generic-AArch64/RHEL/7/gcc/8.2.0:1\;ThunderX2CN99/RHEL/7/gcc-8.2.0/armpl/19.2.0:1; export __LMOD_REF_COUNT_LOADEDMODULES; LOADEDMODULES=cmake/3.15.0:Generic-AArch64/RHEL/7/gcc/8.2.0:ThunderX2CN99/RHEL/7/gcc-8.2.0/armpl/19.2.0; export LOADEDMODULES; __LMOD_REF_COUNT_MANPATH=/opt/arm/gcc-8.2.0_Generic-AArch64_RHEL-7_aarch64-linux/share/man:1; export __LMOD_REF_COUNT_MANPATH; MANPATH=/opt/arm/gcc-8.2.0_Generic-AArch64_RHEL-7_aarch64-linux/share/man; export MANPATH; MODULEPATH=/opt/ohpc/pub/modulefiles:/opt/arm/modulefiles:/projects/darwin/modulefiles/aarch64; export MODULEPATH; __LMOD_REF_COUNT_PATH=/opt/arm/gcc-8.2.0_Generic-AArch64_RHEL-7_aarch64-linux/bin:1\;/projects/opt/aarch64/cmake/3.15.0/bin:1\;/home/brobey/bin:2\;/home/brobey/parsplice-install/bin:2\;/home/brobey/spack/bin:1\;/usr/local/bin:1\;/usr/bin:1\;/usr/local/sbin:1\;/usr/sbin:1\;/opt/ibutils/bin:1; export __LMOD_REF_COUNT_PATH; PATH=/opt/arm/gcc-8.2.0_Generic-AArch64_RHEL-7_aarch64-linux/bin:/projects/opt/aarch64/cmake/3.15.0/bin:/home/brobey/bin:/home/brobey/parsplice-install/bin:/home/brobey/spack/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/opt/ibutils/bin; export PATH; __LMOD_REF_COUNT__LMFILES_=/projects/darwin/modulefiles/aarch64/cmake/3.15.0:1\;/opt/arm/modulefiles/Generic-AArch64/RHEL/7/gcc/8.2.0:1\;/opt/arm/modulefiles/ThunderX2CN99/RHEL/7/gcc-8.2.0/armpl/19.2.0:1; export __LMOD_REF_COUNT__LMFILES_; _LMFILES_=/projects/darwin/modulefiles/aarch64/cmake/3.15.0:/opt/arm/modulefiles/Generic-AArch64/RHEL/7/gcc/8.2.0:/opt/arm/modulefiles/ThunderX2CN99/RHEL/7/gcc-8.2.0/armpl/19.2.0; export _LMFILES_; _ModuleTable001_=X01vZHVsZVRhYmxlXz17WyJNVHZlcnNpb24iXT0zLFsiY19yZWJ1aWxkVGltZSJdPTcyMDAsWyJjX3Nob3J0VGltZSJdPTMuNjQ2MTQyMDA1OTIwNCxkZXB0aFQ9e30sZmFtaWx5PXt9LG1UPXtbIkdlbmVyaWMtQUFyY2g2NC9SSEVMLzcvZ2NjIl09e1siZm4iXT0iL29wdC9hcm0vbW9kdWxlZmlsZXMvR2VuZXJpYy1BQXJjaDY0L1JIRUwvNy9nY2MvOC4yLjAiLFsiZnVsbE5hbWUiXT0iR2VuZXJpYy1BQXJjaDY0L1JIRUwvNy9nY2MvOC4yLjAiLFsibG9hZE9yZGVyIl09Mixwcm9wVD17fSxbInN0YWNrRGVwdGgiXT0xLFsic3RhdHVzIl09ImFjdGl2ZSIsWyJ1c2VyTmFtZSJdPSJHZW5lcmljLUFBcmNoNjQvUkhFTC83L2djYy84LjIuMCIsfSxbIlRodW5kZXJYMkNOOTkvUkhF; export _ModuleTable001_; _ModuleTable002_=TC83L2djYy04LjIuMC9hcm1wbCJdPXtbImZuIl09Ii9vcHQvYXJtL21vZHVsZWZpbGVzL1RodW5kZXJYMkNOOTkvUkhFTC83L2djYy04LjIuMC9hcm1wbC8xOS4yLjAiLFsiZnVsbE5hbWUiXT0iVGh1bmRlclgyQ045OS9SSEVMLzcvZ2NjLTguMi4wL2FybXBsLzE5LjIuMCIsWyJsb2FkT3JkZXIiXT0zLHByb3BUPXt9LFsic3RhY2tEZXB0aCJdPTAsWyJzdGF0dXMiXT0iYWN0aXZlIixbInVzZXJOYW1lIl09IlRodW5kZXJYMkNOOTkvUkhFTC83L2djYy04LjIuMC9hcm1wbC8xOS4yLjAiLH0sY21ha2U9e1siZm4iXT0iL3Byb2plY3RzL2Rhcndpbi9tb2R1bGVmaWxlcy9hYXJjaDY0L2NtYWtlLzMuMTUuMCIsWyJmdWxsTmFtZSJdPSJjbWFrZS8zLjE1LjAiLFsibG9hZE9yZGVy; export _ModuleTable002_; _ModuleTable003_=Il09MSxwcm9wVD17fSxbInN0YWNrRGVwdGgiXT0wLFsic3RhdHVzIl09ImFjdGl2ZSIsWyJ1c2VyTmFtZSJdPSJjbWFrZSIsfSx9LG1wYXRoQT17Ii9vcHQvb2hwYy9wdWIvbW9kdWxlZmlsZXMiLCIvb3B0L2FybS9tb2R1bGVmaWxlcyIsIi9wcm9qZWN0cy9kYXJ3aW4vbW9kdWxlZmlsZXMvYWFyY2g2NCIsfSxbInN5c3RlbUJhc2VNUEFUSCJdPSIvb3B0L29ocGMvcHViL21vZHVsZWZpbGVzOi9vcHQvYXJtL21vZHVsZWZpbGVzOi9wcm9qZWN0cy9kYXJ3aW4vbW9kdWxlZmlsZXMvYWFyY2g2NCIsfQ==; export _ModuleTable003_; _ModuleTable_Sz_=3; export _ModuleTable_Sz_;
-- The C compiler identification is GNU 8.2.0
-- The CXX compiler identification is GNU 8.2.0
-- Check for working C compiler: /opt/arm/gcc-8.2.0_Generic-AArch64_RHEL-7_aarch64-linux/bin/gcc
-- Check for working C compiler: /opt/arm/gcc-8.2.0_Generic-AArch64_RHEL-7_aarch64-linux/bin/gcc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /opt/arm/gcc-8.2.0_Generic-AArch64_RHEL-7_aarch64-linux/bin/g++
-- Check for working CXX compiler: /opt/arm/gcc-8.2.0_Generic-AArch64_RHEL-7_aarch64-linux/bin/g++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Found OpenMP_C: -fopenmp (found version "4.5") 
-- Found OpenMP_CXX: -fopenmp (found version "4.5") 
-- Found OpenMP: TRUE (found version "4.5")  
-- Trying Fog Vector Class -- fails
-- Trying X86_64 intrinsics -- fails
-- Trying GCC Vector Extensions -- works
-- Trying Quad math library -- fails
-- Configuring done
-- Generating done
-- Build files have been written to: /home/brobey/GlobalSums
Scanning dependencies of target globalsums
[  5%] Building C object CMakeFiles/globalsums.dir/globalsums.c.o
/home/brobey/GlobalSums/globalsums.c:542:10: note: Unknown misalignment, naturally aligned
/home/brobey/GlobalSums/globalsums.c:542:10: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
/home/brobey/GlobalSums/globalsums.c:542:10: note: cost model: the vector iteration cost = 4 divided by the scalar iteration cost = 2 is greater or equal to the vectorization factor = 2.
/home/brobey/GlobalSums/globalsums.c:542:10: note: not vectorized: vectorization not profitable.
/home/brobey/GlobalSums/globalsums.c:542:10: note: not vectorized: vector version will never be profitable.
/home/brobey/GlobalSums/globalsums.c:542:10: note: not vectorized: unsupported data-type
/home/brobey/GlobalSums/globalsums.c:542:10: note: can't determine vectorization factor.
/home/brobey/GlobalSums/globalsums.c:542:10: note: Unknown misalignment, naturally aligned
/home/brobey/GlobalSums/globalsums.c:542:10: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
/home/brobey/GlobalSums/globalsums.c:542:10: note: cost model: the vector iteration cost = 14 divided by the scalar iteration cost = 3 is greater or equal to the vectorization factor = 2.
/home/brobey/GlobalSums/globalsums.c:542:10: note: not vectorized: vectorization not profitable.
/home/brobey/GlobalSums/globalsums.c:542:10: note: not vectorized: vector version will never be profitable.
/home/brobey/GlobalSums/globalsums.c:542:10: note: not vectorized: unsupported data-type
/home/brobey/GlobalSums/globalsums.c:542:10: note: can't determine vectorization factor.
/home/brobey/GlobalSums/globalsums.c:540:9: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:540:9: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:540:9: note: not consecutive access ncellsdiv2_12 = *.omp_data_i_8(D).ncellsdiv2;
/home/brobey/GlobalSums/globalsums.c:540:9: note: not consecutive access energy_9 = *.omp_data_i_8(D).energy;
/home/brobey/GlobalSums/globalsums.c:540:9: note: not vectorized: no grouped stores in basic block.
/home/brobey/GlobalSums/globalsums.c:540:9: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:542:20: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:542:20: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:542:20: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:542:20: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:542:20: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:99:9: note: Build SLP failed: unrolling required in basic block SLP
/home/brobey/GlobalSums/globalsums.c:99:9: note: Build SLP failed: different calls in _6 = __builtin_omp_get_thread_num ();
/home/brobey/GlobalSums/globalsums.c:99:9: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:100:7: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:104:3: note: not vectorized: multiple nested loops.
/home/brobey/GlobalSums/globalsums.c:104:3: note: bad loop form.
/home/brobey/GlobalSums/globalsums.c:137:7: note: Unknown misalignment, naturally aligned
/home/brobey/GlobalSums/globalsums.c:137:7: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
/home/brobey/GlobalSums/globalsums.c:137:7: note: cost model: the vector iteration cost = 4 divided by the scalar iteration cost = 2 is greater or equal to the vectorization factor = 2.
/home/brobey/GlobalSums/globalsums.c:137:7: note: not vectorized: vectorization not profitable.
/home/brobey/GlobalSums/globalsums.c:137:7: note: not vectorized: vector version will never be profitable.
/home/brobey/GlobalSums/globalsums.c:137:7: note: not vectorized: unsupported data-type
/home/brobey/GlobalSums/globalsums.c:137:7: note: can't determine vectorization factor.
/home/brobey/GlobalSums/globalsums.c:137:7: note: misalign = 0 bytes of ref *_34
/home/brobey/GlobalSums/globalsums.c:137:7: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
/home/brobey/GlobalSums/globalsums.c:137:7: note: cost model: the vector iteration cost = 14 divided by the scalar iteration cost = 3 is greater or equal to the vectorization factor = 2.
/home/brobey/GlobalSums/globalsums.c:137:7: note: not vectorized: vectorization not profitable.
/home/brobey/GlobalSums/globalsums.c:137:7: note: not vectorized: vector version will never be profitable.
/home/brobey/GlobalSums/globalsums.c:137:7: note: not vectorized: unsupported data-type
/home/brobey/GlobalSums/globalsums.c:137:7: note: can't determine vectorization factor.
/home/brobey/GlobalSums/globalsums.c:89:9: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:90:10: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:91:7: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:92:9: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:94:9: note: Build SLP failed: unrolling required in basic block SLP
/home/brobey/GlobalSums/globalsums.c:94:9: note: misalign = 0 bytes of ref .omp_data_o.9.nt
/home/brobey/GlobalSums/globalsums.c:94:9: note: not vectorized: vectorization is not profitable.
/home/brobey/GlobalSums/globalsums.c:82:5: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:105:27: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:108:37: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:109:37: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:110:40: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:113:36: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:114:36: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:116:109: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:116:7: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:133:34: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:136:7: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:137:7: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:137:7: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:137:7: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:137:7: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:137:7: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:137:7: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:602:4: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:156:18: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:607:4: note: not vectorized: no grouped stores in basic block.
/home/brobey/GlobalSums/globalsums.c:160:7: note: not vectorized: no grouped stores in basic block.
/home/brobey/GlobalSums/globalsums.c:162:7: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:602:4: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:168:18: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:607:4: note: not vectorized: no grouped stores in basic block.
/home/brobey/GlobalSums/globalsums.c:171:7: note: not vectorized: no grouped stores in basic block.
/home/brobey/GlobalSums/globalsums.c:173:7: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:602:4: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:179:18: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:607:4: note: not vectorized: no grouped stores in basic block.
/home/brobey/GlobalSums/globalsums.c:617:17: note: not vectorized: no grouped stores in basic block.
/home/brobey/GlobalSums/globalsums.c:619:7: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:620:21: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:621:29: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:623:20: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:624:28: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:183:7: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:185:7: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:602:4: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:191:18: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:607:4: note: not vectorized: no grouped stores in basic block.
/home/brobey/GlobalSums/globalsums.c:196:7: note: not vectorized: no vectype for stmt: bitmask = *.LC0;
 scalar_type: long long unsigned int[41]
/home/brobey/GlobalSums/globalsums.c:196:7: note: not vectorized: more than one data ref in stmt: bitmask = *.LC0;
/home/brobey/GlobalSums/globalsums.c:196:7: note: not vectorized: no grouped stores in basic block.
/home/brobey/GlobalSums/globalsums.c:198:7: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:602:4: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:204:20: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:607:4: note: not vectorized: no grouped stores in basic block.
/home/brobey/GlobalSums/globalsums.c:207:7: note: not vectorized: no grouped stores in basic block.
/home/brobey/GlobalSums/globalsums.c:209:7: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:602:4: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:215:20: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:617:17: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:619:7: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:620:21: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:621:29: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:623:20: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:624:28: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:607:4: note: not vectorized: no grouped stores in basic block.
/home/brobey/GlobalSums/globalsums.c:220:7: note: not vectorized: no grouped stores in basic block.
/home/brobey/GlobalSums/globalsums.c:222:7: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:602:4: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:228:20: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:607:4: note: not vectorized: no vectype for stmt: bitmask = *.LC0;
 scalar_type: long long unsigned int[41]
/home/brobey/GlobalSums/globalsums.c:607:4: note: not vectorized: more than one data ref in stmt: bitmask = *.LC0;
/home/brobey/GlobalSums/globalsums.c:607:4: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:233:7: note: not vectorized: no grouped stores in basic block.
/home/brobey/GlobalSums/globalsums.c:235:7: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:602:4: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:241:18: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:607:4: note: not vectorized: no grouped stores in basic block.
/home/brobey/GlobalSums/globalsums.c:244:7: note: not vectorized: no grouped stores in basic block.
/home/brobey/GlobalSums/globalsums.c:246:7: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:602:4: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:266:18: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:607:4: note: not vectorized: no grouped stores in basic block.
/home/brobey/GlobalSums/globalsums.c:269:7: note: not vectorized: no grouped stores in basic block.
/home/brobey/GlobalSums/globalsums.c:271:7: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:602:4: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:309:18: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:607:4: note: not vectorized: no grouped stores in basic block.
/home/brobey/GlobalSums/globalsums.c:313:7: note: not vectorized: no grouped stores in basic block.
/home/brobey/GlobalSums/globalsums.c:315:7: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:602:4: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:336:18: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:607:4: note: not vectorized: no grouped stores in basic block.
/home/brobey/GlobalSums/globalsums.c:339:7: note: not vectorized: no grouped stores in basic block.
/home/brobey/GlobalSums/globalsums.c:341:7: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:602:4: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:361:18: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:607:4: note: not vectorized: no grouped stores in basic block.
/home/brobey/GlobalSums/globalsums.c:364:7: note: not vectorized: no grouped stores in basic block.
/home/brobey/GlobalSums/globalsums.c:366:7: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:602:4: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:403:18: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:607:4: note: not vectorized: no grouped stores in basic block.
/home/brobey/GlobalSums/globalsums.c:407:7: note: not vectorized: no grouped stores in basic block.
/home/brobey/GlobalSums/globalsums.c:409:7: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:602:4: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:430:18: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:607:4: note: not vectorized: no grouped stores in basic block.
/home/brobey/GlobalSums/globalsums.c:433:7: note: not vectorized: no grouped stores in basic block.
/home/brobey/GlobalSums/globalsums.c:435:7: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:439:7: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:483:7: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:535:7: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:537:26: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:540:9: note: not consecutive access .omp_data_o.11.energy = energy_213;
/home/brobey/GlobalSums/globalsums.c:540:9: note: misalign = 0 bytes of ref .omp_data_o.11.ncells
/home/brobey/GlobalSums/globalsums.c:540:9: note: misalign = 0 bytes of ref .omp_data_o.11.high_value
/home/brobey/GlobalSums/globalsums.c:540:9: note: not vectorized: vectorization is not profitable.
/home/brobey/GlobalSums/globalsums.c:540:9: note: not consecutive access .omp_data_o.11.energy = energy_213;
/home/brobey/GlobalSums/globalsums.c:540:9: note: misalign = 0 bytes of ref .omp_data_o.11.ncells
/home/brobey/GlobalSums/globalsums.c:540:9: note: misalign = 0 bytes of ref .omp_data_o.11.high_value
/home/brobey/GlobalSums/globalsums.c:540:9: note: not vectorized: relevant stmt not supported: .omp_data_o.11.high_value = 1.000000000000000055511151231257827021181583404541015625e-1;
/home/brobey/GlobalSums/globalsums.c:540:9: note: not vectorized: vectorization is not profitable.
/home/brobey/GlobalSums/globalsums.c:602:4: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:549:18: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:607:4: note: not vectorized: no grouped stores in basic block.
/home/brobey/GlobalSums/globalsums.c:552:7: note: not vectorized: no grouped stores in basic block.
/home/brobey/GlobalSums/globalsums.c:554:7: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:602:4: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:560:18: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:607:4: note: not vectorized: no vectype for stmt: bitmask = *.LC0;
 scalar_type: long long unsigned int[41]
/home/brobey/GlobalSums/globalsums.c:607:4: note: not vectorized: more than one data ref in stmt: bitmask = *.LC0;
/home/brobey/GlobalSums/globalsums.c:607:4: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:566:7: note: not vectorized: no grouped stores in basic block.
/home/brobey/GlobalSums/globalsums.c:568:7: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:602:4: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:574:18: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:607:4: note: not vectorized: no grouped stores in basic block.
/home/brobey/GlobalSums/globalsums.c:577:7: note: not vectorized: no grouped stores in basic block.
/home/brobey/GlobalSums/globalsums.c:579:7: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:602:4: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:585:18: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:607:4: note: not vectorized: no grouped stores in basic block.
/home/brobey/GlobalSums/globalsums.c:590:7: note: not vectorized: no grouped stores in basic block.
/home/brobey/GlobalSums/globalsums.c:592:7: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:595:7: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:597:7: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:104:3: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:82:5: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:602:4: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:603:1: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:607:4: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:612:10: note: not vectorized: no grouped stores in basic block.
/home/brobey/GlobalSums/globalsums.c:617:17: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:619:7: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:620:21: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:621:29: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:623:20: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:624:28: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:624:28: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/globalsums.c:655:10: note: not vectorized: no vectype for stmt: bitmask = *.LC0;
 scalar_type: long long unsigned int[41]
/home/brobey/GlobalSums/globalsums.c:655:10: note: not vectorized: more than one data ref in stmt: bitmask = *.LC0;
/home/brobey/GlobalSums/globalsums.c:655:10: note: not vectorized: not enough data-refs in basic block.
[ 10%] Building C object CMakeFiles/globalsums.dir/do_kahan_sum.c.o
/home/brobey/GlobalSums/do_kahan_sum.c:10:4: note: step unknown.
/home/brobey/GlobalSums/do_kahan_sum.c:10:4: note: step unknown.
/home/brobey/GlobalSums/do_kahan_sum.c:10:4: note: reduction value used in loop.
/home/brobey/GlobalSums/do_kahan_sum.c:10:4: note: Unknown def-use cycle pattern.
/home/brobey/GlobalSums/do_kahan_sum.c:10:4: note: reduction value used in loop.
/home/brobey/GlobalSums/do_kahan_sum.c:10:4: note: Unknown def-use cycle pattern.
/home/brobey/GlobalSums/do_kahan_sum.c:10:4: note: Unsupported pattern.
/home/brobey/GlobalSums/do_kahan_sum.c:10:4: note: use not simple.
/home/brobey/GlobalSums/do_kahan_sum.c:10:4: note: Unsupported pattern.
/home/brobey/GlobalSums/do_kahan_sum.c:10:4: note: not vectorized: unsupported use in stmt.
/home/brobey/GlobalSums/do_kahan_sum.c:10:4: note: unexpected pattern.
/home/brobey/GlobalSums/do_kahan_sum.c:10:4: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_kahan_sum.c:10:4: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_kahan_sum.c:10:4: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_kahan_sum.c:18:10: note: not vectorized: not enough data-refs in basic block.
[ 15%] Building C object CMakeFiles/globalsums.dir/serial_sum_novec.c.o
[ 20%] Building C object CMakeFiles/globalsums.dir/do_kahan_sum_omp.c.o
/home/brobey/GlobalSums/do_kahan_sum_omp.c:10:31: note: not vectorized: number of iterations cannot be computed.
/home/brobey/GlobalSums/do_kahan_sum_omp.c:10:31: note: bad loop form.
/home/brobey/GlobalSums/do_kahan_sum_omp.c:19:10: note: step unknown.
/home/brobey/GlobalSums/do_kahan_sum_omp.c:19:10: note: step unknown.
/home/brobey/GlobalSums/do_kahan_sum_omp.c:19:10: note: reduction value used in loop.
/home/brobey/GlobalSums/do_kahan_sum_omp.c:19:10: note: Unknown def-use cycle pattern.
/home/brobey/GlobalSums/do_kahan_sum_omp.c:19:10: note: reduction value used in loop.
/home/brobey/GlobalSums/do_kahan_sum_omp.c:19:10: note: Unknown def-use cycle pattern.
/home/brobey/GlobalSums/do_kahan_sum_omp.c:19:10: note: Unsupported pattern.
/home/brobey/GlobalSums/do_kahan_sum_omp.c:19:10: note: use not simple.
/home/brobey/GlobalSums/do_kahan_sum_omp.c:19:10: note: Unsupported pattern.
/home/brobey/GlobalSums/do_kahan_sum_omp.c:19:10: note: not vectorized: unsupported use in stmt.
/home/brobey/GlobalSums/do_kahan_sum_omp.c:19:10: note: unexpected pattern.
/home/brobey/GlobalSums/do_kahan_sum_omp.c:10:9: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_kahan_sum_omp.c:10:9: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_kahan_sum_omp.c:10:9: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_kahan_sum_omp.c:21:51: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_kahan_sum_omp.c:21:51: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_kahan_sum_omp.c:26:9: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_kahan_sum_omp.c:10:31: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_kahan_sum_omp.c:10:31: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_kahan_sum_omp.c:10:31: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_kahan_sum_omp.c:10:31: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_kahan_sum_omp.c:10:31: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_kahan_sum_omp.c:10:9: note: not consecutive access .omp_data_o.3.var = var_5(D);
/home/brobey/GlobalSums/do_kahan_sum_omp.c:10:9: note: not consecutive access .omp_data_o.3.ncells = ncells_3(D);
/home/brobey/GlobalSums/do_kahan_sum_omp.c:10:9: note: not consecutive access .omp_data_o.3.sum = 0.0;
/home/brobey/GlobalSums/do_kahan_sum_omp.c:10:9: note: not vectorized: no grouped stores in basic block.
/home/brobey/GlobalSums/do_kahan_sum_omp.c:29:10: note: not vectorized: not enough data-refs in basic block.
[ 25%] Building C object CMakeFiles/globalsums.dir/do_kahan_sum_omp_wbittrunc.c.o
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:23:10: note: step unknown.
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:23:10: note: step unknown.
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:23:10: note: reduction value used in loop.
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:23:10: note: Unknown def-use cycle pattern.
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:23:10: note: reduction value used in loop.
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:23:10: note: Unknown def-use cycle pattern.
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:23:10: note: Unsupported pattern.
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:23:10: note: use not simple.
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:23:10: note: Unsupported pattern.
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:23:10: note: not vectorized: unsupported use in stmt.
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:23:10: note: unexpected pattern.
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:14:9: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:14:9: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:14:9: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:25:51: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:25:51: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:37:9: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:14:9: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:14:9: note: not ssa-name.
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:14:9: note: use not simple.
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:14:9: note: not ssa-name.
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:14:9: note: use not simple.
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:14:9: note: not vectorized: vectorization is not profitable.
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:14:9: note: misalign = 0 bytes of ref *.omp_data_i_9(D).sum
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:14:9: note: misalign = 0 bytes of ref *.omp_data_i_9(D).sum
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:14:9: note: not ssa-name.
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:14:9: note: use not simple.
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:14:9: note: not ssa-name.
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:14:9: note: use not simple.
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:14:9: note: Aligned load, but unsupported type.
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:14:9: note: not vectorized: relevant stmt not supported: _41 = *.omp_data_i_9(D).sum;
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:14:9: note: not vectorized: bad operation in basic block.
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:14:9: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:14:9: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:14:9: note: not consecutive access .omp_data_o.3.var = var_6(D);
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:14:9: note: not consecutive access .omp_data_o.3.ncells = ncells_4(D);
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:14:9: note: misalign = 0 bytes of ref .omp_data_o.3.sum
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:14:9: note: not vectorized: vectorization is not profitable.
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:14:9: note: not consecutive access .omp_data_o.3.var = var_6(D);
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:14:9: note: not consecutive access .omp_data_o.3.ncells = ncells_4(D);
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:14:9: note: misalign = 0 bytes of ref .omp_data_o.3.sum
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:14:9: note: not vectorized: relevant stmt not supported: .omp_data_o.3.sum = 0.0;
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:14:9: note: not vectorized: bad operation in basic block.
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:46:10: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:48:10: note: not vectorized: not enough data-refs in basic block.
[ 30%] Building C object CMakeFiles/globalsums.dir/do_knuth_sum.c.o
/home/brobey/GlobalSums/do_knuth_sum.c:13:4: note: step unknown.
/home/brobey/GlobalSums/do_knuth_sum.c:13:4: note: step unknown.
/home/brobey/GlobalSums/do_knuth_sum.c:13:4: note: reduction: unknown pattern: _7 = _5 + _6;
/home/brobey/GlobalSums/do_knuth_sum.c:13:4: note: Unknown def-use cycle pattern.
/home/brobey/GlobalSums/do_knuth_sum.c:13:4: note: reduction value used in loop.
/home/brobey/GlobalSums/do_knuth_sum.c:13:4: note: Unknown def-use cycle pattern.
/home/brobey/GlobalSums/do_knuth_sum.c:13:4: note: Unsupported pattern.
/home/brobey/GlobalSums/do_knuth_sum.c:13:4: note: not vectorized: unsupported use in stmt.
/home/brobey/GlobalSums/do_knuth_sum.c:13:4: note: unexpected pattern.
/home/brobey/GlobalSums/do_knuth_sum.c:13:4: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_knuth_sum.c:13:4: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_knuth_sum.c:13:4: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_knuth_sum.c:24:10: note: not vectorized: not enough data-refs in basic block.
[ 35%] Building C object CMakeFiles/globalsums.dir/do_ldsum.c.o
/home/brobey/GlobalSums/do_ldsum.c:5:4: note: step unknown.
/home/brobey/GlobalSums/do_ldsum.c:5:4: note: not vectorized: unsupported data-type long double
/home/brobey/GlobalSums/do_ldsum.c:5:4: note: can't determine vectorization factor.
/home/brobey/GlobalSums/do_ldsum.c:5:4: note: step unknown.
/home/brobey/GlobalSums/do_ldsum.c:5:4: note: not vectorized: unsupported data-type long double
/home/brobey/GlobalSums/do_ldsum.c:5:4: note: can't determine vectorization factor.
/home/brobey/GlobalSums/do_ldsum.c:5:4: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_ldsum.c:5:4: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_ldsum.c:8:10: note: not vectorized: not enough data-refs in basic block.
[ 40%] Building C object CMakeFiles/globalsums.dir/do_ldsum_wbittrunc.c.o
/home/brobey/GlobalSums/do_ldsum_wbittrunc.c:8:4: note: step unknown.
/home/brobey/GlobalSums/do_ldsum_wbittrunc.c:8:4: note: not vectorized: unsupported data-type long double
/home/brobey/GlobalSums/do_ldsum_wbittrunc.c:8:4: note: can't determine vectorization factor.
/home/brobey/GlobalSums/do_ldsum_wbittrunc.c:8:4: note: step unknown.
/home/brobey/GlobalSums/do_ldsum_wbittrunc.c:8:4: note: not vectorized: unsupported data-type long double
/home/brobey/GlobalSums/do_ldsum_wbittrunc.c:8:4: note: can't determine vectorization factor.
/home/brobey/GlobalSums/do_ldsum_wbittrunc.c:8:4: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_ldsum_wbittrunc.c:8:4: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_ldsum_wbittrunc.c:8:4: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_ldsum_wbittrunc.c:12:12: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_ldsum_wbittrunc.c:13:10: note: not vectorized: not enough data-refs in basic block.
[ 45%] Building C object CMakeFiles/globalsums.dir/do_ldsum_wdigittrunc.c.o
/home/brobey/GlobalSums/do_ldsum_wdigittrunc.c:7:4: note: step unknown.
/home/brobey/GlobalSums/do_ldsum_wdigittrunc.c:7:4: note: not vectorized: unsupported data-type long double
/home/brobey/GlobalSums/do_ldsum_wdigittrunc.c:7:4: note: can't determine vectorization factor.
/home/brobey/GlobalSums/do_ldsum_wdigittrunc.c:7:4: note: step unknown.
/home/brobey/GlobalSums/do_ldsum_wdigittrunc.c:7:4: note: not vectorized: unsupported data-type long double
/home/brobey/GlobalSums/do_ldsum_wdigittrunc.c:7:4: note: can't determine vectorization factor.
/home/brobey/GlobalSums/do_ldsum_wdigittrunc.c:7:4: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_ldsum_wdigittrunc.c:7:4: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_ldsum_wdigittrunc.c:7:4: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_ldsum_wdigittrunc.c:11:12: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_ldsum_wdigittrunc.c:12:10: note: not vectorized: not enough data-refs in basic block.
[ 50%] Building C object CMakeFiles/globalsums.dir/do_pair_sum.c.o
/home/brobey/GlobalSums/do_pair_sum.c:14:4: note: not vectorized: control flow in loop.
/home/brobey/GlobalSums/do_pair_sum.c:14:4: note: bad loop form.
/home/brobey/GlobalSums/do_pair_sum.c:16:7: note: versioning for alias required: bad dist vector for *_16 and *_22
/home/brobey/GlobalSums/do_pair_sum.c:16:7: note: versioning for alias required: bad dist vector for *_19 and *_22
/home/brobey/GlobalSums/do_pair_sum.c:16:7: note: misalign = 0 bytes of ref *_16
/home/brobey/GlobalSums/do_pair_sum.c:16:7: note: misalign = 8 bytes of ref *_19
/home/brobey/GlobalSums/do_pair_sum.c:16:7: note: misalign = 0 bytes of ref *_22
/home/brobey/GlobalSums/do_pair_sum.c:16:7: note: not ssa-name.
/home/brobey/GlobalSums/do_pair_sum.c:16:7: note: use not simple.
/home/brobey/GlobalSums/do_pair_sum.c:16:7: note: not ssa-name.
/home/brobey/GlobalSums/do_pair_sum.c:16:7: note: use not simple.
/home/brobey/GlobalSums/do_pair_sum.c:16:7: note: cannot use vec_mask_load_lanes<OI><V2DF>
/home/brobey/GlobalSums/do_pair_sum.c:16:7: note: can't use a fully-masked loop because the target doesn't have an appropriate masked load/store-lanes instruction.
/home/brobey/GlobalSums/do_pair_sum.c:16:7: note: not ssa-name.
/home/brobey/GlobalSums/do_pair_sum.c:16:7: note: use not simple.
/home/brobey/GlobalSums/do_pair_sum.c:16:7: note: not ssa-name.
/home/brobey/GlobalSums/do_pair_sum.c:16:7: note: use not simple.
/home/brobey/GlobalSums/do_pair_sum.c:16:7: note: loop vectorized
/home/brobey/GlobalSums/do_pair_sum.c:16:7: note: loop versioned for vectorization because of possible aliasing
/home/brobey/GlobalSums/do_pair_sum.c:10:4: note: misalign = 0 bytes of ref *_12
/home/brobey/GlobalSums/do_pair_sum.c:10:4: note: vector alignment may not be reachable
/home/brobey/GlobalSums/do_pair_sum.c:10:4: note: not ssa-name.
/home/brobey/GlobalSums/do_pair_sum.c:10:4: note: use not simple.
/home/brobey/GlobalSums/do_pair_sum.c:10:4: note: not ssa-name.
/home/brobey/GlobalSums/do_pair_sum.c:10:4: note: use not simple.
/home/brobey/GlobalSums/do_pair_sum.c:10:4: note: cannot use vec_mask_load_lanes<OI><V2DF>
/home/brobey/GlobalSums/do_pair_sum.c:10:4: note: can't use a fully-masked loop because the target doesn't have an appropriate masked load/store-lanes instruction.
/home/brobey/GlobalSums/do_pair_sum.c:10:4: note: not ssa-name.
/home/brobey/GlobalSums/do_pair_sum.c:10:4: note: use not simple.
/home/brobey/GlobalSums/do_pair_sum.c:10:4: note: not ssa-name.
/home/brobey/GlobalSums/do_pair_sum.c:10:4: note: use not simple.
/home/brobey/GlobalSums/do_pair_sum.c:10:4: note: loop vectorized
/home/brobey/GlobalSums/do_pair_sum.c:16:7: note: loop turned into non-loop; it never loops
/home/brobey/GlobalSums/do_pair_sum.c:10:4: note: loop turned into non-loop; it never loops
/home/brobey/GlobalSums/do_pair_sum.c:7:30: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_pair_sum.c:10:4: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_pair_sum.c:10:4: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_pair_sum.c:10:4: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_pair_sum.c:10:4: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_pair_sum.c:11:16: note: not vectorized: dr in a call vect_array.24 = LOAD_LANES (MEM[(double *)vectp_var.22_138]);
/home/brobey/GlobalSums/do_pair_sum.c:11:16: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_pair_sum.c:11:16: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_pair_sum.c:10:30: note: not consecutive access *_127 = _128;
/home/brobey/GlobalSums/do_pair_sum.c:10:30: note: not vectorized: no grouped stores in basic block.
/home/brobey/GlobalSums/do_pair_sum.c:16:7: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_pair_sum.c:14:38: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_pair_sum.c:14:38: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_pair_sum.c:14:38: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_pair_sum.c:17:19: note: not vectorized: dr in a call vect_array.12 = LOAD_LANES (MEM[(double *)vectp_pwsum.10_101]);
/home/brobey/GlobalSums/do_pair_sum.c:17:19: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_pair_sum.c:17:19: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_pair_sum.c:16:33: note: not consecutive access *_76 = _77;
/home/brobey/GlobalSums/do_pair_sum.c:16:33: note: not vectorized: no grouped stores in basic block.
/home/brobey/GlobalSums/do_pair_sum.c:16:7: note: not consecutive access *_51 = _50;
/home/brobey/GlobalSums/do_pair_sum.c:16:7: note: not vectorized: no grouped stores in basic block.
/home/brobey/GlobalSums/do_pair_sum.c:14:23: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_pair_sum.c:14:4: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_pair_sum.c:22:4: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_pair_sum.c:24:10: note: not vectorized: not enough data-refs in basic block.
[ 55%] Building C object CMakeFiles/globalsums.dir/do_sum.c.o
/home/brobey/GlobalSums/do_sum.c:5:9: note: Loop 1 distributed: split to 0 loops and 1 library calls.
/home/brobey/GlobalSums/do_sum.c:5:9: note: step unknown.
/home/brobey/GlobalSums/do_sum.c:5:9: note: misalign = 0 bytes of ref D.3445[_37]
/home/brobey/GlobalSums/do_sum.c:5:9: note: num. args = 4 (not unary/binary/ternary op).
/home/brobey/GlobalSums/do_sum.c:5:9: note: not ssa-name.
/home/brobey/GlobalSums/do_sum.c:5:9: note: use not simple.
/home/brobey/GlobalSums/do_sum.c:5:9: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
/home/brobey/GlobalSums/do_sum.c:5:9: note: reduc op not supported by target.
/home/brobey/GlobalSums/do_sum.c:5:9: note: cost model: the vector iteration cost = 32 divided by the scalar iteration cost = 10 is greater or equal to the vectorization factor = 2.
/home/brobey/GlobalSums/do_sum.c:5:9: note: not vectorized: vectorization not profitable.
/home/brobey/GlobalSums/do_sum.c:5:9: note: not vectorized: vector version will never be profitable.
/home/brobey/GlobalSums/do_sum.c:5:9: note: step unknown.
/home/brobey/GlobalSums/do_sum.c:5:9: note: not vectorized: unsupported data-type
/home/brobey/GlobalSums/do_sum.c:5:9: note: can't determine vectorization factor.
/home/brobey/GlobalSums/do_sum.c:7:7: note: misalign = 0 bytes of ref D.3445[_17]
/home/brobey/GlobalSums/do_sum.c:7:7: note: misalign = 0 bytes of ref D.3445[_17]
/home/brobey/GlobalSums/do_sum.c:7:7: note: Unknown misalignment, naturally aligned
/home/brobey/GlobalSums/do_sum.c:7:7: note: not ssa-name.
/home/brobey/GlobalSums/do_sum.c:7:7: note: use not simple.
/home/brobey/GlobalSums/do_sum.c:7:7: note: not ssa-name.
/home/brobey/GlobalSums/do_sum.c:7:7: note: use not simple.
/home/brobey/GlobalSums/do_sum.c:7:7: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
/home/brobey/GlobalSums/do_sum.c:7:7: note: num. args = 4 (not unary/binary/ternary op).
/home/brobey/GlobalSums/do_sum.c:7:7: note: not ssa-name.
/home/brobey/GlobalSums/do_sum.c:7:7: note: use not simple.
/home/brobey/GlobalSums/do_sum.c:7:7: note: loop vectorized
/home/brobey/GlobalSums/do_sum.c:1:8: note: loop with 1 iterations completely unrolled (header execution count 105119324)
/home/brobey/GlobalSums/do_sum.c:1:8: note: loop turned into non-loop; it never loops
/home/brobey/GlobalSums/do_sum.c:5:9: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_sum.c:5:9: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_sum.c:5:9: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_sum.c:5:9: note: not vectorized: no vectype for stmt: _49 = MEM[(double *)&D.3445];
 scalar_type: vector(2) double
/home/brobey/GlobalSums/do_sum.c:5:9: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_sum.c:1:8: note: not vectorized: no vectype for stmt: vect__4.9_57 = MEM[(double *)vectp_var.7_55];
 scalar_type: vector(2) double
/home/brobey/GlobalSums/do_sum.c:1:8: note: not vectorized: no vectype for stmt: MEM[(double *)&D.3445] = vect__20.11_59;
 scalar_type: vector(2) double
/home/brobey/GlobalSums/do_sum.c:1:8: note: not vectorized: no grouped stores in basic block.
/home/brobey/GlobalSums/do_sum.c:1:8: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_sum.c:1:8: note: not consecutive access _5 = *_6;
/home/brobey/GlobalSums/do_sum.c:1:8: note: not consecutive access _44 = D.3445[0];
/home/brobey/GlobalSums/do_sum.c:1:8: note: not consecutive access D.3445[0] = _31;
/home/brobey/GlobalSums/do_sum.c:1:8: note: not vectorized: no grouped stores in basic block.
/home/brobey/GlobalSums/do_sum.c:1:8: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_sum.c:10:10: note: not consecutive access _3 = D.3445[0];
/home/brobey/GlobalSums/do_sum.c:10:10: note: not consecutive access _24 = D.3445[_19];
/home/brobey/GlobalSums/do_sum.c:10:10: note: not vectorized: no grouped stores in basic block.
[ 60%] Building C object CMakeFiles/globalsums.dir/do_sum_omp.c.o
/home/brobey/GlobalSums/do_sum_omp.c:5:35: note: not vectorized: number of iterations cannot be computed.
/home/brobey/GlobalSums/do_sum_omp.c:5:35: note: bad loop form.
/home/brobey/GlobalSums/do_sum_omp.c:7:7: note: step unknown.
/home/brobey/GlobalSums/do_sum_omp.c:7:7: note: Unknown misalignment, naturally aligned
/home/brobey/GlobalSums/do_sum_omp.c:7:7: note: not ssa-name.
/home/brobey/GlobalSums/do_sum_omp.c:7:7: note: use not simple.
/home/brobey/GlobalSums/do_sum_omp.c:7:7: note: not ssa-name.
/home/brobey/GlobalSums/do_sum_omp.c:7:7: note: use not simple.
/home/brobey/GlobalSums/do_sum_omp.c:7:7: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
/home/brobey/GlobalSums/do_sum_omp.c:7:7: note: reduc op not supported by target.
/home/brobey/GlobalSums/do_sum_omp.c:7:7: note: cost model: the vector iteration cost = 32 divided by the scalar iteration cost = 11 is greater or equal to the vectorization factor = 2.
/home/brobey/GlobalSums/do_sum_omp.c:7:7: note: not vectorized: vectorization not profitable.
/home/brobey/GlobalSums/do_sum_omp.c:7:7: note: not vectorized: vector version will never be profitable.
/home/brobey/GlobalSums/do_sum_omp.c:7:7: note: step unknown.
/home/brobey/GlobalSums/do_sum_omp.c:7:7: note: not vectorized: unsupported data-type
/home/brobey/GlobalSums/do_sum_omp.c:7:7: note: can't determine vectorization factor.
/home/brobey/GlobalSums/do_sum_omp.c:5:9: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_sum_omp.c:5:9: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_sum_omp.c:5:9: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_sum_omp.c:7:11: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_sum_omp.c:5:35: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_sum_omp.c:5:35: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_sum_omp.c:5:35: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_sum_omp.c:5:35: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_sum_omp.c:5:35: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_sum_omp.c:5:9: note: not consecutive access .omp_data_o.3.var = var_5(D);
/home/brobey/GlobalSums/do_sum_omp.c:5:9: note: not consecutive access .omp_data_o.3.ncells = ncells_3(D);
/home/brobey/GlobalSums/do_sum_omp.c:5:9: note: not consecutive access .omp_data_o.3.sum = 0.0;
/home/brobey/GlobalSums/do_sum_omp.c:5:9: note: not vectorized: no grouped stores in basic block.
/home/brobey/GlobalSums/do_sum_omp.c:9:10: note: not vectorized: not enough data-refs in basic block.
[ 65%] Building C object CMakeFiles/globalsums.dir/do_sum_omp_wbittrunc.c.o
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:8:35: note: not vectorized: number of iterations cannot be computed.
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:8:35: note: bad loop form.
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:10:7: note: step unknown.
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:10:7: note: Unknown misalignment, naturally aligned
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:10:7: note: not ssa-name.
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:10:7: note: use not simple.
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:10:7: note: not ssa-name.
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:10:7: note: use not simple.
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:10:7: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:10:7: note: reduc op not supported by target.
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:10:7: note: cost model: the vector iteration cost = 32 divided by the scalar iteration cost = 11 is greater or equal to the vectorization factor = 2.
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:10:7: note: not vectorized: vectorization not profitable.
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:10:7: note: not vectorized: vector version will never be profitable.
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:10:7: note: step unknown.
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:10:7: note: not vectorized: unsupported data-type
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:10:7: note: can't determine vectorization factor.
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:8:9: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:8:9: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:8:9: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:10:11: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:8:35: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:8:35: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:8:35: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:8:35: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:8:35: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:8:9: note: not consecutive access .omp_data_o.3.var = var_5(D);
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:8:9: note: not consecutive access .omp_data_o.3.ncells = ncells_3(D);
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:8:9: note: not consecutive access .omp_data_o.3.sum = 0.0;
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:8:9: note: not vectorized: no grouped stores in basic block.
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:13:10: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:14:10: note: not vectorized: not enough data-refs in basic block.
[ 70%] Building C object CMakeFiles/globalsums.dir/do_sum_wbittrunc.c.o
/home/brobey/GlobalSums/do_sum_wbittrunc.c:8:4: note: step unknown.
/home/brobey/GlobalSums/do_sum_wbittrunc.c:8:4: note: Unknown misalignment, naturally aligned
/home/brobey/GlobalSums/do_sum_wbittrunc.c:8:4: note: not ssa-name.
/home/brobey/GlobalSums/do_sum_wbittrunc.c:8:4: note: use not simple.
/home/brobey/GlobalSums/do_sum_wbittrunc.c:8:4: note: not ssa-name.
/home/brobey/GlobalSums/do_sum_wbittrunc.c:8:4: note: use not simple.
/home/brobey/GlobalSums/do_sum_wbittrunc.c:8:4: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
/home/brobey/GlobalSums/do_sum_wbittrunc.c:8:4: note: reduc op not supported by target.
/home/brobey/GlobalSums/do_sum_wbittrunc.c:8:4: note: cost model: the vector iteration cost = 32 divided by the scalar iteration cost = 11 is greater or equal to the vectorization factor = 2.
/home/brobey/GlobalSums/do_sum_wbittrunc.c:8:4: note: not vectorized: vectorization not profitable.
/home/brobey/GlobalSums/do_sum_wbittrunc.c:8:4: note: not vectorized: vector version will never be profitable.
/home/brobey/GlobalSums/do_sum_wbittrunc.c:8:4: note: step unknown.
/home/brobey/GlobalSums/do_sum_wbittrunc.c:8:4: note: not vectorized: unsupported data-type
/home/brobey/GlobalSums/do_sum_wbittrunc.c:8:4: note: can't determine vectorization factor.
/home/brobey/GlobalSums/do_sum_wbittrunc.c:8:4: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_sum_wbittrunc.c:8:4: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_sum_wbittrunc.c:12:10: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_sum_wbittrunc.c:13:10: note: not vectorized: not enough data-refs in basic block.
[ 75%] Building C object CMakeFiles/globalsums.dir/do_sum_wdigittrunc.c.o
/home/brobey/GlobalSums/do_sum_wdigittrunc.c:7:4: note: step unknown.
/home/brobey/GlobalSums/do_sum_wdigittrunc.c:7:4: note: Unknown misalignment, naturally aligned
/home/brobey/GlobalSums/do_sum_wdigittrunc.c:7:4: note: not ssa-name.
/home/brobey/GlobalSums/do_sum_wdigittrunc.c:7:4: note: use not simple.
/home/brobey/GlobalSums/do_sum_wdigittrunc.c:7:4: note: not ssa-name.
/home/brobey/GlobalSums/do_sum_wdigittrunc.c:7:4: note: use not simple.
/home/brobey/GlobalSums/do_sum_wdigittrunc.c:7:4: note: can't use a fully-masked loop because the target doesn't have the appropriate masked load or store.
/home/brobey/GlobalSums/do_sum_wdigittrunc.c:7:4: note: reduc op not supported by target.
/home/brobey/GlobalSums/do_sum_wdigittrunc.c:7:4: note: cost model: the vector iteration cost = 32 divided by the scalar iteration cost = 11 is greater or equal to the vectorization factor = 2.
/home/brobey/GlobalSums/do_sum_wdigittrunc.c:7:4: note: not vectorized: vectorization not profitable.
/home/brobey/GlobalSums/do_sum_wdigittrunc.c:7:4: note: not vectorized: vector version will never be profitable.
/home/brobey/GlobalSums/do_sum_wdigittrunc.c:7:4: note: step unknown.
/home/brobey/GlobalSums/do_sum_wdigittrunc.c:7:4: note: not vectorized: unsupported data-type
/home/brobey/GlobalSums/do_sum_wdigittrunc.c:7:4: note: can't determine vectorization factor.
/home/brobey/GlobalSums/do_sum_wdigittrunc.c:7:4: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_sum_wdigittrunc.c:7:4: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_sum_wdigittrunc.c:11:10: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/do_sum_wdigittrunc.c:12:10: note: not vectorized: not enough data-refs in basic block.
[ 80%] Building C object CMakeFiles/globalsums.dir/kahan_gcc_vector.c.o
/home/brobey/GlobalSums/kahan_gcc_vector.c:30:4: note: step unknown.
/home/brobey/GlobalSums/kahan_gcc_vector.c:30:4: note: step unknown.
/home/brobey/GlobalSums/kahan_gcc_vector.c:30:4: note: reduction value used in loop.
/home/brobey/GlobalSums/kahan_gcc_vector.c:30:4: note: Unknown def-use cycle pattern.
/home/brobey/GlobalSums/kahan_gcc_vector.c:30:4: note: reduction value used in loop.
/home/brobey/GlobalSums/kahan_gcc_vector.c:30:4: note: Unknown def-use cycle pattern.
/home/brobey/GlobalSums/kahan_gcc_vector.c:30:4: note: Unsupported pattern.
/home/brobey/GlobalSums/kahan_gcc_vector.c:30:4: note: use not simple.
/home/brobey/GlobalSums/kahan_gcc_vector.c:30:4: note: Unsupported pattern.
/home/brobey/GlobalSums/kahan_gcc_vector.c:30:4: note: not vectorized: unsupported use in stmt.
/home/brobey/GlobalSums/kahan_gcc_vector.c:30:4: note: unexpected pattern.
/home/brobey/GlobalSums/kahan_gcc_vector.c:11:4: note: not vectorized: no vectype for stmt: var_v_21 = MEM[(vec4d *)_3];
 scalar_type: vec4d
/home/brobey/GlobalSums/kahan_gcc_vector.c:11:4: note: bad data references.
/home/brobey/GlobalSums/kahan_gcc_vector.c:30:4: note: loop with 3 iterations completely unrolled (header execution count 118111601)
/home/brobey/GlobalSums/kahan_gcc_vector.c:11:4: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/kahan_gcc_vector.c:11:4: note: not vectorized: no vectype for stmt: var_v_21 = MEM[(vec4d *)_3];
 scalar_type: vec4d
/home/brobey/GlobalSums/kahan_gcc_vector.c:11:4: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/kahan_gcc_vector.c:11:4: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/kahan_gcc_vector.c:37:10: note: not vectorized: no vectype for stmt: MEM[(vec4d *)&sum] = prephitmp_64;
 scalar_type: vec4d
/home/brobey/GlobalSums/kahan_gcc_vector.c:37:10: note: not vectorized: no grouped stores in basic block.
[ 85%] Building C object CMakeFiles/globalsums.dir/kahan_gcc_vector8.c.o
/home/brobey/GlobalSums/kahan_gcc_vector8.c:29:4: note: step unknown.
/home/brobey/GlobalSums/kahan_gcc_vector8.c:29:4: note: step unknown.
/home/brobey/GlobalSums/kahan_gcc_vector8.c:29:4: note: reduction value used in loop.
/home/brobey/GlobalSums/kahan_gcc_vector8.c:29:4: note: Unknown def-use cycle pattern.
/home/brobey/GlobalSums/kahan_gcc_vector8.c:29:4: note: reduction value used in loop.
/home/brobey/GlobalSums/kahan_gcc_vector8.c:29:4: note: Unknown def-use cycle pattern.
/home/brobey/GlobalSums/kahan_gcc_vector8.c:29:4: note: Unsupported pattern.
/home/brobey/GlobalSums/kahan_gcc_vector8.c:29:4: note: use not simple.
/home/brobey/GlobalSums/kahan_gcc_vector8.c:29:4: note: Unsupported pattern.
/home/brobey/GlobalSums/kahan_gcc_vector8.c:29:4: note: not vectorized: unsupported use in stmt.
/home/brobey/GlobalSums/kahan_gcc_vector8.c:29:4: note: unexpected pattern.
/home/brobey/GlobalSums/kahan_gcc_vector8.c:10:4: note: not vectorized: no vectype for stmt: var_v_21 = MEM[(vec8d *)_3];
 scalar_type: vec8d
/home/brobey/GlobalSums/kahan_gcc_vector8.c:10:4: note: bad data references.
/home/brobey/GlobalSums/kahan_gcc_vector8.c:29:4: note: loop with 7 iterations completely unrolled (header execution count 118111603)
/home/brobey/GlobalSums/kahan_gcc_vector8.c:10:4: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/kahan_gcc_vector8.c:10:4: note: not vectorized: no vectype for stmt: var_v_21 = MEM[(vec8d *)_3];
 scalar_type: vec8d
/home/brobey/GlobalSums/kahan_gcc_vector8.c:10:4: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/kahan_gcc_vector8.c:10:4: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/kahan_gcc_vector8.c:36:10: note: not vectorized: no vectype for stmt: MEM[(vec8d *)&sum] = prephitmp_64;
 scalar_type: vec8d
/home/brobey/GlobalSums/kahan_gcc_vector8.c:36:10: note: not vectorized: no grouped stores in basic block.
[ 90%] Building C object CMakeFiles/globalsums.dir/knuth_gcc_vector.c.o
/home/brobey/GlobalSums/knuth_gcc_vector.c:30:4: note: step unknown.
/home/brobey/GlobalSums/knuth_gcc_vector.c:30:4: note: step unknown.
/home/brobey/GlobalSums/knuth_gcc_vector.c:30:4: note: reduction: unknown pattern: final_correction_34 = _7 + _8;
/home/brobey/GlobalSums/knuth_gcc_vector.c:30:4: note: Unknown def-use cycle pattern.
/home/brobey/GlobalSums/knuth_gcc_vector.c:30:4: note: reduction value used in loop.
/home/brobey/GlobalSums/knuth_gcc_vector.c:30:4: note: Unknown def-use cycle pattern.
/home/brobey/GlobalSums/knuth_gcc_vector.c:30:4: note: Unsupported pattern.
/home/brobey/GlobalSums/knuth_gcc_vector.c:30:4: note: not vectorized: unsupported use in stmt.
/home/brobey/GlobalSums/knuth_gcc_vector.c:30:4: note: unexpected pattern.
/home/brobey/GlobalSums/knuth_gcc_vector.c:11:4: note: not vectorized: no vectype for stmt: var_v_19 = MEM[(vec4d *)_3];
 scalar_type: vec4d
/home/brobey/GlobalSums/knuth_gcc_vector.c:11:4: note: bad data references.
/home/brobey/GlobalSums/knuth_gcc_vector.c:30:4: note: loop with 3 iterations completely unrolled (header execution count 118111601)
/home/brobey/GlobalSums/knuth_gcc_vector.c:11:4: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/knuth_gcc_vector.c:11:4: note: not vectorized: no vectype for stmt: var_v_19 = MEM[(vec4d *)_3];
 scalar_type: vec4d
/home/brobey/GlobalSums/knuth_gcc_vector.c:11:4: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/knuth_gcc_vector.c:11:4: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/knuth_gcc_vector.c:40:10: note: not vectorized: no vectype for stmt: MEM[(vec4d *)&sum] = prephitmp_83;
 scalar_type: vec4d
/home/brobey/GlobalSums/knuth_gcc_vector.c:40:10: note: not vectorized: no grouped stores in basic block.
[ 95%] Building C object CMakeFiles/globalsums.dir/knuth_gcc_vector8.c.o
/home/brobey/GlobalSums/knuth_gcc_vector8.c:30:4: note: step unknown.
/home/brobey/GlobalSums/knuth_gcc_vector8.c:30:4: note: step unknown.
/home/brobey/GlobalSums/knuth_gcc_vector8.c:30:4: note: reduction: unknown pattern: final_correction_34 = _7 + _8;
/home/brobey/GlobalSums/knuth_gcc_vector8.c:30:4: note: Unknown def-use cycle pattern.
/home/brobey/GlobalSums/knuth_gcc_vector8.c:30:4: note: reduction value used in loop.
/home/brobey/GlobalSums/knuth_gcc_vector8.c:30:4: note: Unknown def-use cycle pattern.
/home/brobey/GlobalSums/knuth_gcc_vector8.c:30:4: note: Unsupported pattern.
/home/brobey/GlobalSums/knuth_gcc_vector8.c:30:4: note: not vectorized: unsupported use in stmt.
/home/brobey/GlobalSums/knuth_gcc_vector8.c:30:4: note: unexpected pattern.
/home/brobey/GlobalSums/knuth_gcc_vector8.c:11:4: note: not vectorized: no vectype for stmt: var_v_19 = MEM[(vec8d *)_3];
 scalar_type: vec8d
/home/brobey/GlobalSums/knuth_gcc_vector8.c:11:4: note: bad data references.
/home/brobey/GlobalSums/knuth_gcc_vector8.c:30:4: note: loop with 7 iterations completely unrolled (header execution count 118111603)
/home/brobey/GlobalSums/knuth_gcc_vector8.c:11:4: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/knuth_gcc_vector8.c:11:4: note: not vectorized: no vectype for stmt: var_v_19 = MEM[(vec8d *)_3];
 scalar_type: vec8d
/home/brobey/GlobalSums/knuth_gcc_vector8.c:11:4: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/knuth_gcc_vector8.c:11:4: note: not vectorized: not enough data-refs in basic block.
/home/brobey/GlobalSums/knuth_gcc_vector8.c:40:10: note: not vectorized: no vectype for stmt: MEM[(vec8d *)&sum] = prephitmp_83;
 scalar_type: vec8d
/home/brobey/GlobalSums/knuth_gcc_vector8.c:40:10: note: not vectorized: no grouped stores in basic block.
[100%] Linking C executable globalsums
[100%] Built target globalsums
--- max num openmp threads: 256
--- num openmp threads in parallel region: 256
SETTINGS INFO -- ncells 16 log 4 ndigits 3 ndigitsld 0 nbits 8 nbitsld 2
Initializing mesh with Leblanc problem, high values first
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Serial sum
  accurate sum 0.8000000008      sum 0.8000000008000001 diff   1.11e-16 relative diff  1.388e-16 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000002   Serial sum with digit truncation
  accurate sum 0.8000000007999972 sum 0.8000000007999972 diff          0 relative diff          0 runtime 0.000001   Serial sum with bit truncation
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000001   Serial sum with long double accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000002   Serial sum with long double accumulator with ndigit truncation
  accurate sum 0.8000000007999999 sum 0.8000000007999999 diff          0 relative diff          0 runtime 0.000001   Serial sum with long double accumulator with bit truncation
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double kahan sum accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 0.8000000008      sum 0.8000000007999999 diff  -1.11e-16 relative diff -1.388e-16 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double knuth sum accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   8 wide GCC vector extensions Knuth sum
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000001   Pair-wise sum


  accurate sum 0.8000000008      sum 0.8000000007999999 diff  -1.11e-16 relative diff -1.388e-16 runtime 0.003184   OpenMP sum
  accurate sum 0.8000000007999972 sum 0.8000000007999972 diff          0 relative diff          0 runtime 0.004243   OpenMP sum with bit truncation
  accurate sum 0.8000000008      sum 0.8000000007999999 diff  -1.11e-16 relative diff -1.388e-16 runtime 0.009816   OpenMP sum with double double kahan sum accumulator
  accurate sum 0.8000000007999999 sum 0.8000000007999999 diff          0 relative diff          0 runtime 0.006644   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 32 log 5 ndigits 4 ndigitsld 1 nbits 9 nbitsld 3
Initializing mesh with Leblanc problem, high values first
  accurate sum 1.6000000016      sum 1.6000000016      diff  4.441e-16 relative diff  2.776e-16 runtime 0.000000   Serial sum
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000001   Serial sum with digit truncation
  accurate sum 1.600000001599938 sum 1.600000001599938 diff          0 relative diff          0 runtime 0.000000   Serial sum with bit truncation
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000002   Serial sum with long double accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000003   Serial sum with long double accumulator with ndigit truncation
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000002   Serial sum with long double accumulator with bit truncation
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double kahan sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff  -2.22e-16 relative diff -1.388e-16 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000001   Serial sum with double double knuth sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   8 wide GCC vector extensions Knuth sum
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000001   Pair-wise sum


  accurate sum 1.6000000016      sum 1.600000001600001 diff  6.661e-16 relative diff  4.163e-16 runtime 0.003506   OpenMP sum
  accurate sum 1.600000001599994 sum 1.600000001599994 diff          0 relative diff          0 runtime 0.005061   OpenMP sum with bit truncation
  accurate sum 1.6000000016      sum 1.600000001600001 diff  6.661e-16 relative diff  4.163e-16 runtime 0.006555   OpenMP sum with double double kahan sum accumulator
  accurate sum 1.6000000016      sum 1.600000001600001 diff  8.882e-16 relative diff  5.551e-16 runtime 0.007423   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 64 log 6 ndigits 4 ndigitsld 1 nbits 9 nbitsld 3
Initializing mesh with Leblanc problem, high values first
  accurate sum 3.2000000032      sum 3.200000003200002 diff  1.776e-15 relative diff  5.551e-16 runtime 0.000000   Serial sum
  accurate sum 3.2000000032      sum 3.200000003200001 diff  8.882e-16 relative diff  2.776e-16 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000001   Serial sum with digit truncation
  accurate sum 3.200000003199875 sum 3.200000003199875 diff          0 relative diff          0 runtime 0.000000   Serial sum with bit truncation
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000004   Serial sum with long double accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000004   Serial sum with long double accumulator with ndigit truncation
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000004   Serial sum with long double accumulator with bit truncation
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000001   Serial sum with double double kahan sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff -4.441e-16 relative diff -1.388e-16 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000001   Serial sum with double double knuth sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000001   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   8 wide GCC vector extensions Knuth sum
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000002   Pair-wise sum


  accurate sum 3.2000000032      sum 3.200000003200002 diff  1.776e-15 relative diff  5.551e-16 runtime 0.002483   OpenMP sum
  accurate sum 3.200000003199989 sum 3.200000003199989 diff          0 relative diff          0 runtime 0.003678   OpenMP sum with bit truncation
  accurate sum 3.2000000032      sum 3.200000003200002 diff   2.22e-15 relative diff  6.939e-16 runtime 0.006040   OpenMP sum with double double kahan sum accumulator
  accurate sum 3.2000000032      sum 3.200000003200001 diff  1.776e-15 relative diff  5.551e-16 runtime 0.006954   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 128 log 7 ndigits 4 ndigitsld 1 nbits 11 nbitsld 4
Initializing mesh with Leblanc problem, high values first
  accurate sum 6.4000000064      sum 6.400000006399994 diff -6.217e-15 relative diff -9.714e-16 runtime 0.000000   Serial sum
  accurate sum 6.4000000064      sum 6.400000006400004 diff  3.553e-15 relative diff  5.551e-16 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000001   Serial sum with digit truncation
  accurate sum 6.400000006398841 sum 6.400000006398841 diff          0 relative diff          0 runtime 0.000001   Serial sum with bit truncation
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000009   Serial sum with long double accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000010   Serial sum with long double accumulator with ndigit truncation
  accurate sum 6.400000006399992 sum 6.400000006399992 diff          0 relative diff          0 runtime 0.000009   Serial sum with long double accumulator with bit truncation
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000001   Serial sum with double double kahan sum accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000001   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 6.4000000064      sum 6.400000006399999 diff -8.882e-16 relative diff -1.388e-16 runtime 0.000001   8 wide GCC vector extensions Kahan sum
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000002   Serial sum with double double knuth sum accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000001   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000001   8 wide GCC vector extensions Knuth sum
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000002   Pair-wise sum


  accurate sum 6.4000000064      sum 6.400000006399995 diff -5.329e-15 relative diff -8.327e-16 runtime 0.002923   OpenMP sum
  accurate sum 6.400000006399978 sum 6.400000006399978 diff          0 relative diff          0 runtime 0.003316   OpenMP sum with bit truncation
  accurate sum 6.4000000064      sum 6.400000006399995 diff -5.329e-15 relative diff -8.327e-16 runtime 0.004962   OpenMP sum with double double kahan sum accumulator
  accurate sum 6.400000006399999 sum 6.400000006399992 diff -7.105e-15 relative diff  -1.11e-15 runtime 0.006686   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 256 log 8 ndigits 4 ndigitsld 1 nbits 12 nbitsld 4
Initializing mesh with Leblanc problem, high values first
  accurate sum 12.8000000128     sum 12.80000001279997 diff -2.842e-14 relative diff  -2.22e-15 runtime 0.000001   Serial sum
  accurate sum 12.8000000128     sum 12.80000001279999 diff -1.243e-14 relative diff -9.714e-16 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000002   Serial sum with digit truncation
  accurate sum 12.80000001279404 sum 12.80000001279404 diff          0 relative diff          0 runtime 0.000001   Serial sum with bit truncation
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000010   Serial sum with long double accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000011   Serial sum with long double accumulator with ndigit truncation
  accurate sum 12.80000001279998 sum 12.80000001279998 diff          0 relative diff          0 runtime 0.000010   Serial sum with long double accumulator with bit truncation
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000002   Serial sum with double double kahan sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000001   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff -1.776e-15 relative diff -1.388e-16 runtime 0.000001   8 wide GCC vector extensions Kahan sum
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000004   Serial sum with double double knuth sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000001   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000001   8 wide GCC vector extensions Knuth sum
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000002   Pair-wise sum


  accurate sum 12.8000000128     sum 12.80000001279997 diff -2.665e-14 relative diff -2.082e-15 runtime 0.004394   OpenMP sum
  accurate sum 12.8000000127995  sum 12.8000000127995  diff          0 relative diff          0 runtime 0.002425   OpenMP sum with bit truncation
  accurate sum 12.8000000128     sum 12.80000001279997 diff -2.665e-14 relative diff -2.082e-15 runtime 0.007371   OpenMP sum with double double kahan sum accumulator
  accurate sum 12.8000000128     sum 12.80000001279997 diff -2.842e-14 relative diff  -2.22e-15 runtime 0.006161   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 512 log 9 ndigits 4 ndigitsld 1 nbits 13 nbitsld 5
Initializing mesh with Leblanc problem, high values first
  accurate sum 25.6000000256     sum 25.60000002559964 diff -3.588e-13 relative diff -1.402e-14 runtime 0.000002   Serial sum
  accurate sum 25.6000000256     sum 25.60000002559994 diff -5.684e-14 relative diff  -2.22e-15 runtime 0.000001   Serial sum (OpenMP SIMD pragma)
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000002   Serial sum with digit truncation
  accurate sum 25.60000002558809 sum 25.60000002558809 diff          0 relative diff          0 runtime 0.000002   Serial sum with bit truncation
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000036   Serial sum with long double accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000037   Serial sum with long double accumulator with ndigit truncation
  accurate sum 25.60000002559991 sum 25.60000002559991 diff          0 relative diff          0 runtime 0.000036   Serial sum with long double accumulator with bit truncation
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000004   Serial sum with double double kahan sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000002   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff -3.553e-15 relative diff -1.388e-16 runtime 0.000002   8 wide GCC vector extensions Kahan sum
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000008   Serial sum with double double knuth sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000003   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000002   8 wide GCC vector extensions Knuth sum
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000003   Pair-wise sum


  accurate sum 25.6000000256     sum 25.60000002559995 diff -5.329e-14 relative diff -2.082e-15 runtime 0.004105   OpenMP sum
  accurate sum 25.600000025599   sum 25.600000025599   diff          0 relative diff          0 runtime 0.002107   OpenMP sum with bit truncation
  accurate sum 25.6000000256     sum 25.60000002559995 diff -5.329e-14 relative diff -2.082e-15 runtime 0.005529   OpenMP sum with double double kahan sum accumulator
  accurate sum 25.6000000256     sum 25.60000002559994 diff -5.684e-14 relative diff  -2.22e-15 runtime 0.004891   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 1024 log 10 ndigits 5 ndigitsld 2 nbits 14 nbitsld 6
Initializing mesh with Leblanc problem, high values first
  accurate sum 51.2000000512     sum 51.20000005120137 diff  1.371e-12 relative diff  2.678e-14 runtime 0.000003   Serial sum
  accurate sum 51.2000000512     sum 51.20000005119928 diff -7.176e-13 relative diff -1.402e-14 runtime 0.000002   Serial sum (OpenMP SIMD pragma)
  accurate sum 51.200000051      sum 51.200000051      diff          0 relative diff          0 runtime 0.000004   Serial sum with digit truncation
  accurate sum 51.20000005117618 sum 51.20000005117618 diff          0 relative diff          0 runtime 0.000003   Serial sum with bit truncation
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000071   Serial sum with long double accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000072   Serial sum with long double accumulator with ndigit truncation
  accurate sum 51.20000005119982 sum 51.20000005119982 diff          0 relative diff          0 runtime 0.000071   Serial sum with long double accumulator with bit truncation
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000008   Serial sum with double double kahan sum accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000003   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 51.2000000512     sum 51.20000005119999 diff -7.105e-15 relative diff -1.388e-16 runtime 0.000003   8 wide GCC vector extensions Kahan sum
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000017   Serial sum with double double knuth sum accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000005   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000003   8 wide GCC vector extensions Knuth sum
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000004   Pair-wise sum


  accurate sum 51.2000000512     sum 51.20000005119989 diff -1.066e-13 relative diff -2.082e-15 runtime 0.001520   OpenMP sum
  accurate sum 51.20000005119073 sum 51.20000005119073 diff          0 relative diff          0 runtime 0.002353   OpenMP sum with bit truncation
  accurate sum 51.2000000512     sum 51.20000005119989 diff -1.137e-13 relative diff  -2.22e-15 runtime 0.005229   OpenMP sum with double double kahan sum accumulator
  accurate sum 51.20000005119999 sum 51.20000005119988 diff -1.137e-13 relative diff  -2.22e-15 runtime 0.002925   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 2048 log 11 ndigits 5 ndigitsld 2 nbits 15 nbitsld 6
Initializing mesh with Leblanc problem, high values first
  accurate sum 102.4000001024    sum 102.4000001024003 diff  2.842e-13 relative diff  2.776e-15 runtime 0.000006   Serial sum
  accurate sum 102.4000001024    sum 102.4000001024027 diff  2.743e-12 relative diff  2.678e-14 runtime 0.000003   Serial sum (OpenMP SIMD pragma)
  accurate sum 102.4000001       sum 102.4000001       diff          0 relative diff          0 runtime 0.000006   Serial sum with digit truncation
  accurate sum 102.4000001023524 sum 102.4000001023524 diff          0 relative diff          0 runtime 0.000006   Serial sum with bit truncation
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000142   Serial sum with long double accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000143   Serial sum with long double accumulator with ndigit truncation
  accurate sum 102.4000001023996 sum 102.4000001023996 diff          0 relative diff          0 runtime 0.000142   Serial sum with long double accumulator with bit truncation
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000017   Serial sum with double double kahan sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000006   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff -1.421e-14 relative diff -1.388e-16 runtime 0.000005   8 wide GCC vector extensions Kahan sum
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000034   Serial sum with double double knuth sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000011   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000007   8 wide GCC vector extensions Knuth sum
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000008   Pair-wise sum


  accurate sum 102.4000001024    sum 102.4000001023998 diff -2.274e-13 relative diff  -2.22e-15 runtime 0.000545   OpenMP sum
  accurate sum 102.4000001023524 sum 102.4000001023524 diff          0 relative diff          0 runtime 0.000551   OpenMP sum with bit truncation
  accurate sum 102.4000001024    sum 102.4000001023998 diff -2.274e-13 relative diff  -2.22e-15 runtime 0.000966   OpenMP sum with double double kahan sum accumulator
  accurate sum 102.4000001024    sum 102.4000001023998 diff -2.274e-13 relative diff  -2.22e-15 runtime 0.001058   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 4096 log 12 ndigits 5 ndigitsld 2 nbits 15 nbitsld 7
Initializing mesh with Leblanc problem, high values first
  accurate sum 204.8000002048    sum 204.8000002047672 diff  -3.28e-11 relative diff -1.601e-13 runtime 0.000011   Serial sum
  accurate sum 204.8000002048    sum 204.8000002048006 diff  5.684e-13 relative diff  2.776e-15 runtime 0.000006   Serial sum (OpenMP SIMD pragma)
  accurate sum 204.8000002       sum 204.8000002       diff          0 relative diff          0 runtime 0.000012   Serial sum with digit truncation
  accurate sum 204.8000002047047 sum 204.8000002047047 diff          0 relative diff          0 runtime 0.000011   Serial sum with bit truncation
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000128   Serial sum with long double accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000128   Serial sum with long double accumulator with ndigit truncation
  accurate sum 204.8000002047993 sum 204.8000002047993 diff          0 relative diff          0 runtime 0.000128   Serial sum with long double accumulator with bit truncation
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000034   Serial sum with double double kahan sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000012   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff -2.842e-14 relative diff -1.388e-16 runtime 0.000006   8 wide GCC vector extensions Kahan sum
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000067   Serial sum with double double knuth sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000021   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000010   8 wide GCC vector extensions Knuth sum
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000006   Pair-wise sum


  accurate sum 204.8000002048    sum 204.8000002047996 diff -4.263e-13 relative diff -2.082e-15 runtime 0.000520   OpenMP sum
  accurate sum 204.8000002047047 sum 204.8000002047047 diff          0 relative diff          0 runtime 0.000526   OpenMP sum with bit truncation
  accurate sum 204.8000002048    sum 204.8000002047996 diff -4.263e-13 relative diff -2.082e-15 runtime 0.000889   OpenMP sum with double double kahan sum accumulator
  accurate sum 204.8000002048    sum 204.8000002047995 diff -4.547e-13 relative diff  -2.22e-15 runtime 0.000991   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 8192 log 13 ndigits 5 ndigitsld 2 nbits 17 nbitsld 7
Initializing mesh with Leblanc problem, high values first
  accurate sum 409.6000004096    sum 409.6000004095737 diff -2.626e-11 relative diff -6.412e-14 runtime 0.000022   Serial sum
  accurate sum 409.6000004096    sum 409.6000004095344 diff  -6.56e-11 relative diff -1.601e-13 runtime 0.000011   Serial sum (OpenMP SIMD pragma)
  accurate sum 409.60000041      sum 409.60000041      diff          0 relative diff          0 runtime 0.000023   Serial sum with digit truncation
  accurate sum 409.6000004038215 sum 409.6000004038215 diff          0 relative diff          0 runtime 0.000023   Serial sum with bit truncation
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000566   Serial sum with long double accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000455   Serial sum with long double accumulator with ndigit truncation
  accurate sum 409.6000004095986 sum 409.6000004095986 diff          0 relative diff          0 runtime 0.000256   Serial sum with long double accumulator with bit truncation
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000067   Serial sum with double double kahan sum accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000025   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 409.6000004096    sum 409.6000004095999 diff -5.684e-14 relative diff -1.388e-16 runtime 0.000013   8 wide GCC vector extensions Kahan sum
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000134   Serial sum with double double knuth sum accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000043   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000021   8 wide GCC vector extensions Knuth sum
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000011   Pair-wise sum


  accurate sum 409.6000004096    sum 409.6000004095991 diff -8.527e-13 relative diff -2.082e-15 runtime 0.000528   OpenMP sum
  accurate sum 409.6000004094094 sum 409.6000004094094 diff          0 relative diff          0 runtime 0.000515   OpenMP sum with bit truncation
  accurate sum 409.6000004096    sum 409.6000004095991 diff -9.095e-13 relative diff  -2.22e-15 runtime 0.000908   OpenMP sum with double double kahan sum accumulator
  accurate sum 409.6000004095999 sum 409.600000409599  diff -9.095e-13 relative diff  -2.22e-15 runtime 0.001019   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 16384 log 14 ndigits 5 ndigitsld 2 nbits 18 nbitsld 8
Initializing mesh with Leblanc problem, high values first
  accurate sum 819.2000008192    sum 819.2000008196816 diff  4.816e-10 relative diff  5.879e-13 runtime 0.000045   Serial sum
  accurate sum 819.2000008192    sum 819.2000008191475 diff -5.252e-11 relative diff -6.412e-14 runtime 0.000023   Serial sum (OpenMP SIMD pragma)
  accurate sum 819.20000082      sum 819.20000082      diff          0 relative diff          0 runtime 0.000046   Serial sum with digit truncation
  accurate sum 819.2000007927418 sum 819.2000007927418 diff          0 relative diff          0 runtime 0.000045   Serial sum with bit truncation
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000965   Serial sum with long double accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000508   Serial sum with long double accumulator with ndigit truncation
  accurate sum 819.2000008191972 sum 819.2000008191972 diff          0 relative diff          0 runtime 0.000510   Serial sum with long double accumulator with bit truncation
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000134   Serial sum with double double kahan sum accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000051   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 819.2000008192    sum 819.2000008191999 diff -1.137e-13 relative diff -1.388e-16 runtime 0.000025   8 wide GCC vector extensions Kahan sum
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000268   Serial sum with double double knuth sum accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000087   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000041   8 wide GCC vector extensions Knuth sum
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000051   Pair-wise sum


  accurate sum 819.2000008192    sum 819.2000008191981 diff -1.933e-12 relative diff -2.359e-15 runtime 0.000536   OpenMP sum
  accurate sum 819.2000008188188 sum 819.2000008188188 diff          0 relative diff          0 runtime 0.000601   OpenMP sum with bit truncation
  accurate sum 819.2000008192    sum 819.2000008191983 diff -1.705e-12 relative diff -2.082e-15 runtime 0.000921   OpenMP sum with double double kahan sum accumulator
  accurate sum 819.2000008191999 sum 819.2000008191981 diff -1.819e-12 relative diff  -2.22e-15 runtime 0.001056   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 32768 log 15 ndigits 6 ndigitsld 3 nbits 19 nbitsld 9
Initializing mesh with Leblanc problem, high values first
  accurate sum 1638.4000016384   sum 1638.400001638733 diff  3.331e-10 relative diff  2.033e-13 runtime 0.000090   Serial sum
  accurate sum 1638.4000016384   sum 1638.400001639363 diff  9.632e-10 relative diff  5.879e-13 runtime 0.000046   Serial sum (OpenMP SIMD pragma)
  accurate sum 1638.400002       sum 1638.400002       diff          0 relative diff          0 runtime 0.000091   Serial sum with digit truncation
  accurate sum 1638.400001525879 sum 1638.400001525879 diff          0 relative diff          0 runtime 0.000091   Serial sum with bit truncation
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.001022   Serial sum with long double accumulator
  accurate sum 1638.400001638    sum 1638.400001638    diff          0 relative diff          0 runtime 0.001018   Serial sum with long double accumulator with ndigit truncation
  accurate sum 1638.400001638336 sum 1638.400001638336 diff          0 relative diff          0 runtime 0.001022   Serial sum with long double accumulator with bit truncation
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000268   Serial sum with double double kahan sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000099   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff -2.274e-13 relative diff -1.388e-16 runtime 0.000053   8 wide GCC vector extensions Kahan sum
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000536   Serial sum with double double knuth sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000164   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000085   8 wide GCC vector extensions Knuth sum
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000050   Pair-wise sum


  accurate sum 1638.4000016384   sum 1638.400001638395 diff  -5.23e-12 relative diff -3.192e-15 runtime 0.000507   OpenMP sum
  accurate sum 1638.400001630187 sum 1638.400001630187 diff          0 relative diff          0 runtime 0.000630   OpenMP sum with bit truncation
  accurate sum 1638.4000016384   sum 1638.400001638397 diff -3.411e-12 relative diff -2.082e-15 runtime 0.000922   OpenMP sum with double double kahan sum accumulator
  accurate sum 1638.4000016384   sum 1638.400001638396 diff -3.638e-12 relative diff  -2.22e-15 runtime 0.001081   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 65536 log 16 ndigits 6 ndigitsld 3 nbits 20 nbitsld 9
Initializing mesh with Leblanc problem, high values first
  accurate sum 3276.8000032768   sum 3276.800003276371 diff -4.293e-10 relative diff  -1.31e-13 runtime 0.000179   Serial sum
  accurate sum 3276.8000032768   sum 3276.800003277466 diff  6.662e-10 relative diff  2.033e-13 runtime 0.000090   Serial sum (OpenMP SIMD pragma)
  accurate sum 3276.800003       sum 3276.800003       diff          0 relative diff          0 runtime 0.000180   Serial sum with digit truncation
  accurate sum 3276.800003051758 sum 3276.800003051758 diff          0 relative diff          0 runtime 0.000179   Serial sum with bit truncation
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.002159   Serial sum with long double accumulator
  accurate sum 3276.800003277    sum 3276.800003277    diff          0 relative diff          0 runtime 0.002027   Serial sum with long double accumulator with ndigit truncation
  accurate sum 3276.800003276672 sum 3276.800003276672 diff          0 relative diff          0 runtime 0.002041   Serial sum with long double accumulator with bit truncation
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000536   Serial sum with double double kahan sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000199   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff -4.547e-13 relative diff -1.388e-16 runtime 0.000099   8 wide GCC vector extensions Kahan sum
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.001072   Serial sum with double double knuth sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000328   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000165   8 wide GCC vector extensions Knuth sum
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000102   Pair-wise sum


  accurate sum 3276.8000032768   sum 3276.800003276805 diff  5.457e-12 relative diff  1.665e-15 runtime 0.000576   OpenMP sum
  accurate sum 3276.800003260374 sum 3276.800003260374 diff          0 relative diff          0 runtime 0.000530   OpenMP sum with bit truncation
  accurate sum 3276.8000032768   sum 3276.800003276793 diff -7.276e-12 relative diff  -2.22e-15 runtime 0.000882   OpenMP sum with double double kahan sum accumulator
  accurate sum 3276.8000032768   sum 3276.800003276792 diff -7.276e-12 relative diff  -2.22e-15 runtime 0.000982   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 131072 log 17 ndigits 6 ndigitsld 3 nbits 21 nbitsld 10
Initializing mesh with Leblanc problem, high values first
  accurate sum 6553.6000065536   sum 6553.600006562821 diff  9.221e-09 relative diff  1.407e-12 runtime 0.000358   Serial sum
  accurate sum 6553.6000065536   sum 6553.600006552741 diff -8.586e-10 relative diff  -1.31e-13 runtime 0.000180   Serial sum (OpenMP SIMD pragma)
  accurate sum 6553.600007       sum 6553.600007       diff          0 relative diff          0 runtime 0.000358   Serial sum with digit truncation
  accurate sum 6553.600006103516 sum 6553.600006103516 diff          0 relative diff          0 runtime 0.000358   Serial sum with bit truncation
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.004074   Serial sum with long double accumulator
  accurate sum 6553.600006554    sum 6553.600006554    diff          0 relative diff          0 runtime 0.004063   Serial sum with long double accumulator with ndigit truncation
  accurate sum 6553.600006553344 sum 6553.600006553344 diff          0 relative diff          0 runtime 0.004073   Serial sum with long double accumulator with bit truncation
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.001072   Serial sum with double double kahan sum accumulator
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000395   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 6553.6000065536   sum 6553.600006553599 diff -9.095e-13 relative diff -1.388e-16 runtime 0.000197   8 wide GCC vector extensions Kahan sum
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.002153   Serial sum with double double knuth sum accumulator
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000652   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000327   8 wide GCC vector extensions Knuth sum
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000209   Pair-wise sum


  accurate sum 6553.6000065536   sum 6553.600006553666 diff  6.639e-11 relative diff  1.013e-14 runtime 0.000525   OpenMP sum
  accurate sum 6553.600006461143 sum 6553.600006461143 diff          0 relative diff          0 runtime 0.000598   OpenMP sum with bit truncation
  accurate sum 6553.6000065536   sum 6553.600006553586 diff -1.364e-11 relative diff -2.082e-15 runtime 0.000874   OpenMP sum with double double kahan sum accumulator
  accurate sum 6553.600006553599 sum 6553.600006553585 diff -1.455e-11 relative diff  -2.22e-15 runtime 0.000996   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 262144 log 18 ndigits 6 ndigitsld 3 nbits 22 nbitsld 10
Initializing mesh with Leblanc problem, high values first
  accurate sum 13107.2000131072  sum 13107.20001314317 diff  3.597e-08 relative diff  2.745e-12 runtime 0.000719   Serial sum
  accurate sum 13107.2000131072  sum 13107.20001312564 diff  1.844e-08 relative diff  1.407e-12 runtime 0.000363   Serial sum (OpenMP SIMD pragma)
  accurate sum 13107.20001       sum 13107.20001       diff          0 relative diff          0 runtime 0.000716   Serial sum with digit truncation
  accurate sum 13107.20001220703 sum 13107.20001220703 diff          0 relative diff          0 runtime 0.000724   Serial sum with bit truncation
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.008157   Serial sum with long double accumulator
  accurate sum 13107.20001311    sum 13107.20001311    diff          0 relative diff          0 runtime 0.008110   Serial sum with long double accumulator with ndigit truncation
  accurate sum 13107.20001310669 sum 13107.20001310669 diff          0 relative diff          0 runtime 0.008156   Serial sum with long double accumulator with bit truncation
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.002144   Serial sum with double double kahan sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000796   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff -1.819e-12 relative diff -1.388e-16 runtime 0.000394   8 wide GCC vector extensions Kahan sum
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.004295   Serial sum with double double knuth sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.001311   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000654   8 wide GCC vector extensions Knuth sum
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000420   Pair-wise sum


  accurate sum 13107.2000131072  sum 13107.20001310698 diff -2.201e-10 relative diff -1.679e-14 runtime 0.000527   OpenMP sum
  accurate sum 13107.20001268387 sum 13107.20001268387 diff          0 relative diff          0 runtime 0.000648   OpenMP sum with bit truncation
  accurate sum 13107.2000131072  sum 13107.20001310717 diff -2.728e-11 relative diff -2.082e-15 runtime 0.000896   OpenMP sum with double double kahan sum accumulator
  accurate sum 13107.2000131072  sum 13107.20001310717 diff  -2.91e-11 relative diff  -2.22e-15 runtime 0.001047   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 524288 log 19 ndigits 6 ndigitsld 3 nbits 23 nbitsld 11
Initializing mesh with Leblanc problem, high values first
  accurate sum 26214.4000262144  sum 26214.40002564823 diff -5.662e-07 relative diff  -2.16e-11 runtime 0.001430   Serial sum
  accurate sum 26214.4000262144  sum 26214.40002628635 diff  7.195e-08 relative diff  2.745e-12 runtime 0.000715   Serial sum (OpenMP SIMD pragma)
  accurate sum 26214.40003       sum 26214.40003       diff          0 relative diff          0 runtime 0.001430   Serial sum with digit truncation
  accurate sum 26214.40002441406 sum 26214.40002441406 diff          0 relative diff          0 runtime 0.001430   Serial sum with bit truncation
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.016321   Serial sum with long double accumulator
  accurate sum 26214.40002621    sum 26214.40002621    diff          0 relative diff          0 runtime 0.016211   Serial sum with long double accumulator with ndigit truncation
  accurate sum 26214.40002620965 sum 26214.40002620965 diff          0 relative diff          0 runtime 0.016324   Serial sum with long double accumulator with bit truncation
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.004289   Serial sum with double double kahan sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.001593   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff -3.638e-12 relative diff -1.388e-16 runtime 0.000788   8 wide GCC vector extensions Kahan sum
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.008577   Serial sum with double double knuth sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.002629   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.001316   8 wide GCC vector extensions Knuth sum
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.000850   Pair-wise sum


  accurate sum 26214.4000262144  sum 26214.40002621341 diff -9.932e-10 relative diff -3.789e-14 runtime 0.000486   OpenMP sum
  accurate sum 26214.40002441406 sum 26214.40002441406 diff          0 relative diff          0 runtime 0.000554   OpenMP sum with bit truncation
  accurate sum 26214.4000262144  sum 26214.40002621435 diff -5.457e-11 relative diff -2.082e-15 runtime 0.000917   OpenMP sum with double double kahan sum accumulator
  accurate sum 26214.4000262144  sum 26214.40002621434 diff -5.821e-11 relative diff  -2.22e-15 runtime 0.001025   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 1048576 log 20 ndigits 7 ndigitsld 4 nbits 24 nbitsld 12
Initializing mesh with Leblanc problem, high values first
  accurate sum 52428.8000524288  sum 52428.80005292332 diff  4.945e-07 relative diff  9.432e-12 runtime 0.002859   Serial sum
  accurate sum 52428.8000524288  sum 52428.80005129646 diff -1.132e-06 relative diff  -2.16e-11 runtime 0.001430   Serial sum (OpenMP SIMD pragma)
  accurate sum 52428.8001        sum 52428.8001        diff          0 relative diff          0 runtime 0.002860   Serial sum with digit truncation
  accurate sum 52428.80004882812 sum 52428.80004882812 diff          0 relative diff          0 runtime 0.002867   Serial sum with bit truncation
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.032634   Serial sum with long double accumulator
  accurate sum 52428.8000524     sum 52428.8000524     diff          0 relative diff          0 runtime 0.032448   Serial sum with long double accumulator with ndigit truncation
  accurate sum 52428.8000524044  sum 52428.8000524044  diff          0 relative diff          0 runtime 0.032618   Serial sum with long double accumulator with bit truncation
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.008584   Serial sum with double double kahan sum accumulator
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.003173   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 52428.8000524288  sum 52428.80005242879 diff -7.276e-12 relative diff -1.388e-16 runtime 0.001574   8 wide GCC vector extensions Kahan sum
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.017161   Serial sum with double double knuth sum accumulator
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.005249   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.002622   8 wide GCC vector extensions Knuth sum
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.001720   Pair-wise sum


  accurate sum 52428.8000524288  sum 52428.80005243207 diff  3.267e-09 relative diff  6.231e-14 runtime 0.000470   OpenMP sum
  accurate sum 52428.80004882812 sum 52428.80004882812 diff          0 relative diff          0 runtime 0.000484   OpenMP sum with bit truncation
  accurate sum 52428.8000524288  sum 52428.80005242868 diff -1.164e-10 relative diff  -2.22e-15 runtime 0.000981   OpenMP sum with double double kahan sum accumulator
  accurate sum 52428.80005242879 sum 52428.80005242868 diff -1.164e-10 relative diff  -2.22e-15 runtime 0.001029   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 2097152 log 21 ndigits 7 ndigitsld 4 nbits 25 nbitsld 12
Initializing mesh with Leblanc problem, high values first
  accurate sum 104857.6001048576 sum 104857.6001084272 diff   3.57e-06 relative diff  3.404e-11 runtime 0.005735   Serial sum
  accurate sum 104857.6001048576 sum 104857.6001058466 diff   9.89e-07 relative diff  9.432e-12 runtime 0.002867   Serial sum (OpenMP SIMD pragma)
  accurate sum 104857.6          sum 104857.6          diff          0 relative diff          0 runtime 0.005728   Serial sum with digit truncation
  accurate sum 104857.6000976562 sum 104857.6000976562 diff          0 relative diff          0 runtime 0.005719   Serial sum with bit truncation
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.065295   Serial sum with long double accumulator
  accurate sum 104857.600105     sum 104857.600105     diff          0 relative diff          0 runtime 0.064852   Serial sum with long double accumulator with ndigit truncation
  accurate sum 104857.6001048088 sum 104857.6001048088 diff          0 relative diff          0 runtime 0.065289   Serial sum with long double accumulator with bit truncation
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.017167   Serial sum with double double kahan sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.006355   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff -1.455e-11 relative diff -1.388e-16 runtime 0.003154   8 wide GCC vector extensions Kahan sum
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.034331   Serial sum with double double knuth sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.010485   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.005249   8 wide GCC vector extensions Knuth sum
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.003700   Pair-wise sum


  accurate sum 104857.6001048576 sum 104857.6001048726 diff  1.497e-08 relative diff  1.428e-13 runtime 0.000546   OpenMP sum
  accurate sum 104857.6000976562 sum 104857.6000976562 diff          0 relative diff          0 runtime 0.000475   OpenMP sum with bit truncation
  accurate sum 104857.6001048576 sum 104857.6001048574 diff -2.183e-10 relative diff -2.082e-15 runtime 0.001000   OpenMP sum with double double kahan sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048574 diff -2.328e-10 relative diff  -2.22e-15 runtime 0.001152   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 4194304 log 22 ndigits 7 ndigitsld 4 nbits 26 nbitsld 13
Initializing mesh with Leblanc problem, high values first
  accurate sum 209715.2002097152 sum 209715.2001908246 diff -1.889e-05 relative diff -9.008e-11 runtime 0.011509   Serial sum
  accurate sum 209715.2002097152 sum 209715.2002168543 diff  7.139e-06 relative diff  3.404e-11 runtime 0.005893   Serial sum (OpenMP SIMD pragma)
  accurate sum 209715.2          sum 209715.2          diff          0 relative diff          0 runtime 0.011469   Serial sum with digit truncation
  accurate sum 209715.19921875   sum 209715.19921875   diff          0 relative diff          0 runtime 0.011462   Serial sum with bit truncation
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.130566   Serial sum with long double accumulator
  accurate sum 209715.20021      sum 209715.20021      diff          0 relative diff          0 runtime 0.132319   Serial sum with long double accumulator with ndigit truncation
  accurate sum 209715.2002096176 sum 209715.2002096176 diff          0 relative diff          0 runtime 0.130571   Serial sum with long double accumulator with bit truncation
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.034349   Serial sum with double double kahan sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.012720   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff  -2.91e-11 relative diff -1.388e-16 runtime 0.006427   8 wide GCC vector extensions Kahan sum
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.068660   Serial sum with double double knuth sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.020945   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.010614   8 wide GCC vector extensions Knuth sum
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.009487   Pair-wise sum


  accurate sum 209715.2002097152 sum 209715.2002096651 diff -5.009e-08 relative diff -2.388e-13 runtime 0.000578   OpenMP sum
  accurate sum 209715.2001953125 sum 209715.2001953125 diff          0 relative diff          0 runtime 0.000536   OpenMP sum with bit truncation
  accurate sum 209715.2002097152 sum 209715.2002097147 diff -4.657e-10 relative diff  -2.22e-15 runtime 0.001042   OpenMP sum with double double kahan sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097147 diff -4.657e-10 relative diff  -2.22e-15 runtime 0.001140   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 8388608 log 23 ndigits 7 ndigitsld 4 nbits 27 nbitsld 13
Initializing mesh with Leblanc problem, high values first
  accurate sum 419430.4004194304 sum 419430.400462431  diff    4.3e-05 relative diff  1.025e-10 runtime 0.023020   Serial sum
  accurate sum 419430.4004194304 sum 419430.4003816492 diff -3.778e-05 relative diff -9.008e-11 runtime 0.011794   Serial sum (OpenMP SIMD pragma)
  accurate sum 419430.4          sum 419430.4          diff          0 relative diff          0 runtime 0.022988   Serial sum with digit truncation
  accurate sum 419430.3984375    sum 419430.3984375    diff          0 relative diff          0 runtime 0.022977   Serial sum with bit truncation
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.261158   Serial sum with long double accumulator
  accurate sum 419430.400419     sum 419430.400419     diff          0 relative diff          0 runtime 0.259506   Serial sum with long double accumulator with ndigit truncation
  accurate sum 419430.4004192352 sum 419430.4004192352 diff          0 relative diff          0 runtime 0.263640   Serial sum with long double accumulator with bit truncation
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.068706   Serial sum with double double kahan sum accumulator
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.025399   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 419430.4004194304 sum 419430.4004194303 diff -5.821e-11 relative diff -1.388e-16 runtime 0.013079   8 wide GCC vector extensions Kahan sum
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.137344   Serial sum with double double knuth sum accumulator
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.042000   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.021378   8 wide GCC vector extensions Knuth sum
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.022145   Pair-wise sum


  accurate sum 419430.4004194304 sum 419430.4004191901 diff -2.403e-07 relative diff  -5.73e-13 runtime 0.002547   OpenMP sum
  accurate sum 419430.400390625  sum 419430.400390625  diff          0 relative diff          0 runtime 0.002351   OpenMP sum with bit truncation
  accurate sum 419430.4004194304 sum 419430.4004194295 diff -9.313e-10 relative diff  -2.22e-15 runtime 0.006210   OpenMP sum with double double kahan sum accumulator
  accurate sum 419430.4004194303 sum 419430.4004194294 diff -9.313e-10 relative diff  -2.22e-15 runtime 0.005817   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 16777216 log 24 ndigits 7 ndigitsld 4 nbits 27 nbitsld 14
Initializing mesh with Leblanc problem, high values first
  accurate sum 838860.8008388608 sum 838860.800853056  diff   1.42e-05 relative diff  1.692e-11 runtime 0.046061   Serial sum
  accurate sum 838860.8008388608 sum 838860.800924862  diff    8.6e-05 relative diff  1.025e-10 runtime 0.023729   Serial sum (OpenMP SIMD pragma)
  accurate sum 838860.801        sum 838860.801        diff          0 relative diff          0 runtime 0.046009   Serial sum with digit truncation
  accurate sum 838860.796875     sum 838860.796875     diff          0 relative diff          0 runtime 0.046011   Serial sum with bit truncation
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.523353   Serial sum with long double accumulator
  accurate sum 838860.800839     sum 838860.800839     diff          0 relative diff          0 runtime 0.519907   Serial sum with long double accumulator with ndigit truncation
  accurate sum 838860.8008384705 sum 838860.8008384705 diff          0 relative diff          0 runtime 0.522407   Serial sum with long double accumulator with bit truncation
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.137456   Serial sum with double double kahan sum accumulator
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.051026   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 838860.8008388608 sum 838860.8008388607 diff -1.164e-10 relative diff -1.388e-16 runtime 0.026418   8 wide GCC vector extensions Kahan sum
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.274766   Serial sum with double double knuth sum accumulator
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.083753   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.043051   8 wide GCC vector extensions Knuth sum
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.045286   Pair-wise sum


  accurate sum 838860.8008388608 sum 838860.8008396669 diff  8.061e-07 relative diff  9.609e-13 runtime 0.004015   OpenMP sum
  accurate sum 838860.80078125   sum 838860.80078125   diff          0 relative diff          0 runtime 0.003209   OpenMP sum with bit truncation
  accurate sum 838860.8008388608 sum 838860.8008388589 diff -1.863e-09 relative diff  -2.22e-15 runtime 0.006533   OpenMP sum with double double kahan sum accumulator
  accurate sum 838860.8008388607 sum 838860.8008388588 diff -1.863e-09 relative diff  -2.22e-15 runtime 0.005676   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 33554432 log 25 ndigits 8 ndigitsld 5 nbits 29 nbitsld 15
Initializing mesh with Leblanc problem, high values first
  accurate sum 1677721.601677722 sum 1677721.600413603 diff  -0.001264 relative diff -7.535e-10 runtime 0.094848   Serial sum
  accurate sum 1677721.601677722 sum 1677721.601706112 diff  2.839e-05 relative diff  1.692e-11 runtime 0.047663   Serial sum (OpenMP SIMD pragma)
  accurate sum 1677721.6         sum 1677721.6         diff          0 relative diff          0 runtime 0.092182   Serial sum with digit truncation
  accurate sum 1677721.5         sum 1677721.5         diff          0 relative diff          0 runtime 0.092202   Serial sum with bit truncation
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 1.044925   Serial sum with long double accumulator
  accurate sum 1677721.6017      sum 1677721.6017      diff          0 relative diff          0 runtime 1.040946   Serial sum with long double accumulator with ndigit truncation
  accurate sum 1677721.601676941 sum 1677721.601676941 diff          0 relative diff          0 runtime 1.045013   Serial sum with long double accumulator with bit truncation
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.275039   Serial sum with double double kahan sum accumulator
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.102724   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 1677721.601677722 sum 1677721.601677721 diff -2.328e-10 relative diff -1.388e-16 runtime 0.053964   8 wide GCC vector extensions Kahan sum
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.552205   Serial sum with double double knuth sum accumulator
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.168272   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.087055   8 wide GCC vector extensions Knuth sum
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.093718   Pair-wise sum


  accurate sum 1677721.601677722 sum 1677721.601681583 diff  3.861e-06 relative diff  2.302e-12 runtime 0.004322   OpenMP sum
  accurate sum 1677721.6015625   sum 1677721.6015625   diff          0 relative diff          0 runtime 0.005528   OpenMP sum with bit truncation
  accurate sum 1677721.601677722 sum 1677721.601677718 diff -3.492e-09 relative diff -2.082e-15 runtime 0.010441   OpenMP sum with double double kahan sum accumulator
  accurate sum 1677721.601677721 sum 1677721.601677718 diff -3.725e-09 relative diff  -2.22e-15 runtime 0.010883   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 67108864 log 26 ndigits 8 ndigitsld 5 nbits 30 nbitsld 15
Initializing mesh with Leblanc problem, high values first
  accurate sum 3355443.203355443 sum 3355443.201976103 diff  -0.001379 relative diff -4.111e-10 runtime 0.184495   Serial sum
  accurate sum 3355443.203355443 sum 3355443.200827206 diff  -0.002528 relative diff -7.535e-10 runtime 0.095608   Serial sum (OpenMP SIMD pragma)
  accurate sum 3355443.2         sum 3355443.2         diff          0 relative diff          0 runtime 0.184414   Serial sum with digit truncation
  accurate sum 3355443           sum 3355443           diff          0 relative diff          0 runtime 0.184397   Serial sum with bit truncation
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 2.092619   Serial sum with long double accumulator
  accurate sum 3355443.2034      sum 3355443.2034      diff          0 relative diff          0 runtime 2.076884   Serial sum with long double accumulator with ndigit truncation
  accurate sum 3355443.203353882 sum 3355443.203353882 diff          0 relative diff          0 runtime 2.089802   Serial sum with long double accumulator with bit truncation
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.552581   Serial sum with double double kahan sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.205517   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff -4.657e-10 relative diff -1.388e-16 runtime 0.107669   8 wide GCC vector extensions Kahan sum
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 1.099261   Serial sum with double double knuth sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.333888   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.174162   8 wide GCC vector extensions Knuth sum
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.185527   Pair-wise sum


  accurate sum 3355443.203355443 sum 3355443.203342512 diff -1.293e-05 relative diff -3.854e-12 runtime 0.005491   OpenMP sum
  accurate sum 3355443.1875      sum 3355443.1875      diff          0 relative diff          0 runtime 0.006967   OpenMP sum with bit truncation
  accurate sum 3355443.203355443 sum 3355443.203355436 diff -6.985e-09 relative diff -2.082e-15 runtime 0.017424   OpenMP sum with double double kahan sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355435 diff -7.451e-09 relative diff  -2.22e-15 runtime 0.018695   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 134217728 log 27 ndigits 8 ndigitsld 5 nbits 31 nbitsld 16
Initializing mesh with Leblanc problem, high values first
  accurate sum 6710886.406710886 sum 6710886.393382353 diff   -0.01333 relative diff -1.986e-09 runtime 0.368519   Serial sum
  accurate sum 6710886.406710886 sum 6710886.403952206 diff  -0.002759 relative diff -4.111e-10 runtime 0.189438   Serial sum (OpenMP SIMD pragma)
  accurate sum 6710886.4         sum 6710886.4         diff          0 relative diff          0 runtime 0.368429   Serial sum with digit truncation
  accurate sum 6710886           sum 6710886           diff          0 relative diff          0 runtime 0.368407   Serial sum with bit truncation
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 4.182856   Serial sum with long double accumulator
  accurate sum 6710886.4067      sum 6710886.4067      diff          0 relative diff          0 runtime 4.309388   Serial sum with long double accumulator with ndigit truncation
  accurate sum 6710886.406677246 sum 6710886.406677246 diff          0 relative diff          0 runtime 4.298348   Serial sum with long double accumulator with bit truncation
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 1.104000   Serial sum with double double kahan sum accumulator
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.418012   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 6710886.406710886 sum 6710886.406710885 diff -9.313e-10 relative diff -1.388e-16 runtime 0.223775   8 wide GCC vector extensions Kahan sum
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 2.205283   Serial sum with double double knuth sum accumulator
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.668093   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.351616   8 wide GCC vector extensions Knuth sum
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.402800   Pair-wise sum


  accurate sum 6710886.406710886 sum 6710886.40664912  diff -6.177e-05 relative diff -9.204e-12 runtime 0.009980   OpenMP sum
  accurate sum 6710886.375       sum 6710886.375       diff          0 relative diff          0 runtime 0.008821   OpenMP sum with bit truncation
  accurate sum 6710886.406710886 sum 6710886.406710872 diff -1.397e-08 relative diff -2.082e-15 runtime 0.013841   OpenMP sum with double double kahan sum accumulator
  accurate sum 6710886.406710885 sum 6710886.406710871 diff  -1.49e-08 relative diff  -2.22e-15 runtime 0.012303   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 268435456 log 28 ndigits 8 ndigitsld 5 nbits 32 nbitsld 16
Initializing mesh with Leblanc problem, high values first
  accurate sum 13421772.81342177 sum 13421772.76838235 diff   -0.04504 relative diff -3.356e-09 runtime 0.737948   Serial sum
  accurate sum 13421772.81342177 sum 13421772.78676471 diff   -0.02666 relative diff -1.986e-09 runtime 0.382392   Serial sum (OpenMP SIMD pragma)
  accurate sum 13421773          sum 13421773          diff          0 relative diff          0 runtime 0.737885   Serial sum with digit truncation
  accurate sum 13421768          sum 13421768          diff          0 relative diff          0 runtime 0.740361   Serial sum with bit truncation
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 8.362715   Serial sum with long double accumulator
  accurate sum 13421772.813      sum 13421772.813      diff          0 relative diff          0 runtime 8.316765   Serial sum with long double accumulator with ndigit truncation
  accurate sum 13421772.81335449 sum 13421772.81335449 diff          0 relative diff          0 runtime 8.365945   Serial sum with long double accumulator with bit truncation
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 2.200432   Serial sum with double double kahan sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.821824   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff -1.863e-09 relative diff -1.388e-16 runtime 0.433308   8 wide GCC vector extensions Kahan sum
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 4.398461   Serial sum with double double knuth sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 1.344568   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.698114   8 wide GCC vector extensions Knuth sum
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.775650   Pair-wise sum


  accurate sum 13421772.81342177 sum 13421772.8136286  diff  0.0002068 relative diff  1.541e-11 runtime 0.012003   OpenMP sum
  accurate sum 13421772.5        sum 13421772.5        diff          0 relative diff          0 runtime 0.012932   OpenMP sum with bit truncation
  accurate sum 13421772.81342177 sum 13421772.81342174 diff -2.794e-08 relative diff -2.082e-15 runtime 0.024116   OpenMP sum with double double kahan sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342174 diff  -2.98e-08 relative diff  -2.22e-15 runtime 0.021956   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 536870912 log 29 ndigits 8 ndigitsld 5 nbits 33 nbitsld 17
Initializing mesh with Leblanc problem, high values first
  accurate sum 26843545.62684355 sum 26843545.70588235 diff    0.07904 relative diff  2.944e-09 runtime 1.475739   Serial sum
  accurate sum 26843545.62684355 sum 26843545.53676471 diff   -0.09008 relative diff -3.356e-09 runtime 0.765895   Serial sum (OpenMP SIMD pragma)
  accurate sum 26843546          sum 26843546          diff          0 relative diff          0 runtime 1.476122   Serial sum with digit truncation
  accurate sum 26843520          sum 26843520          diff          0 relative diff          0 runtime 1.482567   Serial sum with bit truncation
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 16.719818   Serial sum with long double accumulator
  accurate sum 26843545.627      sum 26843545.627      diff          0 relative diff          0 runtime 16.632792   Serial sum with long double accumulator with ndigit truncation
  accurate sum 26843545.62646484 sum 26843545.62646484 diff          0 relative diff          0 runtime 16.729301   Serial sum with long double accumulator with bit truncation
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 4.400803   Serial sum with double double kahan sum accumulator
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 1.643476   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 26843545.62684355 sum 26843545.62684354 diff -3.725e-09 relative diff -1.388e-16 runtime 0.867281   8 wide GCC vector extensions Kahan sum
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 8.797860   Serial sum with double double knuth sum accumulator
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 2.667908   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 1.397187   8 wide GCC vector extensions Knuth sum
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 1.556049   Pair-wise sum


  accurate sum 26843545.62684355 sum 26843545.62783157 diff   0.000988 relative diff  3.681e-11 runtime 0.019551   OpenMP sum
  accurate sum 26843544          sum 26843544          diff          0 relative diff          0 runtime 0.019662   OpenMP sum with bit truncation
  accurate sum 26843545.62684355 sum 26843545.62684349 diff -5.588e-08 relative diff -2.082e-15 runtime 0.018532   OpenMP sum with double double kahan sum accumulator
  accurate sum 26843545.62684354 sum 26843545.62684348 diff  -5.96e-08 relative diff  -2.22e-15 runtime 0.018705   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 1073741824 log 30 ndigits 9 ndigitsld 6 nbits 34 nbitsld 18
Initializing mesh with Leblanc problem, high values first
  accurate sum 53687091.25368709 sum 53687091.70588235 diff     0.4522 relative diff  8.423e-09 runtime 2.960079   Serial sum
  accurate sum 53687091.25368709 sum 53687091.4117647  diff     0.1581 relative diff  2.944e-09 runtime 1.531750   Serial sum (OpenMP SIMD pragma)
  accurate sum 53687090          sum 53687090          diff          0 relative diff          0 runtime 2.958818   Serial sum with digit truncation
  accurate sum 53687040          sum 53687040          diff          0 relative diff          0 runtime 2.952545   Serial sum with bit truncation
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 33.457673   Serial sum with long double accumulator
  accurate sum 53687091.25       sum 53687091.25       diff          0 relative diff          0 runtime 33.295415   Serial sum with long double accumulator with ndigit truncation
  accurate sum 53687091.25195312 sum 53687091.25195312 diff          0 relative diff          0 runtime 33.450683   Serial sum with long double accumulator with bit truncation
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 8.876438   Serial sum with double double kahan sum accumulator
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 3.311928   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 53687091.25368709 sum 53687091.25368708 diff -7.451e-09 relative diff -1.388e-16 runtime 1.737991   8 wide GCC vector extensions Kahan sum
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 17.637352   Serial sum with double double knuth sum accumulator
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 5.368568   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 2.794734   8 wide GCC vector extensions Knuth sum
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 3.131913   Pair-wise sum


  accurate sum 53687091.25368709 sum 53687091.25037837 diff  -0.003309 relative diff -6.163e-11 runtime 0.038118   OpenMP sum
  accurate sum 53687088          sum 53687088          diff          0 relative diff          0 runtime 0.038034   OpenMP sum with bit truncation
  accurate sum 53687091.25368709 sum 53687091.25368698 diff -1.118e-07 relative diff -2.082e-15 runtime 0.036363   OpenMP sum with double double kahan sum accumulator
  accurate sum 53687091.25368708 sum 53687091.25368696 diff -1.192e-07 relative diff  -2.22e-15 runtime 0.036550   OpenMP sum with double double kahan sum accumulator with bit truncation

Scanning dependencies of target distclean
Built target distclean
unset ARMPL_BUILD; unset ARMPL_DIR; unset ARMPL_INCLUDES; unset ARMPL_INCLUDES_ILP64; unset ARMPL_INCLUDES_ILP64_MP; unset ARMPL_INCLUDES_INT64; unset ARMPL_INCLUDES_INT64_MP; unset ARMPL_INCLUDES_LP64_MP; unset ARMPL_INCLUDES_MP; unset __LMOD_REF_COUNT_ARMPL_LIBRARIES; unset ARMPL_LIBRARIES; unset BLAS; unset BLAS_SHARED; unset BLAS_STATIC; unset CC; unset COMPILER_PATH; unset __LMOD_REF_COUNT_CPATH; unset CPATH; unset CPP; unset CXX; unset F77; unset F90; unset FC; unset GCC_BUILD; unset GCC_DIR; unset GCC_INCLUDES; unset __LMOD_REF_COUNT_GCC_LIBRARIES; unset GCC_LIBRARIES; unset LAPACK; unset LAPACK_SHARED; unset LAPACK_STATIC; unset __LMOD_REF_COUNT_LD_LIBRARY_PATH; unset LD_LIBRARY_PATH; unset __LMOD_REF_COUNT_LIBRARY_PATH; unset LIBRARY_PATH; unset __LMOD_REF_COUNT_LOADEDMODULES; unset LOADEDMODULES; unset __LMOD_REF_COUNT_MANPATH; unset MANPATH; MODULEPATH=/opt/ohpc/pub/modulefiles:/opt/arm/modulefiles:/projects/darwin/modulefiles/aarch64; export MODULEPATH; __LMOD_REF_COUNT_PATH=/home/brobey/bin:2\;/home/brobey/parsplice-install/bin:2\;/home/brobey/spack/bin:1\;/usr/local/bin:1\;/usr/bin:1\;/usr/local/sbin:1\;/usr/sbin:1\;/opt/ibutils/bin:1; export __LMOD_REF_COUNT_PATH; PATH=/home/brobey/bin:/home/brobey/parsplice-install/bin:/home/brobey/spack/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/opt/ibutils/bin; export PATH; unset __LMOD_REF_COUNT__LMFILES_; unset _LMFILES_; _ModuleTable001_=X01vZHVsZVRhYmxlXz17WyJNVHZlcnNpb24iXT0zLFsiY19yZWJ1aWxkVGltZSJdPTcyMDAsWyJjX3Nob3J0VGltZSJdPTMuNjQ2MTQyMDA1OTIwNCxkZXB0aFQ9e30sZmFtaWx5PXt9LG1UPXt9LG1wYXRoQT17Ii9vcHQvb2hwYy9wdWIvbW9kdWxlZmlsZXMiLCIvb3B0L2FybS9tb2R1bGVmaWxlcyIsIi9wcm9qZWN0cy9kYXJ3aW4vbW9kdWxlZmlsZXMvYWFyY2g2NCIsfSxbInN5c3RlbUJhc2VNUEFUSCJdPSIvb3B0L29ocGMvcHViL21vZHVsZWZpbGVzOi9vcHQvYXJtL21vZHVsZWZpbGVzOi9wcm9qZWN0cy9kYXJ3aW4vbW9kdWxlZmlsZXMvYWFyY2g2NCIsfQ==; export _ModuleTable001_; _ModuleTable_Sz_=1; export _ModuleTable_Sz_; unset _ModuleTable003_;
