for i in clang/8.0.1 gcc/9.1.0 intel/19.0.4 pgi/18.10
do
    module purge
    module load cmake $i
    cmake .
    make 
    ./globalsums
    make clean
    make distclean
    module purge
done
/usr/bin/modulecmd bash $*
/usr/bin/modulecmd bash $*
CC=clang ;export CC;CLANGROOT=/projects/opt/centos7/clang/8.0.1 ;export CLANGROOT;CLANGVER=8.0.1 ;export CLANGVER;CPP=clang\ -E ;export CPP;CXX=clang++ ;export CXX;LD_LIBRARY_PATH=/projects/opt/centos7/clang/8.0.1/lib:/projects/opt/centos7/gcc/8.2.0/lib64:/projects/opt/centos7/gcc/8.2.0/lib ;export LD_LIBRARY_PATH;LLVMROOT=/projects/opt/centos7/clang/8.0.1 ;export LLVMROOT;LOADEDMODULES=cmake/3.12.4:clang/8.0.1 ;export LOADEDMODULES;MANPATH=/projects/opt/centos7/clang/8.0.1/share/man:/usr/share/man:/usr/local/share/man ;export MANPATH;PATH=/projects/opt/centos7/clang/8.0.1/bin:/projects/opt/centos7/cmake/3.12.4/bin:/home/brobey/bin:/home/brobey/parsplice-install/bin:/home/brobey/bin:/home/brobey/parsplice-install/bin:/home/brobey/spack/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin ;export PATH;PYTHONPATH=/projects/opt/centos7/clang/8.0.1/lib64/python2.7/site-packages ;export PYTHONPATH;_LMFILES_=/projects/darwin/modulefiles/centos7/cmake/3.12.4:/projects/darwin/modulefiles/centos7/clang/8.0.1 ;export _LMFILES_;
-- The C compiler identification is Clang 8.0.1
-- The CXX compiler identification is Clang 8.0.1
-- Check for working C compiler: /projects/opt/centos7/clang/8.0.1/bin/clang
-- Check for working C compiler: /projects/opt/centos7/clang/8.0.1/bin/clang -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /projects/opt/centos7/clang/8.0.1/bin/clang++
-- Check for working CXX compiler: /projects/opt/centos7/clang/8.0.1/bin/clang++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Could NOT find OpenMP_C (missing: OpenMP_C_FLAGS OpenMP_C_LIB_NAMES) 
-- Could NOT find OpenMP_CXX (missing: OpenMP_CXX_FLAGS OpenMP_CXX_LIB_NAMES) 
-- Could NOT find OpenMP (missing: OpenMP_C_FOUND OpenMP_CXX_FOUND) 
-- Trying Fog Vector Class -- works
-- Trying X86_64 intrinsics -- works
-- Detecting AVX512 hardware -- not present
-- Trying GCC Vector Extensions -- works
-- Trying Quad math library -- fails
-- Configuring done
-- Generating done
-- Build files have been written to: /home/brobey/GlobalSums
Scanning dependencies of target globalsums
[  3%] Building C object CMakeFiles/globalsums.dir/globalsums.c.o
globalsums.c:541:7: remark: vectorized loop (vectorization width: 4, interleaved count: 4) [-Rpass=loop-vectorize]
      for (long i = 0; i < ncells; i++){
      ^
globalsums.c:137:7: remark: vectorized loop (vectorization width: 4, interleaved count: 4) [-Rpass=loop-vectorize]
      for (long i = 0; i < ncells; i++){
      ^
[  7%] Building C object CMakeFiles/globalsums.dir/do_kahan_sum.c.o
do_kahan_sum.c:10:4: remark: loop not vectorized: value that could not be identified as reduction is used outside the loop [-Rpass-analysis=loop-vectorize]
   for (long i = 0; i < ncells; i++) {
   ^
do_kahan_sum.c:10:4: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
[ 10%] Building C object CMakeFiles/globalsums.dir/serial_sum_novec.c.o
serial_sum_novec.c:5:4: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
   for (long i = 0; i < ncells; i++){
   ^
[ 14%] Building C object CMakeFiles/globalsums.dir/do_kahan_sum_omp.c.o
do_kahan_sum_omp.c:18:7: remark: loop not vectorized: value that could not be identified as reduction is used outside the loop [-Rpass-analysis=loop-vectorize]
      for (long i = 0; i < ncells; i++) {
      ^
do_kahan_sum_omp.c:18:7: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
[ 17%] Building C object CMakeFiles/globalsums.dir/do_kahan_sum_omp_wbittrunc.c.o
do_kahan_sum_omp_wbittrunc.c:22:7: remark: loop not vectorized: value that could not be identified as reduction is used outside the loop [-Rpass-analysis=loop-vectorize]
      for (long i = 0; i < ncells; i++) {
      ^
do_kahan_sum_omp_wbittrunc.c:22:7: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
[ 21%] Building C object CMakeFiles/globalsums.dir/do_knuth_sum.c.o
do_knuth_sum.c:13:4: remark: loop not vectorized: value that could not be identified as reduction is used outside the loop [-Rpass-analysis=loop-vectorize]
   for (long i = 0; i < ncells; i++) {
   ^
do_knuth_sum.c:13:4: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
[ 25%] Building C object CMakeFiles/globalsums.dir/do_ldsum.c.o
do_ldsum.c:6:13: remark: loop not vectorized: cannot prove it is safe to reorder floating-point operations; allow reordering by specifying '#pragma clang loop vectorize(enable)' before the loop or by providing the compiler option '-ffast-math'. [-Rpass-analysis=loop-vectorize]
      ldsum += var[i];
            ^
do_ldsum.c:5:4: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
   for (long i = 0; i < ncells; i++){
   ^
[ 28%] Building C object CMakeFiles/globalsums.dir/do_ldsum_wbittrunc.c.o
do_ldsum_wbittrunc.c:9:13: remark: loop not vectorized: cannot prove it is safe to reorder floating-point operations; allow reordering by specifying '#pragma clang loop vectorize(enable)' before the loop or by providing the compiler option '-ffast-math'. [-Rpass-analysis=loop-vectorize]
      ldsum += var[i];
            ^
do_ldsum_wbittrunc.c:8:4: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
   for (long i = 0; i < ncells; i++){
   ^
[ 32%] Building C object CMakeFiles/globalsums.dir/do_ldsum_wdigittrunc.c.o
do_ldsum_wdigittrunc.c:8:13: remark: loop not vectorized: cannot prove it is safe to reorder floating-point operations; allow reordering by specifying '#pragma clang loop vectorize(enable)' before the loop or by providing the compiler option '-ffast-math'. [-Rpass-analysis=loop-vectorize]
      ldsum += var[i];
            ^
do_ldsum_wdigittrunc.c:7:4: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
   for (long i = 0; i < ncells; i++){
   ^
[ 35%] Building C object CMakeFiles/globalsums.dir/do_pair_sum.c.o
do_pair_sum.c:10:4: remark: vectorized loop (vectorization width: 4, interleaved count: 4) [-Rpass=loop-vectorize]
   for (long i = 0; i<nmax; i++){
   ^
do_pair_sum.c:16:7: remark: loop not vectorized: unsafe dependent memory operations in loop. Use #pragma loop distribute(enable) to allow loop distribution to attempt to isolate the offending operations into a separate loop [-Rpass-analysis=loop-vectorize]
      for (long i = 0; i<nmax; i++){
      ^
do_pair_sum.c:16:7: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
[ 39%] Building C object CMakeFiles/globalsums.dir/do_sum.c.o
do_sum.c:5:9: remark: vectorized loop (vectorization width: 4, interleaved count: 4) [-Rpass=loop-vectorize]
#pragma omp simd reduction(+:sum)
        ^
[ 42%] Building C object CMakeFiles/globalsums.dir/do_sum_omp.c.o
do_sum_omp.c:7:11: remark: loop not vectorized: cannot prove it is safe to reorder floating-point operations; allow reordering by specifying '#pragma clang loop vectorize(enable)' before the loop or by providing the compiler option '-ffast-math'. [-Rpass-analysis=loop-vectorize]
      sum += var[i];
          ^
do_sum_omp.c:6:4: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
   for (long i = 0; i < ncells; i++){
   ^
[ 46%] Building C object CMakeFiles/globalsums.dir/do_sum_omp_wbittrunc.c.o
do_sum_omp_wbittrunc.c:10:11: remark: loop not vectorized: cannot prove it is safe to reorder floating-point operations; allow reordering by specifying '#pragma clang loop vectorize(enable)' before the loop or by providing the compiler option '-ffast-math'. [-Rpass-analysis=loop-vectorize]
      sum += var[i];
          ^
do_sum_omp_wbittrunc.c:9:4: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
   for (long i = 0; i < ncells; i++){
   ^
[ 50%] Building C object CMakeFiles/globalsums.dir/do_sum_wbittrunc.c.o
do_sum_wbittrunc.c:9:11: remark: loop not vectorized: cannot prove it is safe to reorder floating-point operations; allow reordering by specifying '#pragma clang loop vectorize(enable)' before the loop or by providing the compiler option '-ffast-math'. [-Rpass-analysis=loop-vectorize]
      sum += var[i];
          ^
do_sum_wbittrunc.c:8:4: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
   for (long i = 0; i < ncells; i++){
   ^
[ 53%] Building C object CMakeFiles/globalsums.dir/do_sum_wdigittrunc.c.o
do_sum_wdigittrunc.c:8:11: remark: loop not vectorized: cannot prove it is safe to reorder floating-point operations; allow reordering by specifying '#pragma clang loop vectorize(enable)' before the loop or by providing the compiler option '-ffast-math'. [-Rpass-analysis=loop-vectorize]
      sum += var[i];
          ^
do_sum_wdigittrunc.c:7:4: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
   for (long i = 0; i < ncells; i++){
   ^
[ 57%] Building CXX object CMakeFiles/globalsums.dir/kahan_fog_vector.cpp.o
kahan_fog_vector.cpp:15:4: remark: loop not vectorized: loop control flow is not understood by vectorizer [-Rpass-analysis=loop-vectorize]
   for (long i = 0; i < ncells; i+=4) {
   ^
kahan_fog_vector.cpp:15:4: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
[ 60%] Building CXX object CMakeFiles/globalsums.dir/kahan_fog_vector8.cpp.o
kahan_fog_vector8.cpp:14:4: remark: loop not vectorized: loop control flow is not understood by vectorizer [-Rpass-analysis=loop-vectorize]
   for (long i = 0; i < ncells; i+=8) {
   ^
kahan_fog_vector8.cpp:14:4: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
[ 64%] Building CXX object CMakeFiles/globalsums.dir/knuth_fog_vector.cpp.o
knuth_fog_vector.cpp:15:4: remark: loop not vectorized: loop control flow is not understood by vectorizer [-Rpass-analysis=loop-vectorize]
   for (long i = 0; i < ncells; i+=4) {
   ^
knuth_fog_vector.cpp:15:4: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
[ 67%] Building CXX object CMakeFiles/globalsums.dir/knuth_fog_vector8.cpp.o
knuth_fog_vector8.cpp:15:4: remark: loop not vectorized: loop control flow is not understood by vectorizer [-Rpass-analysis=loop-vectorize]
   for (long i = 0; i < ncells; i+=8) {
   ^
knuth_fog_vector8.cpp:15:4: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
[ 71%] Building C object CMakeFiles/globalsums.dir/kahan_intel_vector.c.o
kahan_intel_vector.c:18:4: remark: loop not vectorized: loop control flow is not understood by vectorizer [-Rpass-analysis=loop-vectorize]
   for (long i = 0; i < ncells; i+=4) {
   ^
kahan_intel_vector.c:18:4: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
[ 75%] Building C object CMakeFiles/globalsums.dir/kahan_intel_vector8.c.o
[ 78%] Building C object CMakeFiles/globalsums.dir/knuth_intel_vector.c.o
knuth_intel_vector.c:17:4: remark: loop not vectorized: loop control flow is not understood by vectorizer [-Rpass-analysis=loop-vectorize]
   for (long i = 0; i < ncells; i+=4) {
   ^
knuth_intel_vector.c:17:4: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
[ 82%] Building C object CMakeFiles/globalsums.dir/knuth_intel_vector8.c.o
[ 85%] Building C object CMakeFiles/globalsums.dir/kahan_gcc_vector.c.o
kahan_gcc_vector.c:11:4: remark: loop not vectorized: loop control flow is not understood by vectorizer [-Rpass-analysis=loop-vectorize]
   for (long i = 0; i < ncells; i+=4) {
   ^
kahan_gcc_vector.c:11:4: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
[ 89%] Building C object CMakeFiles/globalsums.dir/kahan_gcc_vector8.c.o
kahan_gcc_vector8.c:10:4: remark: loop not vectorized: loop control flow is not understood by vectorizer [-Rpass-analysis=loop-vectorize]
   for (long i = 0; i < ncells; i+=8) {
   ^
kahan_gcc_vector8.c:10:4: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
[ 92%] Building C object CMakeFiles/globalsums.dir/knuth_gcc_vector.c.o
knuth_gcc_vector.c:11:4: remark: loop not vectorized: loop control flow is not understood by vectorizer [-Rpass-analysis=loop-vectorize]
   for (long i = 0; i < ncells; i+=4) {
   ^
knuth_gcc_vector.c:11:4: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
[ 96%] Building C object CMakeFiles/globalsums.dir/knuth_gcc_vector8.c.o
knuth_gcc_vector8.c:11:4: remark: loop not vectorized: loop control flow is not understood by vectorizer [-Rpass-analysis=loop-vectorize]
   for (long i = 0; i < ncells; i+=8) {
   ^
knuth_gcc_vector8.c:11:4: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
[100%] Linking CXX executable globalsums
[100%] Built target globalsums
SETTINGS INFO -- ncells 16 log 4 ndigits 3 ndigitsld 0 nbits 8 nbitsld 2
Initializing mesh with Leblanc problem, high values first
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000002   Serial sum
  accurate sum 0.8000000008      sum 0.8000000008000001 diff   1.11e-16 relative diff  1.388e-16 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000012   Serial sum with digit truncation
  accurate sum 0.8000000007999972 sum 0.8000000007999972 diff          0 relative diff          0 runtime 0.000000   Serial sum with bit truncation
  accurate sum 0.8000000008      sum 0.8000000008      diff -1.626e-19 relative diff -2.033e-19 runtime 0.000000   Serial sum with long double accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000001   Serial sum with long double accumulator with ndigit truncation
  accurate sum 0.8000000007999999 sum 0.8000000007999999 diff          0 relative diff          0 runtime 0.000000   Serial sum with long double accumulator with bit truncation
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double kahan sum accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 0.8000000008      sum 0.8000000007999999 diff  -1.11e-16 relative diff -1.388e-16 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 0.8000000008      sum 0.8000000007999999 diff  -1.11e-16 relative diff -1.388e-16 runtime 0.000000   8 wide Fog C++ vector class Kahan sum
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double knuth sum accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   8 wide GCC vector extensions Knuth sum
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   8 wide Fog C++ vector class Knuth sum
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000001   Pair-wise sum


  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   OpenMP sum
  accurate sum 0.8000000007999972 sum 0.8000000007999972 diff          0 relative diff          0 runtime 0.000000   OpenMP sum with bit truncation
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   OpenMP sum with double double kahan sum accumulator
  accurate sum 0.8000000007999999 sum 0.8000000007999999 diff          0 relative diff          0 runtime 0.000000   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 32 log 5 ndigits 4 ndigitsld 1 nbits 9 nbitsld 3
Initializing mesh with Leblanc problem, high values first
  accurate sum 1.6000000016      sum 1.6000000016      diff  4.441e-16 relative diff  2.776e-16 runtime 0.000000   Serial sum
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000001   Serial sum with digit truncation
  accurate sum 1.600000001599938 sum 1.600000001599938 diff          0 relative diff          0 runtime 0.000000   Serial sum with bit truncation
  accurate sum 1.6000000016      sum 1.6000000016      diff  5.421e-19 relative diff  3.388e-19 runtime 0.000000   Serial sum with long double accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000001   Serial sum with long double accumulator with ndigit truncation
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Serial sum with long double accumulator with bit truncation
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double kahan sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff  -2.22e-16 relative diff -1.388e-16 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 1.6000000016      sum 1.6000000016      diff  -2.22e-16 relative diff -1.388e-16 runtime 0.000000   8 wide Fog C++ vector class Kahan sum
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double knuth sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   8 wide GCC vector extensions Knuth sum
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   8 wide Fog C++ vector class Knuth sum
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Pair-wise sum


  accurate sum 1.6000000016      sum 1.6000000016      diff  4.441e-16 relative diff  2.776e-16 runtime 0.000000   OpenMP sum
  accurate sum 1.600000001599994 sum 1.600000001599994 diff          0 relative diff          0 runtime 0.000000   OpenMP sum with bit truncation
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   OpenMP sum with double double kahan sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 64 log 6 ndigits 4 ndigitsld 1 nbits 9 nbitsld 3
Initializing mesh with Leblanc problem, high values first
  accurate sum 3.2000000032      sum 3.200000003200002 diff  1.776e-15 relative diff  5.551e-16 runtime 0.000000   Serial sum
  accurate sum 3.2000000032      sum 3.2000000032      diff  4.441e-16 relative diff  1.388e-16 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Serial sum with digit truncation
  accurate sum 3.200000003199875 sum 3.200000003199875 diff          0 relative diff          0 runtime 0.000000   Serial sum with bit truncation
  accurate sum 3.2000000032      sum 3.2000000032      diff  1.084e-18 relative diff  3.388e-19 runtime 0.000000   Serial sum with long double accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Serial sum with long double accumulator with ndigit truncation
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Serial sum with long double accumulator with bit truncation
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double kahan sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff -4.441e-16 relative diff -1.388e-16 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 3.2000000032      sum 3.2000000032      diff -4.441e-16 relative diff -1.388e-16 runtime 0.000000   8 wide Fog C++ vector class Kahan sum
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double knuth sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   8 wide GCC vector extensions Knuth sum
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   8 wide Fog C++ vector class Knuth sum
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Pair-wise sum


  accurate sum 3.2000000032      sum 3.200000003200002 diff  1.776e-15 relative diff  5.551e-16 runtime 0.000000   OpenMP sum
  accurate sum 3.200000003199989 sum 3.200000003199989 diff          0 relative diff          0 runtime 0.000000   OpenMP sum with bit truncation
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   OpenMP sum with double double kahan sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 128 log 7 ndigits 4 ndigitsld 1 nbits 11 nbitsld 4
Initializing mesh with Leblanc problem, high values first
  accurate sum 6.4000000064      sum 6.400000006399994 diff -6.217e-15 relative diff -9.714e-16 runtime 0.000000   Serial sum
  accurate sum 6.4000000064      sum 6.400000006400001 diff  8.882e-16 relative diff  1.388e-16 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   Serial sum with digit truncation
  accurate sum 6.400000006398841 sum 6.400000006398841 diff          0 relative diff          0 runtime 0.000000   Serial sum with bit truncation
  accurate sum 6.4000000064      sum 6.4000000064      diff  2.168e-18 relative diff  3.388e-19 runtime 0.000000   Serial sum with long double accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   Serial sum with long double accumulator with ndigit truncation
  accurate sum 6.400000006399992 sum 6.400000006399992 diff          0 relative diff          0 runtime 0.000000   Serial sum with long double accumulator with bit truncation
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double kahan sum accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 6.4000000064      sum 6.400000006399999 diff -8.882e-16 relative diff -1.388e-16 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 6.4000000064      sum 6.400000006399999 diff -8.882e-16 relative diff -1.388e-16 runtime 0.000000   8 wide Fog C++ vector class Kahan sum
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000001   Serial sum with double double knuth sum accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   8 wide GCC vector extensions Knuth sum
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   8 wide Fog C++ vector class Knuth sum
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   Pair-wise sum


  accurate sum 6.4000000064      sum 6.400000006399994 diff -6.217e-15 relative diff -9.714e-16 runtime 0.000000   OpenMP sum
  accurate sum 6.400000006399978 sum 6.400000006399978 diff          0 relative diff          0 runtime 0.000000   OpenMP sum with bit truncation
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   OpenMP sum with double double kahan sum accumulator
  accurate sum 6.400000006399999 sum 6.400000006399999 diff          0 relative diff          0 runtime 0.000000   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 256 log 8 ndigits 4 ndigitsld 1 nbits 12 nbitsld 4
Initializing mesh with Leblanc problem, high values first
  accurate sum 12.8000000128     sum 12.80000001279997 diff -2.842e-14 relative diff  -2.22e-15 runtime 0.000000   Serial sum
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000001   Serial sum with digit truncation
  accurate sum 12.80000001279404 sum 12.80000001279404 diff          0 relative diff          0 runtime 0.000000   Serial sum with bit truncation
  accurate sum 12.8000000128     sum 12.8000000128     diff -5.117e-17 relative diff -3.998e-18 runtime 0.000000   Serial sum with long double accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000001   Serial sum with long double accumulator with ndigit truncation
  accurate sum 12.80000001279998 sum 12.80000001279998 diff          0 relative diff          0 runtime 0.000000   Serial sum with long double accumulator with bit truncation
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000001   Serial sum with double double kahan sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000000   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000000   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff -1.776e-15 relative diff -1.388e-16 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 12.8000000128     sum 12.8000000128     diff -1.776e-15 relative diff -1.388e-16 runtime 0.000000   8 wide Fog C++ vector class Kahan sum
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000002   Serial sum with double double knuth sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000000   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000000   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000000   8 wide GCC vector extensions Knuth sum
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000000   8 wide Fog C++ vector class Knuth sum
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000000   Pair-wise sum


  accurate sum 12.8000000128     sum 12.80000001279997 diff -2.842e-14 relative diff  -2.22e-15 runtime 0.000000   OpenMP sum
  accurate sum 12.8000000127995  sum 12.8000000127995  diff          0 relative diff          0 runtime 0.000000   OpenMP sum with bit truncation
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000001   OpenMP sum with double double kahan sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000007   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 512 log 9 ndigits 4 ndigitsld 1 nbits 13 nbitsld 5
Initializing mesh with Leblanc problem, high values first
  accurate sum 25.6000000256     sum 25.60000002559964 diff -3.588e-13 relative diff -1.402e-14 runtime 0.000001   Serial sum
  accurate sum 25.6000000256     sum 25.60000002560001 diff  7.105e-15 relative diff  2.776e-16 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000001   Serial sum with digit truncation
  accurate sum 25.60000002558809 sum 25.60000002558809 diff          0 relative diff          0 runtime 0.000001   Serial sum with bit truncation
  accurate sum 25.6000000256     sum 25.6000000256     diff -1.023e-16 relative diff -3.998e-18 runtime 0.000001   Serial sum with long double accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000001   Serial sum with long double accumulator with ndigit truncation
  accurate sum 25.60000002559991 sum 25.60000002559991 diff          0 relative diff          0 runtime 0.000001   Serial sum with long double accumulator with bit truncation
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000002   Serial sum with double double kahan sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000000   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000000   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff -3.553e-15 relative diff -1.388e-16 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 25.6000000256     sum 25.6000000256     diff -3.553e-15 relative diff -1.388e-16 runtime 0.000000   8 wide Fog C++ vector class Kahan sum
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000003   Serial sum with double double knuth sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000001   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000001   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000001   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000000   8 wide GCC vector extensions Knuth sum
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000000   8 wide Fog C++ vector class Knuth sum
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000002   Pair-wise sum


  accurate sum 25.6000000256     sum 25.60000002559964 diff -3.588e-13 relative diff -1.402e-14 runtime 0.000001   OpenMP sum
  accurate sum 25.600000025599   sum 25.600000025599   diff          0 relative diff          0 runtime 0.000001   OpenMP sum with bit truncation
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000002   OpenMP sum with double double kahan sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000002   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 1024 log 10 ndigits 5 ndigitsld 2 nbits 14 nbitsld 6
Initializing mesh with Leblanc problem, high values first
  accurate sum 51.2000000512     sum 51.20000005120137 diff  1.371e-12 relative diff  2.678e-14 runtime 0.000001   Serial sum
  accurate sum 51.2000000512     sum 51.20000005120003 diff  2.842e-14 relative diff  5.551e-16 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 51.200000051      sum 51.200000051      diff          0 relative diff          0 runtime 0.000001   Serial sum with digit truncation
  accurate sum 51.20000005117618 sum 51.20000005117618 diff          0 relative diff          0 runtime 0.000001   Serial sum with bit truncation
  accurate sum 51.2000000512     sum 51.20000005120001 diff  6.835e-16 relative diff  1.335e-17 runtime 0.000002   Serial sum with long double accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000002   Serial sum with long double accumulator with ndigit truncation
  accurate sum 51.20000005119982 sum 51.20000005119982 diff          0 relative diff          0 runtime 0.000002   Serial sum with long double accumulator with bit truncation
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000003   Serial sum with double double kahan sum accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000001   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000001   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000001   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 51.2000000512     sum 51.20000005119999 diff -7.105e-15 relative diff -1.388e-16 runtime 0.000001   8 wide GCC vector extensions Kahan sum
  accurate sum 51.2000000512     sum 51.20000005119999 diff -7.105e-15 relative diff -1.388e-16 runtime 0.000001   8 wide Fog C++ vector class Kahan sum
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000006   Serial sum with double double knuth sum accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000002   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000002   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000002   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000001   8 wide GCC vector extensions Knuth sum
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000001   8 wide Fog C++ vector class Knuth sum
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000002   Pair-wise sum


  accurate sum 51.2000000512     sum 51.20000005120137 diff  1.371e-12 relative diff  2.678e-14 runtime 0.000001   OpenMP sum
  accurate sum 51.20000005119073 sum 51.20000005119073 diff          0 relative diff          0 runtime 0.000001   OpenMP sum with bit truncation
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000003   OpenMP sum with double double kahan sum accumulator
  accurate sum 51.20000005119999 sum 51.20000005119999 diff          0 relative diff          0 runtime 0.000003   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 2048 log 11 ndigits 5 ndigitsld 2 nbits 15 nbitsld 6
Initializing mesh with Leblanc problem, high values first
  accurate sum 102.4000001024    sum 102.4000001024003 diff  2.842e-13 relative diff  2.776e-15 runtime 0.000002   Serial sum
  accurate sum 102.4000001024    sum 102.4000001023999 diff -9.948e-14 relative diff -9.714e-16 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 102.4000001       sum 102.4000001       diff          0 relative diff          0 runtime 0.000003   Serial sum with digit truncation
  accurate sum 102.4000001023524 sum 102.4000001023524 diff          0 relative diff          0 runtime 0.000002   Serial sum with bit truncation
  accurate sum 102.4000001024    sum 102.4000001024    diff  1.367e-15 relative diff  1.335e-17 runtime 0.000003   Serial sum with long double accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000004   Serial sum with long double accumulator with ndigit truncation
  accurate sum 102.4000001023996 sum 102.4000001023996 diff          0 relative diff          0 runtime 0.000003   Serial sum with long double accumulator with bit truncation
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000006   Serial sum with double double kahan sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000002   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000002   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000002   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff -1.421e-14 relative diff -1.388e-16 runtime 0.000001   8 wide GCC vector extensions Kahan sum
  accurate sum 102.4000001024    sum 102.4000001024    diff -1.421e-14 relative diff -1.388e-16 runtime 0.000001   8 wide Fog C++ vector class Kahan sum
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000012   Serial sum with double double knuth sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000003   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000003   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000003   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000002   8 wide GCC vector extensions Knuth sum
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000002   8 wide Fog C++ vector class Knuth sum
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000003   Pair-wise sum


  accurate sum 102.4000001024    sum 102.4000001024003 diff  2.842e-13 relative diff  2.776e-15 runtime 0.000002   OpenMP sum
  accurate sum 102.4000001023524 sum 102.4000001023524 diff          0 relative diff          0 runtime 0.000002   OpenMP sum with bit truncation
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000007   OpenMP sum with double double kahan sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000006   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 4096 log 12 ndigits 5 ndigitsld 2 nbits 15 nbitsld 7
Initializing mesh with Leblanc problem, high values first
  accurate sum 204.8000002048    sum 204.8000002047672 diff  -3.28e-11 relative diff -1.601e-13 runtime 0.000004   Serial sum
  accurate sum 204.8000002048    sum 204.8000002047995 diff -4.547e-13 relative diff  -2.22e-15 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 204.8000002       sum 204.8000002       diff          0 relative diff          0 runtime 0.000005   Serial sum with digit truncation
  accurate sum 204.8000002047047 sum 204.8000002047047 diff          0 relative diff          0 runtime 0.000004   Serial sum with bit truncation
  accurate sum 204.8000002048    sum 204.8000002048    diff -1.148e-14 relative diff -5.604e-17 runtime 0.000007   Serial sum with long double accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000007   Serial sum with long double accumulator with ndigit truncation
  accurate sum 204.8000002047993 sum 204.8000002047993 diff          0 relative diff          0 runtime 0.000007   Serial sum with long double accumulator with bit truncation
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000012   Serial sum with double double kahan sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000003   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000003   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000003   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff -2.842e-14 relative diff -1.388e-16 runtime 0.000002   8 wide GCC vector extensions Kahan sum
  accurate sum 204.8000002048    sum 204.8000002048    diff -2.842e-14 relative diff -1.388e-16 runtime 0.000002   8 wide Fog C++ vector class Kahan sum
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000025   Serial sum with double double knuth sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000006   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000006   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000006   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000003   8 wide GCC vector extensions Knuth sum
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000003   8 wide Fog C++ vector class Knuth sum
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000006   Pair-wise sum


  accurate sum 204.8000002048    sum 204.8000002047672 diff  -3.28e-11 relative diff -1.601e-13 runtime 0.000004   OpenMP sum
  accurate sum 204.8000002047047 sum 204.8000002047047 diff          0 relative diff          0 runtime 0.000004   OpenMP sum with bit truncation
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000014   OpenMP sum with double double kahan sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000012   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 8192 log 13 ndigits 5 ndigitsld 2 nbits 17 nbitsld 7
Initializing mesh with Leblanc problem, high values first
  accurate sum 409.6000004096    sum 409.6000004095737 diff -2.626e-11 relative diff -6.412e-14 runtime 0.000008   Serial sum
  accurate sum 409.6000004096    sum 409.6000004095943 diff -5.741e-12 relative diff -1.402e-14 runtime 0.000001   Serial sum (OpenMP SIMD pragma)
  accurate sum 409.60000041      sum 409.60000041      diff          0 relative diff          0 runtime 0.000008   Serial sum with digit truncation
  accurate sum 409.6000004038215 sum 409.6000004038215 diff          0 relative diff          0 runtime 0.000008   Serial sum with bit truncation
  accurate sum 409.6000004096    sum 409.6000004096001 diff  3.389e-14 relative diff  8.274e-17 runtime 0.000014   Serial sum with long double accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000014   Serial sum with long double accumulator with ndigit truncation
  accurate sum 409.6000004095986 sum 409.6000004095986 diff          0 relative diff          0 runtime 0.000014   Serial sum with long double accumulator with bit truncation
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000027   Serial sum with double double kahan sum accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000006   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000006   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000006   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 409.6000004096    sum 409.6000004095999 diff -5.684e-14 relative diff -1.388e-16 runtime 0.000004   8 wide GCC vector extensions Kahan sum
  accurate sum 409.6000004096    sum 409.6000004095999 diff -5.684e-14 relative diff -1.388e-16 runtime 0.000004   8 wide Fog C++ vector class Kahan sum
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000049   Serial sum with double double knuth sum accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000012   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000012   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000012   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000007   8 wide GCC vector extensions Knuth sum
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000007   8 wide Fog C++ vector class Knuth sum
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000012   Pair-wise sum


  accurate sum 409.6000004096    sum 409.6000004095737 diff -2.626e-11 relative diff -6.412e-14 runtime 0.000008   OpenMP sum
  accurate sum 409.6000004094094 sum 409.6000004094094 diff          0 relative diff          0 runtime 0.000008   OpenMP sum with bit truncation
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000025   OpenMP sum with double double kahan sum accumulator
  accurate sum 409.6000004095999 sum 409.6000004095999 diff          0 relative diff          0 runtime 0.000025   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 16384 log 14 ndigits 5 ndigitsld 2 nbits 18 nbitsld 8
Initializing mesh with Leblanc problem, high values first
  accurate sum 819.2000008192    sum 819.2000008196816 diff  4.816e-10 relative diff  5.879e-13 runtime 0.000016   Serial sum
  accurate sum 819.2000008192    sum 819.2000008192219 diff  2.194e-11 relative diff  2.678e-14 runtime 0.000002   Serial sum (OpenMP SIMD pragma)
  accurate sum 819.20000082      sum 819.20000082      diff          0 relative diff          0 runtime 0.000017   Serial sum with digit truncation
  accurate sum 819.2000007927418 sum 819.2000007927418 diff          0 relative diff          0 runtime 0.000027   Serial sum with bit truncation
  accurate sum 819.2000008192    sum 819.2000008192    diff -1.749e-14 relative diff -2.135e-17 runtime 0.000027   Serial sum with long double accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000034   Serial sum with long double accumulator with ndigit truncation
  accurate sum 819.2000008191972 sum 819.2000008191972 diff          0 relative diff          0 runtime 0.000027   Serial sum with long double accumulator with bit truncation
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000049   Serial sum with double double kahan sum accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000012   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000012   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000012   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 819.2000008192    sum 819.2000008191999 diff -1.137e-13 relative diff -1.388e-16 runtime 0.000008   8 wide GCC vector extensions Kahan sum
  accurate sum 819.2000008192    sum 819.2000008191999 diff -1.137e-13 relative diff -1.388e-16 runtime 0.000008   8 wide Fog C++ vector class Kahan sum
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000098   Serial sum with double double knuth sum accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000025   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000025   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000025   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000013   8 wide GCC vector extensions Knuth sum
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000013   8 wide Fog C++ vector class Knuth sum
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000026   Pair-wise sum


  accurate sum 819.2000008192    sum 819.2000008196816 diff  4.816e-10 relative diff  5.879e-13 runtime 0.000016   OpenMP sum
  accurate sum 819.2000008188188 sum 819.2000008188188 diff          0 relative diff          0 runtime 0.000016   OpenMP sum with bit truncation
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000055   OpenMP sum with double double kahan sum accumulator
  accurate sum 819.2000008191999 sum 819.2000008191999 diff          0 relative diff          0 runtime 0.000049   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 32768 log 15 ndigits 6 ndigitsld 3 nbits 19 nbitsld 9
Initializing mesh with Leblanc problem, high values first
  accurate sum 1638.4000016384   sum 1638.400001638733 diff  3.331e-10 relative diff  2.033e-13 runtime 0.000033   Serial sum
  accurate sum 1638.4000016384   sum 1638.400001638405 diff  4.547e-12 relative diff  2.776e-15 runtime 0.000003   Serial sum (OpenMP SIMD pragma)
  accurate sum 1638.400002       sum 1638.400002       diff          0 relative diff          0 runtime 0.000033   Serial sum with digit truncation
  accurate sum 1638.400001525879 sum 1638.400001525879 diff          0 relative diff          0 runtime 0.000055   Serial sum with bit truncation
  accurate sum 1638.4000016384   sum 1638.4000016384   diff -1.771e-13 relative diff -1.081e-16 runtime 0.000055   Serial sum with long double accumulator
  accurate sum 1638.400001638    sum 1638.400001638    diff          0 relative diff          0 runtime 0.000055   Serial sum with long double accumulator with ndigit truncation
  accurate sum 1638.400001638336 sum 1638.400001638336 diff          0 relative diff          0 runtime 0.000055   Serial sum with long double accumulator with bit truncation
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000111   Serial sum with double double kahan sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000025   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000025   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000025   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff -2.274e-13 relative diff -1.388e-16 runtime 0.000015   8 wide GCC vector extensions Kahan sum
  accurate sum 1638.4000016384   sum 1638.4000016384   diff -2.274e-13 relative diff -1.388e-16 runtime 0.000015   8 wide Fog C++ vector class Kahan sum
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000197   Serial sum with double double knuth sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000049   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000049   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000049   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000026   8 wide GCC vector extensions Knuth sum
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000026   8 wide Fog C++ vector class Knuth sum
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000016   Pair-wise sum


  accurate sum 1638.4000016384   sum 1638.400001638733 diff  3.331e-10 relative diff  2.033e-13 runtime 0.000033   OpenMP sum
  accurate sum 1638.400001630187 sum 1638.400001630187 diff          0 relative diff          0 runtime 0.000033   OpenMP sum with bit truncation
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000098   OpenMP sum with double double kahan sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000098   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 65536 log 16 ndigits 6 ndigitsld 3 nbits 20 nbitsld 9
Initializing mesh with Leblanc problem, high values first
  accurate sum 3276.8000032768   sum 3276.800003276371 diff -4.293e-10 relative diff  -1.31e-13 runtime 0.000066   Serial sum
  accurate sum 3276.8000032768   sum 3276.800003276275 diff -5.248e-10 relative diff -1.601e-13 runtime 0.000008   Serial sum (OpenMP SIMD pragma)
  accurate sum 3276.800003       sum 3276.800003       diff          0 relative diff          0 runtime 0.000066   Serial sum with digit truncation
  accurate sum 3276.800003051758 sum 3276.800003051758 diff          0 relative diff          0 runtime 0.000066   Serial sum with bit truncation
  accurate sum 3276.8000032768   sum 3276.800003276801 diff   8.68e-13 relative diff  2.649e-16 runtime 0.000109   Serial sum with long double accumulator
  accurate sum 3276.800003277    sum 3276.800003277    diff          0 relative diff          0 runtime 0.000110   Serial sum with long double accumulator with ndigit truncation
  accurate sum 3276.800003276672 sum 3276.800003276672 diff          0 relative diff          0 runtime 0.000109   Serial sum with long double accumulator with bit truncation
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000197   Serial sum with double double kahan sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000049   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000049   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000049   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff -4.547e-13 relative diff -1.388e-16 runtime 0.000030   8 wide GCC vector extensions Kahan sum
  accurate sum 3276.8000032768   sum 3276.8000032768   diff -4.547e-13 relative diff -1.388e-16 runtime 0.000030   8 wide Fog C++ vector class Kahan sum
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000399   Serial sum with double double knuth sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000098   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000098   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000098   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000052   8 wide GCC vector extensions Knuth sum
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000052   8 wide Fog C++ vector class Knuth sum
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000032   Pair-wise sum


  accurate sum 3276.8000032768   sum 3276.800003276371 diff -4.293e-10 relative diff  -1.31e-13 runtime 0.000066   OpenMP sum
  accurate sum 3276.800003260374 sum 3276.800003260374 diff          0 relative diff          0 runtime 0.000071   OpenMP sum with bit truncation
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000197   OpenMP sum with double double kahan sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000208   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 131072 log 17 ndigits 6 ndigitsld 3 nbits 21 nbitsld 10
Initializing mesh with Leblanc problem, high values first
  accurate sum 6553.6000065536   sum 6553.600006562821 diff  9.221e-09 relative diff  1.407e-12 runtime 0.000131   Serial sum
  accurate sum 6553.6000065536   sum 6553.60000655318  diff -4.202e-10 relative diff -6.412e-14 runtime 0.000017   Serial sum (OpenMP SIMD pragma)
  accurate sum 6553.600007       sum 6553.600007       diff          0 relative diff          0 runtime 0.000136   Serial sum with digit truncation
  accurate sum 6553.600006103516 sum 6553.600006103516 diff          0 relative diff          0 runtime 0.000131   Serial sum with bit truncation
  accurate sum 6553.6000065536   sum 6553.600006553605 diff  3.868e-12 relative diff  5.901e-16 runtime 0.000219   Serial sum with long double accumulator
  accurate sum 6553.600006554    sum 6553.600006554    diff          0 relative diff          0 runtime 0.000219   Serial sum with long double accumulator with ndigit truncation
  accurate sum 6553.600006553344 sum 6553.600006553344 diff          0 relative diff          0 runtime 0.000219   Serial sum with long double accumulator with bit truncation
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000397   Serial sum with double double kahan sum accumulator
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000098   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000098   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000098   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 6553.6000065536   sum 6553.600006553599 diff -9.095e-13 relative diff -1.388e-16 runtime 0.000061   8 wide GCC vector extensions Kahan sum
  accurate sum 6553.6000065536   sum 6553.600006553599 diff -9.095e-13 relative diff -1.388e-16 runtime 0.000060   8 wide Fog C++ vector class Kahan sum
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000791   Serial sum with double double knuth sum accumulator
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000197   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000197   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000201   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000104   8 wide GCC vector extensions Knuth sum
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000104   8 wide Fog C++ vector class Knuth sum
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000065   Pair-wise sum


  accurate sum 6553.6000065536   sum 6553.600006562821 diff  9.221e-09 relative diff  1.407e-12 runtime 0.000131   OpenMP sum
  accurate sum 6553.600006461143 sum 6553.600006461143 diff          0 relative diff          0 runtime 0.000131   OpenMP sum with bit truncation
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000442   OpenMP sum with double double kahan sum accumulator
  accurate sum 6553.600006553599 sum 6553.600006553599 diff          0 relative diff          0 runtime 0.000412   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 262144 log 18 ndigits 6 ndigitsld 3 nbits 22 nbitsld 10
Initializing mesh with Leblanc problem, high values first
  accurate sum 13107.2000131072  sum 13107.20001314317 diff  3.597e-08 relative diff  2.745e-12 runtime 0.000264   Serial sum
  accurate sum 13107.2000131072  sum 13107.20001311491 diff  7.705e-09 relative diff  5.879e-13 runtime 0.000036   Serial sum (OpenMP SIMD pragma)
  accurate sum 13107.20001       sum 13107.20001       diff          0 relative diff          0 runtime 0.000263   Serial sum with digit truncation
  accurate sum 13107.20001220703 sum 13107.20001220703 diff          0 relative diff          0 runtime 0.000262   Serial sum with bit truncation
  accurate sum 13107.2000131072  sum 13107.20001310719 diff -1.196e-11 relative diff -9.126e-16 runtime 0.000441   Serial sum with long double accumulator
  accurate sum 13107.20001311    sum 13107.20001311    diff          0 relative diff          0 runtime 0.000437   Serial sum with long double accumulator with ndigit truncation
  accurate sum 13107.20001310669 sum 13107.20001310669 diff          0 relative diff          0 runtime 0.000442   Serial sum with long double accumulator with bit truncation
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000804   Serial sum with double double kahan sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000197   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000197   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000197   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff -1.819e-12 relative diff -1.388e-16 runtime 0.000121   8 wide GCC vector extensions Kahan sum
  accurate sum 13107.2000131072  sum 13107.2000131072  diff -1.819e-12 relative diff -1.388e-16 runtime 0.000120   8 wide Fog C++ vector class Kahan sum
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.001581   Serial sum with double double knuth sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000393   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000399   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000393   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000208   8 wide GCC vector extensions Knuth sum
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000212   8 wide Fog C++ vector class Knuth sum
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000130   Pair-wise sum


  accurate sum 13107.2000131072  sum 13107.20001314317 diff  3.597e-08 relative diff  2.745e-12 runtime 0.000263   OpenMP sum
  accurate sum 13107.20001268387 sum 13107.20001268387 diff          0 relative diff          0 runtime 0.000267   OpenMP sum with bit truncation
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000804   OpenMP sum with double double kahan sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000798   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 524288 log 19 ndigits 6 ndigitsld 3 nbits 23 nbitsld 11
Initializing mesh with Leblanc problem, high values first
  accurate sum 26214.4000262144  sum 26214.40002564823 diff -5.662e-07 relative diff  -2.16e-11 runtime 0.000528   Serial sum
  accurate sum 26214.4000262144  sum 26214.40002621973 diff   5.33e-09 relative diff  2.033e-13 runtime 0.000072   Serial sum (OpenMP SIMD pragma)
  accurate sum 26214.40003       sum 26214.40003       diff          0 relative diff          0 runtime 0.000526   Serial sum with digit truncation
  accurate sum 26214.40002441406 sum 26214.40002441406 diff          0 relative diff          0 runtime 0.000529   Serial sum with bit truncation
  accurate sum 26214.4000262144  sum 26214.40002621434 diff -5.817e-11 relative diff -2.219e-15 runtime 0.000874   Serial sum with long double accumulator
  accurate sum 26214.40002621    sum 26214.40002621    diff          0 relative diff          0 runtime 0.000878   Serial sum with long double accumulator with ndigit truncation
  accurate sum 26214.40002620965 sum 26214.40002620965 diff          0 relative diff          0 runtime 0.000879   Serial sum with long double accumulator with bit truncation
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.001602   Serial sum with double double kahan sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.000394   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.000400   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.000393   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff -3.638e-12 relative diff -1.388e-16 runtime 0.000243   8 wide GCC vector extensions Kahan sum
  accurate sum 26214.4000262144  sum 26214.4000262144  diff -3.638e-12 relative diff -1.388e-16 runtime 0.000249   8 wide Fog C++ vector class Kahan sum
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.003157   Serial sum with double double knuth sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.000787   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.000789   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.000789   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.000415   8 wide GCC vector extensions Knuth sum
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.000420   8 wide Fog C++ vector class Knuth sum
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.000291   Pair-wise sum


  accurate sum 26214.4000262144  sum 26214.40002564823 diff -5.662e-07 relative diff  -2.16e-11 runtime 0.000529   OpenMP sum
  accurate sum 26214.40002441406 sum 26214.40002441406 diff          0 relative diff          0 runtime 0.000534   OpenMP sum with bit truncation
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.001636   OpenMP sum with double double kahan sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.001648   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 1048576 log 20 ndigits 7 ndigitsld 4 nbits 24 nbitsld 12
Initializing mesh with Leblanc problem, high values first
  accurate sum 52428.8000524288  sum 52428.80005292332 diff  4.945e-07 relative diff  9.432e-12 runtime 0.001088   Serial sum
  accurate sum 52428.8000524288  sum 52428.80005242193 diff -6.869e-09 relative diff  -1.31e-13 runtime 0.000251   Serial sum (OpenMP SIMD pragma)
  accurate sum 52428.8001        sum 52428.8001        diff          0 relative diff          0 runtime 0.001087   Serial sum with digit truncation
  accurate sum 52428.80004882812 sum 52428.80004882812 diff          0 relative diff          0 runtime 0.001080   Serial sum with bit truncation
  accurate sum 52428.8000524288  sum 52428.80005242807 diff -7.327e-10 relative diff -1.397e-14 runtime 0.001806   Serial sum with long double accumulator
  accurate sum 52428.8000524     sum 52428.8000524     diff          0 relative diff          0 runtime 0.001763   Serial sum with long double accumulator with ndigit truncation
  accurate sum 52428.8000524044  sum 52428.8000524044  diff          0 relative diff          0 runtime 0.001761   Serial sum with long double accumulator with bit truncation
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.003155   Serial sum with double double kahan sum accumulator
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.000817   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.000820   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.000817   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 52428.8000524288  sum 52428.80005242879 diff -7.276e-12 relative diff -1.388e-16 runtime 0.000496   8 wide GCC vector extensions Kahan sum
  accurate sum 52428.8000524288  sum 52428.80005242879 diff -7.276e-12 relative diff -1.388e-16 runtime 0.000501   8 wide Fog C++ vector class Kahan sum
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.006312   Serial sum with double double knuth sum accumulator
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.001589   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.001587   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.001592   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.000825   8 wide GCC vector extensions Knuth sum
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.000884   8 wide Fog C++ vector class Knuth sum
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.001101   Pair-wise sum


  accurate sum 52428.8000524288  sum 52428.80005292332 diff  4.945e-07 relative diff  9.432e-12 runtime 0.001082   OpenMP sum
  accurate sum 52428.80004882812 sum 52428.80004882812 diff          0 relative diff          0 runtime 0.001084   OpenMP sum with bit truncation
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.003191   OpenMP sum with double double kahan sum accumulator
  accurate sum 52428.80005242879 sum 52428.80005242879 diff          0 relative diff          0 runtime 0.003384   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 2097152 log 21 ndigits 7 ndigitsld 4 nbits 25 nbitsld 12
Initializing mesh with Leblanc problem, high values first
  accurate sum 104857.6001048576 sum 104857.6001084272 diff   3.57e-06 relative diff  3.404e-11 runtime 0.002263   Serial sum
  accurate sum 104857.6001048576 sum 104857.6001050051 diff  1.475e-07 relative diff  1.407e-12 runtime 0.000786   Serial sum (OpenMP SIMD pragma)
  accurate sum 104857.6          sum 104857.6          diff          0 relative diff          0 runtime 0.002251   Serial sum with digit truncation
  accurate sum 104857.6000976562 sum 104857.6000976562 diff          0 relative diff          0 runtime 0.002241   Serial sum with bit truncation
  accurate sum 104857.6001048576 sum 104857.6001048604 diff  2.808e-09 relative diff  2.678e-14 runtime 0.003557   Serial sum with long double accumulator
  accurate sum 104857.600105     sum 104857.600105     diff          0 relative diff          0 runtime 0.003562   Serial sum with long double accumulator with ndigit truncation
  accurate sum 104857.6001048088 sum 104857.6001048088 diff          0 relative diff          0 runtime 0.003549   Serial sum with long double accumulator with bit truncation
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.006392   Serial sum with double double kahan sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.001686   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.001698   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.001692   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff -1.455e-11 relative diff -1.388e-16 runtime 0.001134   8 wide GCC vector extensions Kahan sum
  accurate sum 104857.6001048576 sum 104857.6001048576 diff -1.455e-11 relative diff -1.388e-16 runtime 0.001134   8 wide Fog C++ vector class Kahan sum
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.012621   Serial sum with double double knuth sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.003224   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.003234   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.003234   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.001708   8 wide GCC vector extensions Knuth sum
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.001840   8 wide Fog C++ vector class Knuth sum
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.002372   Pair-wise sum


  accurate sum 104857.6001048576 sum 104857.6001084272 diff   3.57e-06 relative diff  3.404e-11 runtime 0.002222   OpenMP sum
  accurate sum 104857.6000976562 sum 104857.6000976562 diff          0 relative diff          0 runtime 0.002201   OpenMP sum with bit truncation
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.006412   OpenMP sum with double double kahan sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.006700   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 4194304 log 22 ndigits 7 ndigitsld 4 nbits 26 nbitsld 13
Initializing mesh with Leblanc problem, high values first
  accurate sum 209715.2002097152 sum 209715.2001908246 diff -1.889e-05 relative diff -9.008e-11 runtime 0.004471   Serial sum
  accurate sum 209715.2002097152 sum 209715.2002102908 diff  5.756e-07 relative diff  2.745e-12 runtime 0.001586   Serial sum (OpenMP SIMD pragma)
  accurate sum 209715.2          sum 209715.2          diff          0 relative diff          0 runtime 0.004466   Serial sum with digit truncation
  accurate sum 209715.19921875   sum 209715.19921875   diff          0 relative diff          0 runtime 0.004477   Serial sum with bit truncation
  accurate sum 209715.2002097152 sum 209715.2002097158 diff  5.755e-10 relative diff  2.744e-15 runtime 0.007109   Serial sum with long double accumulator
  accurate sum 209715.20021      sum 209715.20021      diff          0 relative diff          0 runtime 0.007115   Serial sum with long double accumulator with ndigit truncation
  accurate sum 209715.2002096176 sum 209715.2002096176 diff          0 relative diff          0 runtime 0.007104   Serial sum with long double accumulator with bit truncation
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.012806   Serial sum with double double kahan sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.003382   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.003404   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.003377   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff  -2.91e-11 relative diff -1.388e-16 runtime 0.002277   8 wide GCC vector extensions Kahan sum
  accurate sum 209715.2002097152 sum 209715.2002097152 diff  -2.91e-11 relative diff -1.388e-16 runtime 0.002283   8 wide Fog C++ vector class Kahan sum
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.025268   Serial sum with double double knuth sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.006445   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.006475   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.006473   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.003425   8 wide GCC vector extensions Knuth sum
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.003641   8 wide Fog C++ vector class Knuth sum
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.005319   Pair-wise sum


  accurate sum 209715.2002097152 sum 209715.2001908246 diff -1.889e-05 relative diff -9.008e-11 runtime 0.004500   OpenMP sum
  accurate sum 209715.2001953125 sum 209715.2000732422 diff -0.0001221 relative diff -5.821e-10 runtime 0.004458   OpenMP sum with bit truncation
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.013096   OpenMP sum with double double kahan sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.012852   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 8388608 log 23 ndigits 7 ndigitsld 4 nbits 27 nbitsld 13
Initializing mesh with Leblanc problem, high values first
  accurate sum 419430.4004194304 sum 419430.400462431  diff    4.3e-05 relative diff  1.025e-10 runtime 0.008925   Serial sum
  accurate sum 419430.4004194304 sum 419430.4004103717 diff -9.059e-06 relative diff  -2.16e-11 runtime 0.003149   Serial sum (OpenMP SIMD pragma)
  accurate sum 419430.4          sum 419430.4          diff          0 relative diff          0 runtime 0.008933   Serial sum with digit truncation
  accurate sum 419430.3984375    sum 419430.3984375    diff          0 relative diff          0 runtime 0.008924   Serial sum with bit truncation
  accurate sum 419430.4004194304 sum 419430.4004193632 diff -6.722e-08 relative diff -1.603e-13 runtime 0.014222   Serial sum with long double accumulator
  accurate sum 419430.400419     sum 419430.400419     diff          0 relative diff          0 runtime 0.014221   Serial sum with long double accumulator with ndigit truncation
  accurate sum 419430.4004192352 sum 419430.4004192352 diff          0 relative diff          0 runtime 0.014194   Serial sum with long double accumulator with bit truncation
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.025587   Serial sum with double double kahan sum accumulator
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.006757   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.006819   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.006723   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 419430.4004194304 sum 419430.4004194303 diff -5.821e-11 relative diff -1.388e-16 runtime 0.004517   8 wide GCC vector extensions Kahan sum
  accurate sum 419430.4004194304 sum 419430.4004194303 diff -5.821e-11 relative diff -1.388e-16 runtime 0.004478   8 wide Fog C++ vector class Kahan sum
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.050431   Serial sum with double double knuth sum accumulator
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.012880   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.012881   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.012893   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.006786   8 wide GCC vector extensions Knuth sum
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.007284   8 wide Fog C++ vector class Knuth sum
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.012553   Pair-wise sum


  accurate sum 419430.4004194304 sum 419430.400462431  diff    4.3e-05 relative diff  1.025e-10 runtime 0.008930   OpenMP sum
  accurate sum 419430.400390625  sum 419430.400390625  diff          0 relative diff          0 runtime 0.008914   OpenMP sum with bit truncation
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.026768   OpenMP sum with double double kahan sum accumulator
  accurate sum 419430.4004194303 sum 419430.4004194303 diff          0 relative diff          0 runtime 0.025785   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 16777216 log 24 ndigits 7 ndigitsld 4 nbits 27 nbitsld 14
Initializing mesh with Leblanc problem, high values first
  accurate sum 838860.8008388608 sum 838860.800853056  diff   1.42e-05 relative diff  1.692e-11 runtime 0.017811   Serial sum
  accurate sum 838860.8008388608 sum 838860.8008467731 diff  7.912e-06 relative diff  9.432e-12 runtime 0.006233   Serial sum (OpenMP SIMD pragma)
  accurate sum 838860.801        sum 838860.801        diff          0 relative diff          0 runtime 0.017845   Serial sum with digit truncation
  accurate sum 838860.796875     sum 838860.796875     diff          0 relative diff          0 runtime 0.017815   Serial sum with bit truncation
  accurate sum 838860.8008388608 sum 838860.800838807  diff  -5.38e-08 relative diff -6.413e-14 runtime 0.028413   Serial sum with long double accumulator
  accurate sum 838860.800839     sum 838860.800839     diff          0 relative diff          0 runtime 0.028427   Serial sum with long double accumulator with ndigit truncation
  accurate sum 838860.8008384705 sum 838860.8008384705 diff          0 relative diff          0 runtime 0.028370   Serial sum with long double accumulator with bit truncation
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.051427   Serial sum with double double kahan sum accumulator
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.013486   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.013537   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.013455   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 838860.8008388608 sum 838860.8008388607 diff -1.164e-10 relative diff -1.388e-16 runtime 0.009040   8 wide GCC vector extensions Kahan sum
  accurate sum 838860.8008388608 sum 838860.8008388607 diff -1.164e-10 relative diff -1.388e-16 runtime 0.008921   8 wide Fog C++ vector class Kahan sum
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.100855   Serial sum with double double knuth sum accumulator
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.025800   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.025759   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.025861   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.013598   8 wide GCC vector extensions Knuth sum
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.014499   8 wide Fog C++ vector class Knuth sum
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.025285   Pair-wise sum


  accurate sum 838860.8008388608 sum 838860.800853056  diff   1.42e-05 relative diff  1.692e-11 runtime 0.017829   OpenMP sum
  accurate sum 838860.80078125   sum 838860.80078125   diff          0 relative diff          0 runtime 0.017801   OpenMP sum with bit truncation
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.052612   OpenMP sum with double double kahan sum accumulator
  accurate sum 838860.8008388607 sum 838860.8008388607 diff          0 relative diff          0 runtime 0.052032   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 33554432 log 25 ndigits 8 ndigitsld 5 nbits 29 nbitsld 15
Initializing mesh with Leblanc problem, high values first
  accurate sum 1677721.601677722 sum 1677721.600413603 diff  -0.001264 relative diff -7.535e-10 runtime 0.035572   Serial sum
  accurate sum 1677721.601677722 sum 1677721.601734834 diff  5.711e-05 relative diff  3.404e-11 runtime 0.012485   Serial sum (OpenMP SIMD pragma)
  accurate sum 1677721.6         sum 1677721.6         diff          0 relative diff          0 runtime 0.035651   Serial sum with digit truncation
  accurate sum 1677721.5         sum 1677721.5         diff          0 relative diff          0 runtime 0.035657   Serial sum with bit truncation
  accurate sum 1677721.601677722 sum 1677721.601678708 diff  9.863e-07 relative diff  5.879e-13 runtime 0.056835   Serial sum with long double accumulator
  accurate sum 1677721.6017      sum 1677721.6017      diff          0 relative diff          0 runtime 0.056850   Serial sum with long double accumulator with ndigit truncation
  accurate sum 1677721.601676941 sum 1677721.601676941 diff          0 relative diff          0 runtime 0.056762   Serial sum with long double accumulator with bit truncation
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.102051   Serial sum with double double kahan sum accumulator
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.026981   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.027063   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.026895   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 1677721.601677722 sum 1677721.601677721 diff -2.328e-10 relative diff -1.388e-16 runtime 0.018149   8 wide GCC vector extensions Kahan sum
  accurate sum 1677721.601677722 sum 1677721.601677721 diff -2.328e-10 relative diff -1.388e-16 runtime 0.018004   8 wide Fog C++ vector class Kahan sum
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.201907   Serial sum with double double knuth sum accumulator
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.051617   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.051565   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.051721   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.027191   8 wide GCC vector extensions Knuth sum
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.029111   8 wide Fog C++ vector class Knuth sum
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.051119   Pair-wise sum


  accurate sum 1677721.601677722 sum 1677721.600413603 diff  -0.001264 relative diff -7.535e-10 runtime 0.035647   OpenMP sum
  accurate sum 1677721.6015625   sum 1677721.59375     diff  -0.007812 relative diff -4.657e-09 runtime 0.035619   OpenMP sum with bit truncation
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.104305   OpenMP sum with double double kahan sum accumulator
  accurate sum 1677721.601677721 sum 1677721.601677721 diff          0 relative diff          0 runtime 0.104220   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 67108864 log 26 ndigits 8 ndigitsld 5 nbits 30 nbitsld 15
Initializing mesh with Leblanc problem, high values first
  accurate sum 3355443.203355443 sum 3355443.201976103 diff  -0.001379 relative diff -4.111e-10 runtime 0.071227   Serial sum
  accurate sum 3355443.203355443 sum 3355443.203053194 diff -0.0003022 relative diff -9.008e-11 runtime 0.025191   Serial sum (OpenMP SIMD pragma)
  accurate sum 3355443.2         sum 3355443.2         diff          0 relative diff          0 runtime 0.071352   Serial sum with digit truncation
  accurate sum 3355443           sum 3355443           diff          0 relative diff          0 runtime 0.071236   Serial sum with bit truncation
  accurate sum 3355443.203355443 sum 3355443.203356126 diff  6.824e-07 relative diff  2.034e-13 runtime 0.113902   Serial sum with long double accumulator
  accurate sum 3355443.2034      sum 3355443.2034      diff          0 relative diff          0 runtime 0.113818   Serial sum with long double accumulator with ndigit truncation
  accurate sum 3355443.203353882 sum 3355443.203353882 diff          0 relative diff          0 runtime 0.113607   Serial sum with long double accumulator with bit truncation
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.204266   Serial sum with double double kahan sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.054041   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.054187   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.053607   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff -4.657e-10 relative diff -1.388e-16 runtime 0.036451   8 wide GCC vector extensions Kahan sum
  accurate sum 3355443.203355443 sum 3355443.203355443 diff -4.657e-10 relative diff -1.388e-16 runtime 0.035922   8 wide Fog C++ vector class Kahan sum
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.403762   Serial sum with double double knuth sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.102834   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.103444   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.103392   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.054501   8 wide GCC vector extensions Knuth sum
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.058256   8 wide Fog C++ vector class Knuth sum
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.102442   Pair-wise sum


  accurate sum 3355443.203355443 sum 3355443.201976103 diff  -0.001379 relative diff -4.111e-10 runtime 0.071275   OpenMP sum
  accurate sum 3355443.1875      sum 3355443.1875      diff          0 relative diff          0 runtime 0.071283   OpenMP sum with bit truncation
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.207845   OpenMP sum with double double kahan sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.206959   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 134217728 log 27 ndigits 8 ndigitsld 5 nbits 31 nbitsld 16
Initializing mesh with Leblanc problem, high values first
  accurate sum 6710886.406710886 sum 6710886.393382353 diff   -0.01333 relative diff -1.986e-09 runtime 0.142513   Serial sum
  accurate sum 6710886.406710886 sum 6710886.407398896 diff   0.000688 relative diff  1.025e-10 runtime 0.050374   Serial sum (OpenMP SIMD pragma)
  accurate sum 6710886.4         sum 6710886.4         diff          0 relative diff          0 runtime 0.142578   Serial sum with digit truncation
  accurate sum 6710886           sum 6710886           diff          0 relative diff          0 runtime 0.142194   Serial sum with bit truncation
  accurate sum 6710886.406710886 sum 6710886.406710007 diff -8.792e-07 relative diff  -1.31e-13 runtime 0.227502   Serial sum with long double accumulator
  accurate sum 6710886.4067      sum 6710886.4067      diff          0 relative diff          0 runtime 0.227532   Serial sum with long double accumulator with ndigit truncation
  accurate sum 6710886.406677246 sum 6710886.406677246 diff          0 relative diff          0 runtime 0.227208   Serial sum with long double accumulator with bit truncation
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.409562   Serial sum with double double kahan sum accumulator
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.108232   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.108439   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.107823   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 6710886.406710886 sum 6710886.406710885 diff -9.313e-10 relative diff -1.388e-16 runtime 0.072908   8 wide GCC vector extensions Kahan sum
  accurate sum 6710886.406710886 sum 6710886.406710885 diff -9.313e-10 relative diff -1.388e-16 runtime 0.071835   8 wide Fog C++ vector class Kahan sum
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.807231   Serial sum with double double knuth sum accumulator
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.206325   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.206820   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.206635   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.108945   8 wide GCC vector extensions Knuth sum
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.116398   8 wide Fog C++ vector class Knuth sum
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.205089   Pair-wise sum


  accurate sum 6710886.406710886 sum 6710886.393382353 diff   -0.01333 relative diff -1.986e-09 runtime 0.142571   OpenMP sum
  accurate sum 6710886.375       sum 6710886.375       diff          0 relative diff          0 runtime 0.142599   OpenMP sum with bit truncation
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.416008   OpenMP sum with double double kahan sum accumulator
  accurate sum 6710886.406710885 sum 6710886.406710885 diff          0 relative diff          0 runtime 0.412345   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 268435456 log 28 ndigits 8 ndigitsld 5 nbits 32 nbitsld 16
Initializing mesh with Leblanc problem, high values first
  accurate sum 13421772.81342177 sum 13421772.76838235 diff   -0.04504 relative diff -3.356e-09 runtime 0.283862   Serial sum
  accurate sum 13421772.81342177 sum 13421772.8136489  diff  0.0002271 relative diff  1.692e-11 runtime 0.100758   Serial sum (OpenMP SIMD pragma)
  accurate sum 13421773          sum 13421773          diff          0 relative diff          0 runtime 0.284764   Serial sum with digit truncation
  accurate sum 13421768          sum 13421768          diff          0 relative diff          0 runtime 0.284706   Serial sum with bit truncation
  accurate sum 13421772.81342177 sum 13421772.81344066 diff  1.889e-05 relative diff  1.407e-12 runtime 0.454982   Serial sum with long double accumulator
  accurate sum 13421772.813      sum 13421772.813      diff          0 relative diff          0 runtime 0.455043   Serial sum with long double accumulator with ndigit truncation
  accurate sum 13421772.81335449 sum 13421772.81335449 diff          0 relative diff          0 runtime 0.455197   Serial sum with long double accumulator with bit truncation
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.815837   Serial sum with double double kahan sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.216681   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.216564   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.215948   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff -1.863e-09 relative diff -1.388e-16 runtime 0.145841   8 wide GCC vector extensions Kahan sum
  accurate sum 13421772.81342177 sum 13421772.81342177 diff -1.863e-09 relative diff -1.388e-16 runtime 0.143735   8 wide Fog C++ vector class Kahan sum
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 1.614262   Serial sum with double double knuth sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.411738   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.412861   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.412801   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.217832   8 wide GCC vector extensions Knuth sum
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.232662   8 wide Fog C++ vector class Knuth sum
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.411756   Pair-wise sum


  accurate sum 13421772.81342177 sum 13421772.76838235 diff   -0.04504 relative diff -3.356e-09 runtime 0.284678   OpenMP sum
  accurate sum 13421772.5        sum 13421772.5        diff          0 relative diff          0 runtime 0.284680   OpenMP sum with bit truncation
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.836598   OpenMP sum with double double kahan sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.830582   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 536870912 log 29 ndigits 8 ndigitsld 5 nbits 33 nbitsld 17
Initializing mesh with Leblanc problem, high values first
  accurate sum 26843545.62684355 sum 26843545.70588235 diff    0.07904 relative diff  2.944e-09 runtime 0.566980   Serial sum
  accurate sum 26843545.62684355 sum 26843545.60661764 diff   -0.02023 relative diff -7.535e-10 runtime 0.202130   Serial sum (OpenMP SIMD pragma)
  accurate sum 26843546          sum 26843546          diff          0 relative diff          0 runtime 0.566983   Serial sum with digit truncation
  accurate sum 26843520          sum 26843520          diff          0 relative diff          0 runtime 0.567078   Serial sum with bit truncation
  accurate sum 26843545.62684355 sum 26843545.62691722 diff  7.367e-05 relative diff  2.745e-12 runtime 0.910510   Serial sum with long double accumulator
  accurate sum 26843545.627      sum 26843545.627      diff          0 relative diff          0 runtime 0.910626   Serial sum with long double accumulator with ndigit truncation
  accurate sum 26843545.62646484 sum 26843545.62646484 diff          0 relative diff          0 runtime 0.910518   Serial sum with long double accumulator with bit truncation
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 1.633621   Serial sum with double double kahan sum accumulator
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 0.433753   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 0.433451   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 0.433601   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 26843545.62684355 sum 26843545.62684354 diff -3.725e-09 relative diff -1.388e-16 runtime 0.291662   8 wide GCC vector extensions Kahan sum
  accurate sum 26843545.62684355 sum 26843545.62684354 diff -3.725e-09 relative diff -1.388e-16 runtime 0.287682   8 wide Fog C++ vector class Kahan sum
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 3.229190   Serial sum with double double knuth sum accumulator
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 0.821998   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 0.822090   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 0.822242   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 0.435816   8 wide GCC vector extensions Knuth sum
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 0.468050   8 wide Fog C++ vector class Knuth sum
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 0.825333   Pair-wise sum


  accurate sum 26843545.62684355 sum 26843545.70588235 diff    0.07904 relative diff  2.944e-09 runtime 0.567173   OpenMP sum
  accurate sum 26843544          sum 26843544          diff          0 relative diff          0 runtime 0.567322   OpenMP sum with bit truncation
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 1.661773   OpenMP sum with double double kahan sum accumulator
  accurate sum 26843545.62684354 sum 26843545.62684354 diff          0 relative diff          0 runtime 1.654723   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 1073741824 log 30 ndigits 9 ndigitsld 6 nbits 34 nbitsld 18
Initializing mesh with Leblanc problem, high values first
  accurate sum 53687091.25368709 sum 53687091.70588235 diff     0.4522 relative diff  8.423e-09 runtime 1.133528   Serial sum
  accurate sum 53687091.25368709 sum 53687091.23161764 diff   -0.02207 relative diff -4.111e-10 runtime 0.403923   Serial sum (OpenMP SIMD pragma)
  accurate sum 53687090          sum 53687090          diff          0 relative diff          0 runtime 1.133966   Serial sum with digit truncation
  accurate sum 53687040          sum 53687040          diff          0 relative diff          0 runtime 1.134018   Serial sum with bit truncation
  accurate sum 53687091.25368709 sum 53687091.25252757 diff   -0.00116 relative diff  -2.16e-11 runtime 1.821033   Serial sum with long double accumulator
  accurate sum 53687091.25       sum 53687091.25       diff          0 relative diff          0 runtime 1.821215   Serial sum with long double accumulator with ndigit truncation
  accurate sum 53687091.25195312 sum 53687091.25195312 diff          0 relative diff          0 runtime 1.821078   Serial sum with long double accumulator with bit truncation
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 3.288371   Serial sum with double double kahan sum accumulator
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 0.867005   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 0.866492   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 0.867450   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 53687091.25368709 sum 53687091.25368708 diff -7.451e-09 relative diff -1.388e-16 runtime 0.582778   8 wide GCC vector extensions Kahan sum
  accurate sum 53687091.25368709 sum 53687091.25368708 diff -7.451e-09 relative diff -1.388e-16 runtime 0.575264   8 wide Fog C++ vector class Kahan sum
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 6.456470   Serial sum with double double knuth sum accumulator
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 1.643780   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 1.644144   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 1.644324   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 0.871359   8 wide GCC vector extensions Knuth sum
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 0.936671   8 wide Fog C++ vector class Knuth sum
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 1.653095   Pair-wise sum


  accurate sum 53687091.25368709 sum 53687091.70588235 diff     0.4522 relative diff  8.423e-09 runtime 1.134009   OpenMP sum
  accurate sum 53687088          sum 53687088          diff          0 relative diff          0 runtime 1.134156   OpenMP sum with bit truncation
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 3.330104   OpenMP sum with double double kahan sum accumulator
  accurate sum 53687091.25368708 sum 53687091.25368708 diff          0 relative diff          0 runtime 3.317834   OpenMP sum with double double kahan sum accumulator with bit truncation

Scanning dependencies of target distclean
Built target distclean
/usr/bin/modulecmd bash $*
MANPATH=/usr/share/man:/usr/local/share/man ;export MANPATH;PATH=/home/brobey/bin:/home/brobey/parsplice-install/bin:/home/brobey/bin:/home/brobey/parsplice-install/bin:/home/brobey/spack/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin ;export PATH;unset CC;unset CLANGROOT;unset CLANGVER;unset CPP;unset CXX;unset LD_LIBRARY_PATH;unset LLVMROOT;unset LOADEDMODULES;unset PYTHONPATH;unset _LMFILES_;
/usr/bin/modulecmd bash $*
/usr/bin/modulecmd bash $*
CC=gcc ;export CC;CPP=cpp ;export CPP;CXX=g++ ;export CXX;F77=gfortran ;export F77;F90=gfortran ;export F90;FC=gfortran ;export FC;LD_LIBRARY_PATH=/projects/opt/centos7/gcc/9.1.0/lib64:/projects/opt/centos7/gcc/9.1.0/lib ;export LD_LIBRARY_PATH;LOADEDMODULES=cmake/3.12.4:gcc/9.1.0 ;export LOADEDMODULES;MANPATH=/projects/opt/centos7/gcc/9.1.0/share/man:/usr/share/man:/usr/local/share/man ;export MANPATH;PATH=/projects/opt/centos7/gcc/9.1.0/bin:/projects/opt/centos7/cmake/3.12.4/bin:/home/brobey/bin:/home/brobey/parsplice-install/bin:/home/brobey/bin:/home/brobey/parsplice-install/bin:/home/brobey/spack/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin ;export PATH;_LMFILES_=/projects/darwin/modulefiles/centos7/cmake/3.12.4:/projects/darwin/modulefiles/centos7/gcc/9.1.0 ;export _LMFILES_;
-- The C compiler identification is GNU 9.1.0
-- The CXX compiler identification is GNU 9.1.0
-- Check for working C compiler: /projects/opt/centos7/gcc/9.1.0/bin/gcc
-- Check for working C compiler: /projects/opt/centos7/gcc/9.1.0/bin/gcc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /projects/opt/centos7/gcc/9.1.0/bin/g++
-- Check for working CXX compiler: /projects/opt/centos7/gcc/9.1.0/bin/g++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Found OpenMP_C: -fopenmp (found version "4.5") 
-- Found OpenMP_CXX: -fopenmp (found version "4.5") 
-- Found OpenMP: TRUE (found version "4.5")  
-- Trying Fog Vector Class -- works
-- Trying X86_64 intrinsics -- works
-- Detecting AVX512 hardware -- not present
-- Trying GCC Vector Extensions -- works
-- Trying Quad math library -- works
-- Configuring done
-- Generating done
-- Build files have been written to: /home/brobey/GlobalSums
Scanning dependencies of target globalsums
[  3%] Building C object CMakeFiles/globalsums.dir/globalsums.c.o
/home/brobey/GlobalSums/globalsums.c:542:10: optimized: loop vectorized using 32 byte vectors
/home/brobey/GlobalSums/globalsums.c:542:10: optimized: loop vectorized using 32 byte vectors
/home/brobey/GlobalSums/globalsums.c:540:9: optimized: loop with 2 iterations completely unrolled (header execution count 72506055)
/home/brobey/GlobalSums/globalsums.c:540:9: optimized: loop with 5 iterations completely unrolled (header execution count 51114517)
/home/brobey/GlobalSums/globalsums.c:100:7: missed: statement clobbers memory: printf ("--- num openmp threads in parallel region: %d\n", _2);
/home/brobey/GlobalSums/globalsums.c:104:3: missed: couldn't vectorize loop
/home/brobey/GlobalSums/globalsums.c:104:3: missed: not vectorized: loop nest containing two or more consecutive inner loops cannot be vectorized
/home/brobey/GlobalSums/globalsums.c:488:7: missed: couldn't vectorize loop
/home/brobey/GlobalSums/globalsums.c:489:21: missed: not vectorized: no vectype for stmt: *_686 = 1.0000000000000000000000000000000000445733797301757921829e-10;
 scalar_type: _Float128
/home/brobey/GlobalSums/globalsums.c:488:7: missed: couldn't vectorize loop
/home/brobey/GlobalSums/globalsums.c:489:21: missed: not vectorized: no vectype for stmt: *_94 = 1.0000000000000000000000000000000000481482486096808963264e-1;
 scalar_type: _Float128
/home/brobey/GlobalSums/globalsums.c:137:7: optimized: loop vectorized using 32 byte vectors
/home/brobey/GlobalSums/globalsums.c:137:7: optimized: loop vectorized using 32 byte vectors
/home/brobey/GlobalSums/globalsums.c:137:7: optimized: loop with 2 iterations completely unrolled (header execution count 64530389)
/home/brobey/GlobalSums/globalsums.c:137:7: optimized: loop with 5 iterations completely unrolled (header execution count 45491920)
/home/brobey/GlobalSums/globalsums.c:89:9: missed: statement clobbers memory: nt_116 = omp_get_max_threads ();
/home/brobey/GlobalSums/globalsums.c:90:10: missed: statement clobbers memory: tid_118 = omp_get_thread_num ();
/home/brobey/GlobalSums/globalsums.c:92:9: missed: statement clobbers memory: printf ("--- max num openmp threads: %d\n", nt_116);
/home/brobey/GlobalSums/globalsums.c:82:5: missed: statement clobbers memory: __builtin_GOMP_parallel (main._omp_fn.0, &.omp_data_o.12, 0, 0);
/home/brobey/GlobalSums/globalsums.c:82:5: missed: statement clobbers memory: __builtin_GOMP_parallel (main._omp_fn.0, &.omp_data_o.12, 0, 0);
/home/brobey/GlobalSums/globalsums.c:105:27: missed: statement clobbers memory: _2 = pow (2.0e+0, _1);
/home/brobey/GlobalSums/globalsums.c:108:37: missed: statement clobbers memory: _4 = log (_3);
/home/brobey/GlobalSums/globalsums.c:109:37: missed: statement clobbers memory: _8 = log (_3);
/home/brobey/GlobalSums/globalsums.c:110:40: missed: statement clobbers memory: _11 = log (_3);
/home/brobey/GlobalSums/globalsums.c:113:36: missed: statement clobbers memory: _15 = log (_3);
/home/brobey/GlobalSums/globalsums.c:114:36: missed: statement clobbers memory: _19 = log (_3);
/home/brobey/GlobalSums/globalsums.c:116:109: missed: statement clobbers memory: _22 = log2 (_3);
/home/brobey/GlobalSums/globalsums.c:116:7: missed: statement clobbers memory: printf ("SETTINGS INFO -- ncells %ld log %d ndigits %d ndigitsld %d nbits %d nbitsld %d\n", ncells_125, _23, ndigits_134, ndigitsld_136, nbits_128, nbitsld_130);
/home/brobey/GlobalSums/globalsums.c:133:34: missed: statement clobbers memory: energy_143 = malloc (_34);
/home/brobey/GlobalSums/globalsums.c:136:7: missed: statement clobbers memory: __builtin_puts (&"Initializing mesh with Leblanc problem, high values first"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:156:18: missed: statement clobbers memory: test_sum_146 = do_sum_novec (energy_143, ncells_125);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:160:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", accurate_sum_139, test_sum_146, _38, _39, result_633);
/home/brobey/GlobalSums/globalsums.c:162:7: missed: statement clobbers memory: __builtin_puts (&"   Serial sum"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:168:18: missed: statement clobbers memory: test_sum_152 = do_sum (energy_143, ncells_125);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:171:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", accurate_sum_139, test_sum_152, _40, _41, result_623);
/home/brobey/GlobalSums/globalsums.c:173:7: missed: statement clobbers memory: __builtin_puts (&"   Serial sum (OpenMP SIMD pragma)"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:179:18: missed: statement clobbers memory: test_sum_158 = do_sum_wdigittrunc (energy_143, ncells_125, ndigits_134);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:617:17: missed: statement clobbers memory: _588 = log10 (accurate_sum_139);
/home/brobey/GlobalSums/globalsums.c:620:21: missed: statement clobbers memory: mult_593 = pow (1.0e+1, _592);
/home/brobey/GlobalSums/globalsums.c:623:20: missed: statement clobbers memory: div_599 = pow (1.0e+1, _598);
/home/brobey/GlobalSums/globalsums.c:183:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", _603, test_sum_158, _42, _43, result_613);
/home/brobey/GlobalSums/globalsums.c:185:7: missed: statement clobbers memory: __builtin_puts (&"   Serial sum with digit truncation"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:191:18: missed: statement clobbers memory: test_sum_166 = do_sum_wbittrunc (energy_143, ncells_125, nbits_128);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:630:23: missed: not vectorized: more than one data ref in stmt: bitmask = *.LC0;
/home/brobey/GlobalSums/globalsums.c:196:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", var_352, test_sum_166, _44, _45, result_587);
/home/brobey/GlobalSums/globalsums.c:198:7: missed: statement clobbers memory: __builtin_puts (&"   Serial sum with bit truncation"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:204:20: missed: statement clobbers memory: test_ldsum_173 = do_ldsum (energy_143, ncells_125);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:207:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", _51, _50, _49, _48, result_577);
/home/brobey/GlobalSums/globalsums.c:209:7: missed: statement clobbers memory: __builtin_puts (&"   Serial sum with long double accumulator"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:215:20: missed: statement clobbers memory: test_ldsum_179 = do_ldsum_wdigittrunc (energy_143, ncells_125, ndigitsld_136);
/home/brobey/GlobalSums/globalsums.c:617:17: missed: statement clobbers memory: _552 = log10 (_51);
/home/brobey/GlobalSums/globalsums.c:620:21: missed: statement clobbers memory: mult_557 = pow (1.0e+1, _556);
/home/brobey/GlobalSums/globalsums.c:623:20: missed: statement clobbers memory: div_563 = pow (1.0e+1, _562);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:220:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", _567, _57, _56, _55, result_551);
/home/brobey/GlobalSums/globalsums.c:222:7: missed: statement clobbers memory: __builtin_puts (&"   Serial sum with long double accumulator with ndigit truncation"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:228:20: missed: statement clobbers memory: test_ldsum_187 = do_ldsum_wbittrunc (energy_143, ncells_125, nbitsld_130);
/home/brobey/GlobalSums/globalsums.c:630:23: missed: not vectorized: more than one data ref in stmt: bitmask = *.LC0;
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:233:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", var_346, _62, _61, _60, result_541);
/home/brobey/GlobalSums/globalsums.c:235:7: missed: statement clobbers memory: __builtin_puts (&"   Serial sum with long double accumulator with bit truncation"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:241:18: missed: statement clobbers memory: test_sum_195 = do_kahan_sum (energy_143, ncells_125);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:244:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", accurate_sum_139, test_sum_195, _63, _64, result_531);
/home/brobey/GlobalSums/globalsums.c:246:7: missed: statement clobbers memory: __builtin_puts (&"   Serial sum with double double kahan sum accumulator"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:253:18: missed: statement clobbers memory: test_sum_201 = do_kahan_sum_v (energy_143, ncells_125);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:256:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", accurate_sum_139, test_sum_201, _65, _66, result_521);
/home/brobey/GlobalSums/globalsums.c:258:7: missed: statement clobbers memory: __builtin_puts (&"   Intel Vectorized sum with double double kahan sum accumulator"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:266:18: missed: statement clobbers memory: test_sum_207 = do_kahan_sum_gcc_v (energy_143, ncells_125);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:269:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", accurate_sum_139, test_sum_207, _67, _68, result_511);
/home/brobey/GlobalSums/globalsums.c:271:7: missed: statement clobbers memory: __builtin_puts (&"   GCC Extensions Vectorized sum with double double kahan sum accumulator"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:279:18: missed: statement clobbers memory: test_sum_213 = do_kahan_sum_agner_v (energy_143, ncells_125);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:283:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", accurate_sum_139, test_sum_213, _69, _70, result_501);
/home/brobey/GlobalSums/globalsums.c:285:7: missed: statement clobbers memory: __builtin_puts (&"   Agner C++ vector class sum with double double kahan sum accumulator"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:309:18: missed: statement clobbers memory: test_sum_219 = do_kahan_sum_gcc_v8 (energy_143, ncells_125);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:313:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", accurate_sum_139, test_sum_219, _71, _72, result_491);
/home/brobey/GlobalSums/globalsums.c:315:7: missed: statement clobbers memory: __builtin_puts (&"   8 wide GCC vector extensions Kahan sum"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:323:18: missed: statement clobbers memory: test_sum_225 = do_kahan_sum_agner_v8 (energy_143, ncells_125);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:327:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", accurate_sum_139, test_sum_225, _73, _74, result_481);
/home/brobey/GlobalSums/globalsums.c:329:7: missed: statement clobbers memory: __builtin_puts (&"   8 wide Fog C++ vector class Kahan sum"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:336:18: missed: statement clobbers memory: test_sum_231 = do_knuth_sum (energy_143, ncells_125);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:339:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", accurate_sum_139, test_sum_231, _75, _76, result_471);
/home/brobey/GlobalSums/globalsums.c:341:7: missed: statement clobbers memory: __builtin_puts (&"   Serial sum with double double knuth sum accumulator"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:348:18: missed: statement clobbers memory: test_sum_237 = do_knuth_sum_v (energy_143, ncells_125);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:351:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", accurate_sum_139, test_sum_237, _77, _78, result_461);
/home/brobey/GlobalSums/globalsums.c:353:7: missed: statement clobbers memory: __builtin_puts (&"   Intel Vectorized sum with double double knuth sum accumulator"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:361:18: missed: statement clobbers memory: test_sum_243 = do_knuth_sum_gcc_v (energy_143, ncells_125);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:364:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", accurate_sum_139, test_sum_243, _79, _80, result_451);
/home/brobey/GlobalSums/globalsums.c:366:7: missed: statement clobbers memory: __builtin_puts (&"   GCC Extensions Vectorized sum with double double knuth sum accumulator"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:374:18: missed: statement clobbers memory: test_sum_249 = do_knuth_sum_agner_v (energy_143, ncells_125);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:377:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", accurate_sum_139, test_sum_249, _81, _82, result_441);
/home/brobey/GlobalSums/globalsums.c:379:7: missed: statement clobbers memory: __builtin_puts (&"   Agner C++ vector class sum with double double knuth sum accumulator"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:403:18: missed: statement clobbers memory: test_sum_255 = do_knuth_sum_gcc_v8 (energy_143, ncells_125);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:407:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", accurate_sum_139, test_sum_255, _83, _84, result_431);
/home/brobey/GlobalSums/globalsums.c:409:7: missed: statement clobbers memory: __builtin_puts (&"   8 wide GCC vector extensions Knuth sum"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:417:18: missed: statement clobbers memory: test_sum_261 = do_knuth_sum_agner_v8 (energy_143, ncells_125);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:421:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", accurate_sum_139, test_sum_261, _85, _86, result_421);
/home/brobey/GlobalSums/globalsums.c:423:7: missed: statement clobbers memory: __builtin_puts (&"   8 wide Fog C++ vector class Knuth sum"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:430:18: missed: statement clobbers memory: test_sum_267 = do_pair_sum (energy_143, ncells_125);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:433:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", accurate_sum_139, test_sum_267, _87, _88, result_411);
/home/brobey/GlobalSums/globalsums.c:435:7: missed: statement clobbers memory: __builtin_puts (&"   Pair-wise sum"[0]);
/home/brobey/GlobalSums/globalsums.c:439:7: missed: statement clobbers memory: __builtin_putchar (10);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:446:20: missed: statement clobbers memory: test_qdsum_274 = do_qdsum (energy_143, ncells_125);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:450:7: missed: statement clobbers memory: quadmath_snprintf (&quadstring1, 24, "%-25.24Qg", accurate_qdsum_141);
/home/brobey/GlobalSums/globalsums.c:451:7: missed: statement clobbers memory: quadmath_snprintf (&quadstring2, 24, "%-25.24Qg", test_qdsum_274);
/home/brobey/GlobalSums/globalsums.c:452:7: missed: statement clobbers memory: quadmath_snprintf (&quadstring3, 24, "%-20.14Qg", _89);
/home/brobey/GlobalSums/globalsums.c:453:7: missed: statement clobbers memory: quadmath_snprintf (&quadstring4, 24, "%-20.14Qg", _90);
/home/brobey/GlobalSums/globalsums.c:454:7: missed: statement clobbers memory: printf ("  accurate sum %-24s sum %-24s diff %-20s relative diff %-20s runtime %lf", &quadstring1, &quadstring2, &quadstring3, &quadstring4, result_401);
/home/brobey/GlobalSums/globalsums.c:456:7: missed: statement clobbers memory: __builtin_puts (&"   Serial sum with quad double accumulator"[0]);
/home/brobey/GlobalSums/globalsums.c:483:7: missed: statement clobbers memory: free (energy_143);
/home/brobey/GlobalSums/globalsums.c:486:43: missed: statement clobbers memory: energyq_285 = malloc (_91);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:496:20: missed: statement clobbers memory: test_qdsum_287 = do_full_qdsum (energyq_285, ncells_125);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:500:7: missed: statement clobbers memory: quadmath_snprintf (&quadstring1, 24, "%-25.24Qg", accurate_qdsum_141);
/home/brobey/GlobalSums/globalsums.c:501:7: missed: statement clobbers memory: quadmath_snprintf (&quadstring2, 24, "%-25.24Qg", test_qdsum_287);
/home/brobey/GlobalSums/globalsums.c:502:7: missed: statement clobbers memory: quadmath_snprintf (&quadstring3, 24, "%-20.14Qg", _95);
/home/brobey/GlobalSums/globalsums.c:503:7: missed: statement clobbers memory: quadmath_snprintf (&quadstring4, 24, "%-20.14Qg", _96);
/home/brobey/GlobalSums/globalsums.c:504:7: missed: statement clobbers memory: printf ("  accurate sum %-24s sum %-24s diff %-20s relative diff %-20s runtime %lf", &quadstring1, &quadstring2, &quadstring3, &quadstring4, result_683);
/home/brobey/GlobalSums/globalsums.c:506:7: missed: statement clobbers memory: __builtin_puts (&"   Serial sum with quad double accumulator and quad terms"[0]);
/home/brobey/GlobalSums/globalsums.c:532:7: missed: statement clobbers memory: free (energyq_285);
/home/brobey/GlobalSums/globalsums.c:535:7: missed: statement clobbers memory: __builtin_putchar (10);
/home/brobey/GlobalSums/globalsums.c:537:26: missed: statement clobbers memory: energy_299 = malloc (_34);
/home/brobey/GlobalSums/globalsums.c:82:5: missed: statement clobbers memory: __builtin_GOMP_parallel (main._omp_fn.1, &.omp_data_o.14, 0, 0);
/home/brobey/GlobalSums/globalsums.c:82:5: missed: statement clobbers memory: __builtin_GOMP_parallel (main._omp_fn.1, &.omp_data_o.14, 0, 0);
/home/brobey/GlobalSums/globalsums.c:540:9: optimized: basic block part vectorized using 16 byte vectors
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:549:18: missed: statement clobbers memory: test_sum_308 = do_sum_omp (energy_299, ncells_125);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:552:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", accurate_sum_139, test_sum_308, _97, _98, result_673);
/home/brobey/GlobalSums/globalsums.c:554:7: missed: statement clobbers memory: __builtin_puts (&"   OpenMP sum"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:560:18: missed: statement clobbers memory: test_sum_314 = do_sum_omp_wbittrunc (energy_299, ncells_125, nbitsomp_132);
/home/brobey/GlobalSums/globalsums.c:630:23: missed: not vectorized: more than one data ref in stmt: bitmask = *.LC0;
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:566:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", var_359, test_sum_314, _99, _100, result_663);
/home/brobey/GlobalSums/globalsums.c:568:7: missed: statement clobbers memory: __builtin_puts (&"   OpenMP sum with bit truncation"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:574:18: missed: statement clobbers memory: test_sum_321 = do_kahan_sum_omp (energy_299, ncells_125);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:577:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", accurate_sum_139, test_sum_321, _101, _102, result_653);
/home/brobey/GlobalSums/globalsums.c:579:7: missed: statement clobbers memory: __builtin_puts (&"   OpenMP sum with double double kahan sum accumulator"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:585:18: missed: statement clobbers memory: test_sum_327 = do_kahan_sum_omp_wbittrunc (energy_299, ncells_125, 2);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:590:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", var_354, test_sum_327, _103, _104, result_643);
/home/brobey/GlobalSums/globalsums.c:592:7: missed: statement clobbers memory: __builtin_puts (&"   OpenMP sum with double double kahan sum accumulator with bit truncation"[0]);
/home/brobey/GlobalSums/globalsums.c:595:7: missed: statement clobbers memory: free (energy_299);
/home/brobey/GlobalSums/globalsums.c:597:7: missed: statement clobbers memory: __builtin_putchar (10);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, tstart_cpu_2(D));
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:617:17: missed: statement clobbers memory: _1 = log10 (var_13(D));
/home/brobey/GlobalSums/globalsums.c:620:21: missed: statement clobbers memory: mult_22 = pow (1.0e+1, _3);
/home/brobey/GlobalSums/globalsums.c:623:20: missed: statement clobbers memory: div_19 = pow (1.0e+1, _7);
/home/brobey/GlobalSums/globalsums.c:630:23: missed: not vectorized: more than one data ref in stmt: bitmask = *.LC0;
[  6%] Building C object CMakeFiles/globalsums.dir/do_kahan_sum.c.o
/home/brobey/GlobalSums/do_kahan_sum.c:10:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_kahan_sum.c:13:59: missed: not vectorized: unsupported use in stmt.
[  9%] Building C object CMakeFiles/globalsums.dir/serial_sum_novec.c.o
[ 12%] Building C object CMakeFiles/globalsums.dir/do_kahan_sum_omp.c.o
/home/brobey/GlobalSums/do_kahan_sum_omp.c:10:31: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_kahan_sum_omp.c:10:9: missed: not vectorized: number of iterations cannot be computed.
/home/brobey/GlobalSums/do_kahan_sum_omp.c:19:10: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_kahan_sum_omp.c:21:62: missed: not vectorized: unsupported use in stmt.
/home/brobey/GlobalSums/do_kahan_sum_omp.c:10:9: missed: statement clobbers memory: _46 = __sync_val_compare_and_swap_8 (_39, _4, _44);
/home/brobey/GlobalSums/do_kahan_sum_omp.c:10:9: missed: statement clobbers memory: __builtin_GOMP_barrier ();
/home/brobey/GlobalSums/do_kahan_sum_omp.c:26:9: missed: statement clobbers memory: __builtin_GOMP_barrier ();
/home/brobey/GlobalSums/do_kahan_sum_omp.c:10:9: missed: statement clobbers memory: _41 = __atomic_load_8 (_39, 0);
/home/brobey/GlobalSums/do_kahan_sum_omp.c:10:9: missed: statement clobbers memory: _46 = __sync_val_compare_and_swap_8 (_39, _4, _44);
/home/brobey/GlobalSums/do_kahan_sum_omp.c:1:8: missed: statement clobbers memory: __builtin_GOMP_parallel (do_kahan_sum_omp._omp_fn.0, &.omp_data_o.3, 0, 0);
[ 15%] Building C object CMakeFiles/globalsums.dir/do_kahan_sum_omp_wbittrunc.c.o
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:23:10: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:25:62: missed: not vectorized: unsupported use in stmt.
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:14:9: missed: statement clobbers memory: __builtin_GOMP_barrier ();
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:37:9: missed: statement clobbers memory: __builtin_GOMP_barrier ();
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:14:9: missed: statement clobbers memory: __builtin_GOMP_atomic_start ();
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:14:9: missed: statement clobbers memory: __builtin_GOMP_atomic_end ();
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:14:9: missed: statement clobbers memory: __builtin_GOMP_atomic_end ();
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:14:9: optimized: basic block part vectorized using 16 byte vectors
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:4:8: missed: statement clobbers memory: __builtin_GOMP_parallel (do_kahan_sum_omp_wbittrunc._omp_fn.0, &.omp_data_o.3, 0, 0);
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:4:8: missed: statement clobbers memory: __builtin_GOMP_parallel (do_kahan_sum_omp_wbittrunc._omp_fn.0, &.omp_data_o.3, 0, 0);
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:14:9: optimized: basic block part vectorized using 16 byte vectors
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:46:10: missed: statement clobbers memory: sum_13 = bittruncate (sum_9, nbits_11(D));
[ 18%] Building C object CMakeFiles/globalsums.dir/do_knuth_sum.c.o
/home/brobey/GlobalSums/do_knuth_sum.c:13:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_knuth_sum.c:15:9: missed: not vectorized: unsupported use in stmt.
[ 21%] Building C object CMakeFiles/globalsums.dir/do_ldsum.c.o
/home/brobey/GlobalSums/do_ldsum.c:5:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_ldsum.c:1:13: missed: not vectorized: unsupported data-type long double
[ 25%] Building C object CMakeFiles/globalsums.dir/do_ldsum_wbittrunc.c.o
/home/brobey/GlobalSums/do_ldsum_wbittrunc.c:8:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_ldsum_wbittrunc.c:4:13: missed: not vectorized: unsupported data-type long double
/home/brobey/GlobalSums/do_ldsum_wbittrunc.c:12:12: missed: statement clobbers memory: _7 = bittruncate (prephitmp_37, nbits_13(D));
[ 28%] Building C object CMakeFiles/globalsums.dir/do_ldsum_wdigittrunc.c.o
/home/brobey/GlobalSums/do_ldsum_wdigittrunc.c:7:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_ldsum_wdigittrunc.c:3:13: missed: not vectorized: unsupported data-type long double
/home/brobey/GlobalSums/do_ldsum_wdigittrunc.c:11:12: missed: statement clobbers memory: _7 = digitround (prephitmp_37, ndigits_13(D));
[ 31%] Building C object CMakeFiles/globalsums.dir/do_pair_sum.c.o
/home/brobey/GlobalSums/do_pair_sum.c:14:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_pair_sum.c:14:4: missed: not vectorized: control flow in loop.
/home/brobey/GlobalSums/do_pair_sum.c:16:7: optimized: loop vectorized using 32 byte vectors
/home/brobey/GlobalSums/do_pair_sum.c:16:7: optimized:  loop versioned for vectorization because of possible aliasing
/home/brobey/GlobalSums/do_pair_sum.c:10:4: optimized: loop vectorized using 32 byte vectors
/home/brobey/GlobalSums/do_pair_sum.c:16:7: optimized: loop with 2 iterations completely unrolled (header execution count 49959011)
/home/brobey/GlobalSums/do_pair_sum.c:10:4: optimized: loop with 2 iterations completely unrolled (header execution count 7975666)
/home/brobey/GlobalSums/do_pair_sum.c:7:30: missed: statement clobbers memory: pwsum_37 = malloc (_3);
/home/brobey/GlobalSums/do_pair_sum.c:14:23: missed: statement clobbers memory: _26 = log2 (_86);
/home/brobey/GlobalSums/do_pair_sum.c:22:4: missed: statement clobbers memory: free (pwsum_37);
[ 34%] Building C object CMakeFiles/globalsums.dir/do_sum.c.o
/home/brobey/GlobalSums/do_sum.c:5:9: optimized: Loop 1 distributed: split to 0 loops and 1 library calls.
/home/brobey/GlobalSums/do_sum.c:5:9: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_sum.c:5:9: missed: Loop costings may not be worthwhile.
/home/brobey/GlobalSums/do_sum.c:7:7: optimized: loop vectorized using 32 byte vectors
/home/brobey/GlobalSums/do_sum.c:1:8: optimized: loop with 3 iterations completely unrolled (header execution count 105119324)
/home/brobey/GlobalSums/do_sum.c:1:8: optimized: loop with 2 iterations completely unrolled (header execution count 61322297)
/home/brobey/GlobalSums/do_sum.c:1:8: missed: statement clobbers memory: __builtin_memset (&D.2570, 0, _32);
[ 37%] Building C object CMakeFiles/globalsums.dir/do_sum_omp.c.o
/home/brobey/GlobalSums/do_sum_omp.c:5:35: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_sum_omp.c:5:9: missed: not vectorized: number of iterations cannot be computed.
/home/brobey/GlobalSums/do_sum_omp.c:7:7: optimized: loop vectorized using 16 byte vectors
/home/brobey/GlobalSums/do_sum_omp.c:5:9: missed: statement clobbers memory: _35 = __sync_val_compare_and_swap_8 (_28, _6, _33);
/home/brobey/GlobalSums/do_sum_omp.c:5:9: optimized: loop turned into non-loop; it never loops
/home/brobey/GlobalSums/do_sum_omp.c:5:9: missed: statement clobbers memory: _30 = __atomic_load_8 (_28, 0);
/home/brobey/GlobalSums/do_sum_omp.c:5:9: missed: statement clobbers memory: _35 = __sync_val_compare_and_swap_8 (_28, _6, _33);
/home/brobey/GlobalSums/do_sum_omp.c:1:8: missed: statement clobbers memory: __builtin_GOMP_parallel (do_sum_omp._omp_fn.0, &.omp_data_o.3, 0, 0);
[ 40%] Building C object CMakeFiles/globalsums.dir/do_sum_omp_wbittrunc.c.o
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:8:35: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:8:9: missed: not vectorized: number of iterations cannot be computed.
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:10:7: optimized: loop vectorized using 16 byte vectors
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:8:9: missed: statement clobbers memory: _35 = __sync_val_compare_and_swap_8 (_28, _6, _33);
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:8:9: optimized: loop turned into non-loop; it never loops
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:8:9: missed: statement clobbers memory: _30 = __atomic_load_8 (_28, 0);
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:8:9: missed: statement clobbers memory: _35 = __sync_val_compare_and_swap_8 (_28, _6, _33);
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:4:8: missed: statement clobbers memory: __builtin_GOMP_parallel (do_sum_omp_wbittrunc._omp_fn.0, &.omp_data_o.3, 0, 0);
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:13:10: missed: statement clobbers memory: sum_12 = bittruncate (sum_8, nbits_10(D));
[ 43%] Building C object CMakeFiles/globalsums.dir/do_sum_wbittrunc.c.o
/home/brobey/GlobalSums/do_sum_wbittrunc.c:8:4: optimized: loop vectorized using 16 byte vectors
/home/brobey/GlobalSums/do_sum_wbittrunc.c:8:4: optimized: loop turned into non-loop; it never loops
/home/brobey/GlobalSums/do_sum_wbittrunc.c:12:10: missed: statement clobbers memory: sum_12 = bittruncate (sum_18, nbits_10(D));
[ 46%] Building C object CMakeFiles/globalsums.dir/do_sum_wdigittrunc.c.o
/home/brobey/GlobalSums/do_sum_wdigittrunc.c:7:4: optimized: loop vectorized using 16 byte vectors
/home/brobey/GlobalSums/do_sum_wdigittrunc.c:7:4: optimized: loop turned into non-loop; it never loops
/home/brobey/GlobalSums/do_sum_wdigittrunc.c:11:10: missed: statement clobbers memory: sum_12 = digitround (sum_18, ndigits_10(D));
[ 50%] Building CXX object CMakeFiles/globalsums.dir/kahan_fog_vector.cpp.o
/home/brobey/GlobalSums/kahan_fog_vector.cpp:34:23: missed: couldn't vectorize loop
/home/brobey/GlobalSums/kahan_fog_vector.cpp:37:63: missed: not vectorized: unsupported use in stmt.
/home/brobey/GlobalSums/kahan_fog_vector.cpp:15:23: missed: couldn't vectorize loop
/projects/opt/centos7/gcc/9.1.0/lib/gcc/x86_64-pc-linux-gnu/9.1.0/include/avxintrin.h:885:24: missed: not vectorized: no vectype for stmt: _31 = MEM[(__m256d_u * {ref-all})_3];
 scalar_type: __m256d_u
/home/brobey/GlobalSums/kahan_fog_vector.cpp:34:23: optimized: loop with 3 iterations completely unrolled (header execution count 118111601)
[ 53%] Building CXX object CMakeFiles/globalsums.dir/kahan_fog_vector8.cpp.o
/home/brobey/GlobalSums/kahan_fog_vector8.cpp:34:23: missed: couldn't vectorize loop
/home/brobey/GlobalSums/kahan_fog_vector8.cpp:37:63: missed: not vectorized: unsupported use in stmt.
/home/brobey/GlobalSums/kahan_fog_vector8.cpp:14:23: missed: couldn't vectorize loop
/projects/opt/centos7/gcc/9.1.0/lib/gcc/x86_64-pc-linux-gnu/9.1.0/include/avxintrin.h:885:24: missed: not vectorized: no vectype for stmt: _41 = MEM[(__m256d_u * {ref-all})_3];
 scalar_type: __m256d_u
/home/brobey/GlobalSums/kahan_fog_vector8.cpp:34:23: optimized: loop with 7 iterations completely unrolled (header execution count 118111604)
[ 56%] Building CXX object CMakeFiles/globalsums.dir/knuth_fog_vector.cpp.o
/home/brobey/GlobalSums/knuth_fog_vector.cpp:34:23: missed: couldn't vectorize loop
/projects/opt/centos7/gcc/9.1.0/lib/gcc/x86_64-pc-linux-gnu/9.1.0/include/avxintrin.h:891:21: missed: not vectorized: no vectype for stmt: MEM[(__m256d_u * {ref-all})&x] = prephitmp_74;
 scalar_type: __m256d_u
/home/brobey/GlobalSums/knuth_fog_vector.cpp:15:23: missed: couldn't vectorize loop
/projects/opt/centos7/gcc/9.1.0/lib/gcc/x86_64-pc-linux-gnu/9.1.0/include/avxintrin.h:885:24: missed: not vectorized: no vectype for stmt: _36 = MEM[(__m256d_u * {ref-all})_3];
 scalar_type: __m256d_u
/home/brobey/GlobalSums/knuth_fog_vector.cpp:34:23: optimized: loop with 3 iterations completely unrolled (header execution count 118111601)
[ 59%] Building CXX object CMakeFiles/globalsums.dir/knuth_fog_vector8.cpp.o
/home/brobey/GlobalSums/knuth_fog_vector8.cpp:34:23: missed: couldn't vectorize loop
/projects/opt/centos7/gcc/9.1.0/lib/gcc/x86_64-pc-linux-gnu/9.1.0/include/avxintrin.h:891:21: missed: not vectorized: no vectype for stmt: MEM[(__m256d_u * {ref-all})&a] = prephitmp_115;
 scalar_type: __m256d_u
/home/brobey/GlobalSums/knuth_fog_vector8.cpp:15:23: missed: couldn't vectorize loop
/projects/opt/centos7/gcc/9.1.0/lib/gcc/x86_64-pc-linux-gnu/9.1.0/include/avxintrin.h:885:24: missed: not vectorized: no vectype for stmt: _48 = MEM[(__m256d_u * {ref-all})_3];
 scalar_type: __m256d_u
/home/brobey/GlobalSums/knuth_fog_vector8.cpp:34:23: optimized: loop with 7 iterations completely unrolled (header execution count 118111604)
[ 62%] Building C object CMakeFiles/globalsums.dir/kahan_intel_vector.c.o
/home/brobey/GlobalSums/kahan_intel_vector.c:37:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/kahan_intel_vector.c:40:63: missed: not vectorized: unsupported use in stmt.
/home/brobey/GlobalSums/kahan_intel_vector.c:18:4: missed: couldn't vectorize loop
/projects/opt/centos7/gcc/9.1.0/lib/gcc/x86_64-pc-linux-gnu/9.1.0/include/avxintrin.h:861:10: missed: not vectorized: no vectype for stmt: _34 = MEM[(__m256d * {ref-all})_3];
 scalar_type: __m256d
/home/brobey/GlobalSums/kahan_intel_vector.c:37:4: optimized: loop with 3 iterations completely unrolled (header execution count 118111601)
/projects/opt/centos7/gcc/9.1.0/lib/gcc/x86_64-pc-linux-gnu/9.1.0/include/avxintrin.h:728:20: missed: statement clobbers memory: _33 = __builtin_ia32_vbroadcastsd256 (&zero);
/projects/opt/centos7/gcc/9.1.0/lib/gcc/x86_64-pc-linux-gnu/9.1.0/include/avxintrin.h:728:20: missed: statement clobbers memory: _28 = __builtin_ia32_vbroadcastsd256 (&zero);
[ 65%] Building C object CMakeFiles/globalsums.dir/kahan_intel_vector8.c.o
[ 68%] Building C object CMakeFiles/globalsums.dir/knuth_intel_vector.c.o
/home/brobey/GlobalSums/knuth_intel_vector.c:35:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/knuth_intel_vector.c:38:12: missed: not vectorized: unsupported use in stmt.
/home/brobey/GlobalSums/knuth_intel_vector.c:17:4: missed: couldn't vectorize loop
/projects/opt/centos7/gcc/9.1.0/lib/gcc/x86_64-pc-linux-gnu/9.1.0/include/avxintrin.h:861:10: missed: not vectorized: no vectype for stmt: _40 = MEM[(__m256d * {ref-all})_3];
 scalar_type: __m256d
/home/brobey/GlobalSums/knuth_intel_vector.c:35:4: optimized: loop with 3 iterations completely unrolled (header execution count 118111601)
/projects/opt/centos7/gcc/9.1.0/lib/gcc/x86_64-pc-linux-gnu/9.1.0/include/avxintrin.h:728:20: missed: statement clobbers memory: _39 = __builtin_ia32_vbroadcastsd256 (&zero);
/projects/opt/centos7/gcc/9.1.0/lib/gcc/x86_64-pc-linux-gnu/9.1.0/include/avxintrin.h:728:20: missed: statement clobbers memory: _32 = __builtin_ia32_vbroadcastsd256 (&zero);
[ 71%] Building C object CMakeFiles/globalsums.dir/knuth_intel_vector8.c.o
[ 75%] Building C object CMakeFiles/globalsums.dir/kahan_gcc_vector.c.o
/home/brobey/GlobalSums/kahan_gcc_vector.c:30:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/kahan_gcc_vector.c:33:63: missed: not vectorized: unsupported use in stmt.
/home/brobey/GlobalSums/kahan_gcc_vector.c:11:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/kahan_gcc_vector.c:12:14: missed: not vectorized: no vectype for stmt: var_v_28 = MEM[(vec4d *)_3];
 scalar_type: vec4d
/home/brobey/GlobalSums/kahan_gcc_vector.c:30:4: optimized: loop with 3 iterations completely unrolled (header execution count 118111601)
[ 78%] Building C object CMakeFiles/globalsums.dir/kahan_gcc_vector8.c.o
/home/brobey/GlobalSums/kahan_gcc_vector8.c:29:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/kahan_gcc_vector8.c:32:63: missed: not vectorized: unsupported use in stmt.
/home/brobey/GlobalSums/kahan_gcc_vector8.c:10:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/kahan_gcc_vector8.c:11:14: missed: not vectorized: no vectype for stmt: var_v_28 = MEM[(vec8d *)_3];
 scalar_type: vec8d
/home/brobey/GlobalSums/kahan_gcc_vector8.c:29:4: optimized: loop with 7 iterations completely unrolled (header execution count 118111604)
[ 81%] Building C object CMakeFiles/globalsums.dir/knuth_gcc_vector.c.o
/home/brobey/GlobalSums/knuth_gcc_vector.c:30:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/knuth_gcc_vector.c:33:12: missed: not vectorized: unsupported use in stmt.
/home/brobey/GlobalSums/knuth_gcc_vector.c:11:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/knuth_gcc_vector.c:12:13: missed: not vectorized: no vectype for stmt: var_v_28 = MEM[(vec4d *)_3];
 scalar_type: vec4d
/home/brobey/GlobalSums/knuth_gcc_vector.c:30:4: optimized: loop with 3 iterations completely unrolled (header execution count 118111601)
[ 84%] Building C object CMakeFiles/globalsums.dir/knuth_gcc_vector8.c.o
/home/brobey/GlobalSums/knuth_gcc_vector8.c:30:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/knuth_gcc_vector8.c:33:12: missed: not vectorized: unsupported use in stmt.
/home/brobey/GlobalSums/knuth_gcc_vector8.c:11:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/knuth_gcc_vector8.c:12:13: missed: not vectorized: no vectype for stmt: var_v_28 = MEM[(vec8d *)_3];
 scalar_type: vec8d
/home/brobey/GlobalSums/knuth_gcc_vector8.c:30:4: optimized: loop with 7 iterations completely unrolled (header execution count 118111604)
[ 87%] Building C object CMakeFiles/globalsums.dir/do_full_qdsum.c.o
/home/brobey/GlobalSums/do_full_qdsum.c:7:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_full_qdsum.c:8:32: missed: not vectorized: no vectype for stmt: _4 = *_3;
 scalar_type: _Float128
[ 90%] Building C object CMakeFiles/globalsums.dir/do_full_qdsum_wtrunc.c.o
/home/brobey/GlobalSums/do_full_qdsum_wtrunc.c:8:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_full_qdsum_wtrunc.c:9:32: missed: not vectorized: no vectype for stmt: _4 = *_3;
 scalar_type: _Float128
/home/brobey/GlobalSums/do_full_qdsum_wtrunc.c:12:17: missed: statement clobbers memory: _6 = log10 (prephitmp_43);
/home/brobey/GlobalSums/do_full_qdsum_wtrunc.c:13:22: missed: statement clobbers memory: _9 = pow (1.0e+1, _8);
[ 93%] Building C object CMakeFiles/globalsums.dir/do_qdsum.c.o
/home/brobey/GlobalSums/do_qdsum.c:7:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_qdsum.c:3:12: missed: not vectorized: unsupported data-type _Float128
[ 96%] Building C object CMakeFiles/globalsums.dir/do_qdsum_wtrunc.c.o
/home/brobey/GlobalSums/do_qdsum_wtrunc.c:8:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_qdsum_wtrunc.c:4:12: missed: not vectorized: unsupported data-type _Float128
/home/brobey/GlobalSums/do_qdsum_wtrunc.c:12:17: missed: statement clobbers memory: _7 = log10 (prephitmp_47);
/home/brobey/GlobalSums/do_qdsum_wtrunc.c:13:22: missed: statement clobbers memory: _10 = pow (1.0e+1, _9);
[100%] Linking CXX executable globalsums
[100%] Built target globalsums
--- max num openmp threads: 128
--- num openmp threads in parallel region: 128
SETTINGS INFO -- ncells 16 log 4 ndigits 3 ndigitsld 0 nbits 8 nbitsld 2
Initializing mesh with Leblanc problem, high values first
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Serial sum
  accurate sum 0.8000000008      sum 0.8000000008000001 diff   1.11e-16 relative diff  1.388e-16 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000008   Serial sum with digit truncation
  accurate sum 0.8000000007999972 sum 0.8000000007999972 diff          0 relative diff          0 runtime 0.000000   Serial sum with bit truncation
  accurate sum 0.8000000008      sum 0.8000000008      diff -1.626e-19 relative diff -2.033e-19 runtime 0.000000   Serial sum with long double accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000001   Serial sum with long double accumulator with ndigit truncation
  accurate sum 0.8000000007999999 sum 0.8000000007999999 diff          0 relative diff          0 runtime 0.000002   Serial sum with long double accumulator with bit truncation
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double kahan sum accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 0.8000000008      sum 0.8000000007999999 diff  -1.11e-16 relative diff -1.388e-16 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 0.8000000008      sum 0.8000000007999999 diff  -1.11e-16 relative diff -1.388e-16 runtime 0.000000   8 wide Fog C++ vector class Kahan sum
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double knuth sum accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   8 wide GCC vector extensions Knuth sum
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   8 wide Fog C++ vector class Knuth sum
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000002   Pair-wise sum

  accurate sum 0.8000000008             sum 0.800000000800000044408  diff 4.4408921014152e-17  relative diff 5.5511151212179e-17  runtime 0.000003   Serial sum with quad double accumulator
  accurate sum 0.8000000008             sum 0.8000000008             diff -2.8888949165809e-34 relative diff -3.6111186421149e-34 runtime 0.000001   Serial sum with quad double accumulator and quad terms

  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.001764   OpenMP sum
  accurate sum 0.8000000007999972 sum 0.8000000007999972 diff          0 relative diff          0 runtime 0.001657   OpenMP sum with bit truncation
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.004364   OpenMP sum with double double kahan sum accumulator
  accurate sum 0.8000000007999999 sum 0.8000000007999999 diff          0 relative diff          0 runtime 0.003913   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 32 log 5 ndigits 4 ndigitsld 1 nbits 9 nbitsld 3
Initializing mesh with Leblanc problem, high values first
  accurate sum 1.6000000016      sum 1.6000000016      diff  4.441e-16 relative diff  2.776e-16 runtime 0.000000   Serial sum
  accurate sum 1.6000000016      sum 1.6000000016      diff   2.22e-16 relative diff  1.388e-16 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000001   Serial sum with digit truncation
  accurate sum 1.600000001599938 sum 1.600000001599938 diff          0 relative diff          0 runtime 0.000000   Serial sum with bit truncation
  accurate sum 1.6000000016      sum 1.6000000016      diff  5.421e-19 relative diff  3.388e-19 runtime 0.000000   Serial sum with long double accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000001   Serial sum with long double accumulator with ndigit truncation
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Serial sum with long double accumulator with bit truncation
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double kahan sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff  -2.22e-16 relative diff -1.388e-16 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 1.6000000016      sum 1.6000000016      diff  -2.22e-16 relative diff -1.388e-16 runtime 0.000000   8 wide Fog C++ vector class Kahan sum
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double knuth sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   8 wide GCC vector extensions Knuth sum
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   8 wide Fog C++ vector class Knuth sum
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000001   Pair-wise sum

  accurate sum 1.6000000016             sum 1.600000001600000088817  diff 8.8817842028304e-17  relative diff 5.5511151212179e-17  runtime 0.000002   Serial sum with quad double accumulator
  accurate sum 1.6000000016             sum 1.6000000016             diff 1.3481509610711e-33  relative diff 8.4259434982682e-34  runtime 0.000001   Serial sum with quad double accumulator and quad terms

  accurate sum 1.6000000016      sum 1.600000001600001 diff  6.661e-16 relative diff  4.163e-16 runtime 0.001685   OpenMP sum
  accurate sum 1.600000001599994 sum 1.600000001599994 diff          0 relative diff          0 runtime 0.001676   OpenMP sum with bit truncation
  accurate sum 1.6000000016      sum 1.600000001600001 diff  6.661e-16 relative diff  4.163e-16 runtime 0.003703   OpenMP sum with double double kahan sum accumulator
  accurate sum 1.6000000016      sum 1.600000001600001 diff  8.882e-16 relative diff  5.551e-16 runtime 0.003863   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 64 log 6 ndigits 4 ndigitsld 1 nbits 9 nbitsld 3
Initializing mesh with Leblanc problem, high values first
  accurate sum 3.2000000032      sum 3.200000003200002 diff  1.776e-15 relative diff  5.551e-16 runtime 0.000000   Serial sum
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Serial sum with digit truncation
  accurate sum 3.200000003199875 sum 3.200000003199875 diff          0 relative diff          0 runtime 0.000000   Serial sum with bit truncation
  accurate sum 3.2000000032      sum 3.2000000032      diff  1.084e-18 relative diff  3.388e-19 runtime 0.000000   Serial sum with long double accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000001   Serial sum with long double accumulator with ndigit truncation
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Serial sum with long double accumulator with bit truncation
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double kahan sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff -4.441e-16 relative diff -1.388e-16 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 3.2000000032      sum 3.2000000032      diff -4.441e-16 relative diff -1.388e-16 runtime 0.000000   8 wide Fog C++ vector class Kahan sum
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double knuth sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   8 wide GCC vector extensions Knuth sum
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   8 wide Fog C++ vector class Knuth sum
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000004   Pair-wise sum

  accurate sum 3.2000000032             sum 3.200000003200000177635  diff 1.7763568405661e-16  relative diff 5.5511151212179e-17  runtime 0.000003   Serial sum with quad double accumulator
  accurate sum 3.2000000032             sum 3.2000000032             diff 3.466673899897e-33   relative diff 1.0833355926345e-33  runtime 0.000002   Serial sum with quad double accumulator and quad terms

  accurate sum 3.2000000032      sum 3.200000003200002 diff   2.22e-15 relative diff  6.939e-16 runtime 0.001856   OpenMP sum
  accurate sum 3.200000003199989 sum 3.200000003199989 diff          0 relative diff          0 runtime 0.001871   OpenMP sum with bit truncation
  accurate sum 3.2000000032      sum 3.200000003200002 diff   2.22e-15 relative diff  6.939e-16 runtime 0.003757   OpenMP sum with double double kahan sum accumulator
  accurate sum 3.2000000032      sum 3.200000003200001 diff  1.776e-15 relative diff  5.551e-16 runtime 0.003794   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 128 log 7 ndigits 4 ndigitsld 1 nbits 11 nbitsld 4
Initializing mesh with Leblanc problem, high values first
  accurate sum 6.4000000064      sum 6.400000006399994 diff -6.217e-15 relative diff -9.714e-16 runtime 0.000000   Serial sum
  accurate sum 6.4000000064      sum 6.400000006400002 diff  1.776e-15 relative diff  2.776e-16 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000001   Serial sum with digit truncation
  accurate sum 6.400000006398841 sum 6.400000006398841 diff          0 relative diff          0 runtime 0.000000   Serial sum with bit truncation
  accurate sum 6.4000000064      sum 6.4000000064      diff  2.168e-18 relative diff  3.388e-19 runtime 0.000000   Serial sum with long double accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000001   Serial sum with long double accumulator with ndigit truncation
  accurate sum 6.400000006399992 sum 6.400000006399992 diff          0 relative diff          0 runtime 0.000000   Serial sum with long double accumulator with bit truncation
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double kahan sum accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 6.4000000064      sum 6.400000006399999 diff -8.882e-16 relative diff -1.388e-16 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 6.4000000064      sum 6.400000006399999 diff -8.882e-16 relative diff -1.388e-16 runtime 0.000000   8 wide Fog C++ vector class Kahan sum
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000001   Serial sum with double double knuth sum accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   8 wide GCC vector extensions Knuth sum
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   8 wide Fog C++ vector class Knuth sum
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000001   Pair-wise sum

  accurate sum 6.4000000064             sum 6.400000006400000355271  diff 3.5527136811322e-16  relative diff 5.5511151212179e-17  runtime 0.000005   Serial sum with quad double accumulator
  accurate sum 6.4000000064             sum 6.4000000064             diff -2.6192647243666e-32 relative diff -4.0926011277303e-33 runtime 0.000003   Serial sum with quad double accumulator and quad terms

  accurate sum 6.4000000064      sum 6.400000006399994 diff -6.217e-15 relative diff -9.714e-16 runtime 0.001926   OpenMP sum
  accurate sum 6.400000006399978 sum 6.400000006399978 diff          0 relative diff          0 runtime 0.001961   OpenMP sum with bit truncation
  accurate sum 6.4000000064      sum 6.400000006399995 diff -5.329e-15 relative diff -8.327e-16 runtime 0.003902   OpenMP sum with double double kahan sum accumulator
  accurate sum 6.400000006399999 sum 6.400000006399992 diff -7.105e-15 relative diff  -1.11e-15 runtime 0.003853   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 256 log 8 ndigits 4 ndigitsld 1 nbits 12 nbitsld 4
Initializing mesh with Leblanc problem, high values first
  accurate sum 12.8000000128     sum 12.80000001279997 diff -2.842e-14 relative diff  -2.22e-15 runtime 0.000000   Serial sum
  accurate sum 12.8000000128     sum 12.80000001280001 diff  7.105e-15 relative diff  5.551e-16 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000001   Serial sum with digit truncation
  accurate sum 12.80000001279404 sum 12.80000001279404 diff          0 relative diff          0 runtime 0.000000   Serial sum with bit truncation
  accurate sum 12.8000000128     sum 12.8000000128     diff -5.117e-17 relative diff -3.998e-18 runtime 0.000001   Serial sum with long double accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000001   Serial sum with long double accumulator with ndigit truncation
  accurate sum 12.80000001279998 sum 12.80000001279998 diff          0 relative diff          0 runtime 0.000001   Serial sum with long double accumulator with bit truncation
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000001   Serial sum with double double kahan sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000000   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000000   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff -1.776e-15 relative diff -1.388e-16 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 12.8000000128     sum 12.8000000128     diff -1.776e-15 relative diff -1.388e-16 runtime 0.000000   8 wide Fog C++ vector class Kahan sum
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000005   Serial sum with double double knuth sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000001   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000001   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000001   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000001   8 wide GCC vector extensions Knuth sum
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000000   8 wide Fog C++ vector class Knuth sum
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000001   Pair-wise sum

  accurate sum 12.8000000128            sum 12.80000001280000071054  diff 7.1054273622643e-16  relative diff 5.5511151212179e-17  runtime 0.000009   Serial sum with quad double accumulator
  accurate sum 12.8000000128            sum 12.8000000128            diff -6.6251990086921e-32 relative diff -5.1759367203648e-33 runtime 0.000006   Serial sum with quad double accumulator and quad terms

  accurate sum 12.8000000128     sum 12.80000001279999 diff -1.066e-14 relative diff -8.327e-16 runtime 0.001919   OpenMP sum
  accurate sum 12.8000000127995  sum 12.8000000127995  diff          0 relative diff          0 runtime 0.001913   OpenMP sum with bit truncation
  accurate sum 12.8000000128     sum 12.80000001279999 diff -1.066e-14 relative diff -8.327e-16 runtime 0.003592   OpenMP sum with double double kahan sum accumulator
  accurate sum 12.8000000128     sum 12.80000001279998 diff -1.421e-14 relative diff  -1.11e-15 runtime 0.003502   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 512 log 9 ndigits 4 ndigitsld 1 nbits 13 nbitsld 5
Initializing mesh with Leblanc problem, high values first
  accurate sum 25.6000000256     sum 25.60000002559964 diff -3.588e-13 relative diff -1.402e-14 runtime 0.000001   Serial sum
  accurate sum 25.6000000256     sum 25.60000002559998 diff -2.487e-14 relative diff -9.714e-16 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000001   Serial sum with digit truncation
  accurate sum 25.60000002558809 sum 25.60000002558809 diff          0 relative diff          0 runtime 0.000001   Serial sum with bit truncation
  accurate sum 25.6000000256     sum 25.6000000256     diff -1.023e-16 relative diff -3.998e-18 runtime 0.000001   Serial sum with long double accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000001   Serial sum with long double accumulator with ndigit truncation
  accurate sum 25.60000002559991 sum 25.60000002559991 diff          0 relative diff          0 runtime 0.000001   Serial sum with long double accumulator with bit truncation
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000002   Serial sum with double double kahan sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000001   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000001   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000001   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff -3.553e-15 relative diff -1.388e-16 runtime 0.000001   8 wide GCC vector extensions Kahan sum
  accurate sum 25.6000000256     sum 25.6000000256     diff -3.553e-15 relative diff -1.388e-16 runtime 0.000000   8 wide Fog C++ vector class Kahan sum
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000004   Serial sum with double double knuth sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000001   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000001   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000001   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000001   8 wide GCC vector extensions Knuth sum
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000001   8 wide Fog C++ vector class Knuth sum
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000001   Pair-wise sum

  accurate sum 25.6000000256            sum 25.60000002560000142108  diff 1.4210854724529e-15  relative diff 5.5511151212179e-17  runtime 0.000021   Serial sum with quad double accumulator
  accurate sum 25.6000000256            sum 25.6000000256            diff 3.9443045261051e-31  relative diff 1.540743953969e-32   runtime 0.000015   Serial sum with quad double accumulator and quad terms

  accurate sum 25.6000000256     sum 25.60000002559998 diff -2.487e-14 relative diff -9.714e-16 runtime 0.000946   OpenMP sum
  accurate sum 25.600000025599   sum 25.600000025599   diff          0 relative diff          0 runtime 0.002675   OpenMP sum with bit truncation
  accurate sum 25.6000000256     sum 25.60000002559998 diff -2.132e-14 relative diff -8.327e-16 runtime 0.003511   OpenMP sum with double double kahan sum accumulator
  accurate sum 25.6000000256     sum 25.60000002559997 diff -2.842e-14 relative diff  -1.11e-15 runtime 0.003579   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 1024 log 10 ndigits 5 ndigitsld 2 nbits 14 nbitsld 6
Initializing mesh with Leblanc problem, high values first
  accurate sum 51.2000000512     sum 51.20000005120137 diff  1.371e-12 relative diff  2.678e-14 runtime 0.000001   Serial sum
  accurate sum 51.2000000512     sum 51.20000005119989 diff -1.137e-13 relative diff  -2.22e-15 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 51.200000051      sum 51.200000051      diff          0 relative diff          0 runtime 0.000002   Serial sum with digit truncation
  accurate sum 51.20000005117618 sum 51.20000005117618 diff          0 relative diff          0 runtime 0.000002   Serial sum with bit truncation
  accurate sum 51.2000000512     sum 51.20000005120001 diff  6.835e-16 relative diff  1.335e-17 runtime 0.000002   Serial sum with long double accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000002   Serial sum with long double accumulator with ndigit truncation
  accurate sum 51.20000005119982 sum 51.20000005119982 diff          0 relative diff          0 runtime 0.000002   Serial sum with long double accumulator with bit truncation
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000004   Serial sum with double double kahan sum accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000001   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000001   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000001   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 51.2000000512     sum 51.20000005119999 diff -7.105e-15 relative diff -1.388e-16 runtime 0.000001   8 wide GCC vector extensions Kahan sum
  accurate sum 51.2000000512     sum 51.20000005119999 diff -7.105e-15 relative diff -1.388e-16 runtime 0.000001   8 wide Fog C++ vector class Kahan sum
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000007   Serial sum with double double knuth sum accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000002   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000002   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000002   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000002   8 wide GCC vector extensions Knuth sum
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000001   8 wide Fog C++ vector class Knuth sum
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000004   Pair-wise sum

  accurate sum 51.2000000512            sum 51.20000005120000284217  diff 2.8421709449057e-15  relative diff 5.5511151212179e-17  runtime 0.000037   Serial sum with quad double accumulator
  accurate sum 51.2000000512            sum 51.2000000512            diff 1.0230539864585e-30  relative diff 1.9981523153036e-32  runtime 0.000035   Serial sum with quad double accumulator and quad terms

  accurate sum 51.2000000512     sum 51.20000005119996 diff -4.263e-14 relative diff -8.327e-16 runtime 0.001968   OpenMP sum
  accurate sum 51.20000005119073 sum 51.20000005119073 diff          0 relative diff          0 runtime 0.001856   OpenMP sum with bit truncation
  accurate sum 51.2000000512     sum 51.20000005119995 diff -4.974e-14 relative diff -9.714e-16 runtime 0.003325   OpenMP sum with double double kahan sum accumulator
  accurate sum 51.20000005119999 sum 51.20000005119994 diff -5.684e-14 relative diff  -1.11e-15 runtime 0.004038   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 2048 log 11 ndigits 5 ndigitsld 2 nbits 15 nbitsld 6
Initializing mesh with Leblanc problem, high values first
  accurate sum 102.4000001024    sum 102.4000001024003 diff  2.842e-13 relative diff  2.776e-15 runtime 0.000002   Serial sum
  accurate sum 102.4000001024    sum 102.4000001023986 diff -1.435e-12 relative diff -1.402e-14 runtime 0.000001   Serial sum (OpenMP SIMD pragma)
  accurate sum 102.4000001       sum 102.4000001       diff          0 relative diff          0 runtime 0.000003   Serial sum with digit truncation
  accurate sum 102.4000001023524 sum 102.4000001023524 diff          0 relative diff          0 runtime 0.000002   Serial sum with bit truncation
  accurate sum 102.4000001024    sum 102.4000001024    diff  1.367e-15 relative diff  1.335e-17 runtime 0.000004   Serial sum with long double accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000004   Serial sum with long double accumulator with ndigit truncation
  accurate sum 102.4000001023996 sum 102.4000001023996 diff          0 relative diff          0 runtime 0.000004   Serial sum with long double accumulator with bit truncation
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000007   Serial sum with double double kahan sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000002   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000002   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000002   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff -1.421e-14 relative diff -1.388e-16 runtime 0.000004   8 wide GCC vector extensions Kahan sum
  accurate sum 102.4000001024    sum 102.4000001024    diff -1.421e-14 relative diff -1.388e-16 runtime 0.000001   8 wide Fog C++ vector class Kahan sum
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000014   Serial sum with double double knuth sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000004   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000004   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000004   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000005   8 wide GCC vector extensions Knuth sum
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000002   8 wide Fog C++ vector class Knuth sum
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000009   Pair-wise sum

  accurate sum 102.4000001024           sum 102.4000001024000056843  diff 5.6843418898115e-15  relative diff 5.5511151212179e-17  runtime 0.000097   Serial sum with quad double accumulator
  accurate sum 102.4000001024           sum 102.4000001024           diff -8.6281661508548e-32 relative diff -8.4259434982682e-34 runtime 0.000070   Serial sum with quad double accumulator and quad terms

  accurate sum 102.4000001024    sum 102.4000001023999 diff -8.527e-14 relative diff -8.327e-16 runtime 0.002199   OpenMP sum
  accurate sum 102.4000001023524 sum 102.4000001023524 diff          0 relative diff          0 runtime 0.002183   OpenMP sum with bit truncation
  accurate sum 102.4000001024    sum 102.4000001023999 diff -8.527e-14 relative diff -8.327e-16 runtime 0.004061   OpenMP sum with double double kahan sum accumulator
  accurate sum 102.4000001024    sum 102.4000001023999 diff -1.137e-13 relative diff  -1.11e-15 runtime 0.004856   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 4096 log 12 ndigits 5 ndigitsld 2 nbits 15 nbitsld 7
Initializing mesh with Leblanc problem, high values first
  accurate sum 204.8000002048    sum 204.8000002047672 diff  -3.28e-11 relative diff -1.601e-13 runtime 0.000005   Serial sum
  accurate sum 204.8000002048    sum 204.8000002048055 diff  5.485e-12 relative diff  2.678e-14 runtime 0.000001   Serial sum (OpenMP SIMD pragma)
  accurate sum 204.8000002       sum 204.8000002       diff          0 relative diff          0 runtime 0.000006   Serial sum with digit truncation
  accurate sum 204.8000002047047 sum 204.8000002047047 diff          0 relative diff          0 runtime 0.000005   Serial sum with bit truncation
  accurate sum 204.8000002048    sum 204.8000002048    diff -1.148e-14 relative diff -5.604e-17 runtime 0.000008   Serial sum with long double accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000009   Serial sum with long double accumulator with ndigit truncation
  accurate sum 204.8000002047993 sum 204.8000002047993 diff          0 relative diff          0 runtime 0.000008   Serial sum with long double accumulator with bit truncation
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000015   Serial sum with double double kahan sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000005   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000004   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000004   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff -2.842e-14 relative diff -1.388e-16 runtime 0.000019   8 wide GCC vector extensions Kahan sum
  accurate sum 204.8000002048    sum 204.8000002048    diff -2.842e-14 relative diff -1.388e-16 runtime 0.000002   8 wide Fog C++ vector class Kahan sum
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000029   Serial sum with double double knuth sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000007   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000008   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000007   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000008   8 wide GCC vector extensions Knuth sum
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000005   8 wide Fog C++ vector class Knuth sum
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000023   Pair-wise sum

  accurate sum 204.8000002048           sum 204.8000002048000113686  diff 1.1368683779623e-14  relative diff 5.5511151212179e-17  runtime 0.000172   Serial sum with quad double accumulator
  accurate sum 204.8000002048           sum 204.8000002048           diff -2.9113897783313e-29 relative diff -1.4215770387793e-31 runtime 0.000118   Serial sum with quad double accumulator and quad terms

  accurate sum 204.8000002048    sum 204.8000002047998 diff -1.705e-13 relative diff -8.327e-16 runtime 0.002029   OpenMP sum
  accurate sum 204.8000002047047 sum 204.8000002047047 diff          0 relative diff          0 runtime 0.001866   OpenMP sum with bit truncation
  accurate sum 204.8000002048    sum 204.8000002047998 diff -1.705e-13 relative diff -8.327e-16 runtime 0.003751   OpenMP sum with double double kahan sum accumulator
  accurate sum 204.8000002048    sum 204.8000002047997 diff -2.274e-13 relative diff  -1.11e-15 runtime 0.003756   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 8192 log 13 ndigits 5 ndigitsld 2 nbits 17 nbitsld 7
Initializing mesh with Leblanc problem, high values first
  accurate sum 409.6000004096    sum 409.6000004095737 diff -2.626e-11 relative diff -6.412e-14 runtime 0.000010   Serial sum
  accurate sum 409.6000004096    sum 409.6000004096011 diff  1.137e-12 relative diff  2.776e-15 runtime 0.000003   Serial sum (OpenMP SIMD pragma)
  accurate sum 409.60000041      sum 409.60000041      diff          0 relative diff          0 runtime 0.000012   Serial sum with digit truncation
  accurate sum 409.6000004038215 sum 409.6000004038215 diff          0 relative diff          0 runtime 0.000010   Serial sum with bit truncation
  accurate sum 409.6000004096    sum 409.6000004096001 diff  3.389e-14 relative diff  8.274e-17 runtime 0.000018   Serial sum with long double accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000020   Serial sum with long double accumulator with ndigit truncation
  accurate sum 409.6000004095986 sum 409.6000004095986 diff          0 relative diff          0 runtime 0.000020   Serial sum with long double accumulator with bit truncation
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000031   Serial sum with double double kahan sum accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000008   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000008   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000007   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 409.6000004096    sum 409.6000004095999 diff -5.684e-14 relative diff -1.388e-16 runtime 0.000017   8 wide GCC vector extensions Kahan sum
  accurate sum 409.6000004096    sum 409.6000004095999 diff -5.684e-14 relative diff -1.388e-16 runtime 0.000004   8 wide Fog C++ vector class Kahan sum
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000063   Serial sum with double double knuth sum accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000018   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000015   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000017   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000015   8 wide GCC vector extensions Knuth sum
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000009   8 wide Fog C++ vector class Knuth sum
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000041   Pair-wise sum

  accurate sum 409.6000004096           sum 409.6000004096000227373  diff 2.2737367559246e-14  relative diff 5.5511151212179e-17  runtime 0.000356   Serial sum with quad double accumulator
  accurate sum 409.6000004096           sum 409.6000004096           diff 7.6864634452472e-29  relative diff 1.8765779876857e-31  runtime 0.000241   Serial sum with quad double accumulator and quad terms

  accurate sum 409.6000004096    sum 409.6000004095994 diff -5.684e-13 relative diff -1.388e-15 runtime 0.001930   OpenMP sum
  accurate sum 409.6000004094094 sum 409.6000004094094 diff          0 relative diff          0 runtime 0.001983   OpenMP sum with bit truncation
  accurate sum 409.6000004096    sum 409.6000004095997 diff -3.411e-13 relative diff -8.327e-16 runtime 0.003965   OpenMP sum with double double kahan sum accumulator
  accurate sum 409.6000004095999 sum 409.6000004095995 diff -4.547e-13 relative diff  -1.11e-15 runtime 0.003812   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 16384 log 14 ndigits 5 ndigitsld 2 nbits 18 nbitsld 8
Initializing mesh with Leblanc problem, high values first
  accurate sum 819.2000008192    sum 819.2000008196816 diff  4.816e-10 relative diff  5.879e-13 runtime 0.000020   Serial sum
  accurate sum 819.2000008192    sum 819.2000008190688 diff -1.312e-10 relative diff -1.601e-13 runtime 0.000005   Serial sum (OpenMP SIMD pragma)
  accurate sum 819.20000082      sum 819.20000082      diff          0 relative diff          0 runtime 0.000021   Serial sum with digit truncation
  accurate sum 819.2000007927418 sum 819.2000007927418 diff          0 relative diff          0 runtime 0.000036   Serial sum with bit truncation
  accurate sum 819.2000008192    sum 819.2000008192    diff -1.749e-14 relative diff -2.135e-17 runtime 0.000034   Serial sum with long double accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000038   Serial sum with long double accumulator with ndigit truncation
  accurate sum 819.2000008191972 sum 819.2000008191972 diff          0 relative diff          0 runtime 0.000038   Serial sum with long double accumulator with bit truncation
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000063   Serial sum with double double kahan sum accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000019   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000016   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000017   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 819.2000008192    sum 819.2000008191999 diff -1.137e-13 relative diff -1.388e-16 runtime 0.000030   8 wide GCC vector extensions Kahan sum
  accurate sum 819.2000008192    sum 819.2000008191999 diff -1.137e-13 relative diff -1.388e-16 runtime 0.000008   8 wide Fog C++ vector class Kahan sum
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000131   Serial sum with double double knuth sum accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000031   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000031   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000031   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000033   8 wide GCC vector extensions Knuth sum
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000016   8 wide Fog C++ vector class Knuth sum
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000056   Pair-wise sum

  accurate sum 819.2000008192           sum 819.2000008192000454747  diff 4.5474735118492e-14  relative diff 5.5511151212179e-17  runtime 0.000668   Serial sum with quad double accumulator
  accurate sum 819.2000008192           sum 819.2000008192           diff -1.9080573145033e-28 relative diff -2.3291715241641e-31 runtime 0.000435   Serial sum with quad double accumulator and quad terms

  accurate sum 819.2000008192    sum 819.2000008191976 diff -2.387e-12 relative diff -2.914e-15 runtime 0.001843   OpenMP sum
  accurate sum 819.2000008188188 sum 819.2000008188188 diff          0 relative diff          0 runtime 0.001940   OpenMP sum with bit truncation
  accurate sum 819.2000008192    sum 819.2000008191993 diff -6.821e-13 relative diff -8.327e-16 runtime 0.003973   OpenMP sum with double double kahan sum accumulator
  accurate sum 819.2000008191999 sum 819.200000819199  diff -9.095e-13 relative diff  -1.11e-15 runtime 0.003904   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 32768 log 15 ndigits 6 ndigitsld 3 nbits 19 nbitsld 9
Initializing mesh with Leblanc problem, high values first
  accurate sum 1638.4000016384   sum 1638.400001638733 diff  3.331e-10 relative diff  2.033e-13 runtime 0.000040   Serial sum
  accurate sum 1638.4000016384   sum 1638.400001638295 diff  -1.05e-10 relative diff -6.412e-14 runtime 0.000010   Serial sum (OpenMP SIMD pragma)
  accurate sum 1638.400002       sum 1638.400002       diff          0 relative diff          0 runtime 0.000056   Serial sum with digit truncation
  accurate sum 1638.400001525879 sum 1638.400001525879 diff          0 relative diff          0 runtime 0.000040   Serial sum with bit truncation
  accurate sum 1638.4000016384   sum 1638.4000016384   diff -1.771e-13 relative diff -1.081e-16 runtime 0.000068   Serial sum with long double accumulator
  accurate sum 1638.400001638    sum 1638.400001638    diff          0 relative diff          0 runtime 0.000068   Serial sum with long double accumulator with ndigit truncation
  accurate sum 1638.400001638336 sum 1638.400001638336 diff          0 relative diff          0 runtime 0.000071   Serial sum with long double accumulator with bit truncation
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000127   Serial sum with double double kahan sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000033   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000033   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000031   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff -2.274e-13 relative diff -1.388e-16 runtime 0.000044   8 wide GCC vector extensions Kahan sum
  accurate sum 1638.4000016384   sum 1638.4000016384   diff -2.274e-13 relative diff -1.388e-16 runtime 0.000018   8 wide Fog C++ vector class Kahan sum
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000255   Serial sum with double double knuth sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000063   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000072   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000061   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000059   8 wide GCC vector extensions Knuth sum
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000037   8 wide Fog C++ vector class Knuth sum
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000059   Pair-wise sum

  accurate sum 1638.4000016384          sum 1638.400001638400090949  diff 9.0949470236983e-14  relative diff 5.5511151212179e-17  runtime 0.001204   Serial sum with quad double accumulator
  accurate sum 1638.4000016384          sum 1638.4000016384          diff 6.8749227890011e-28  relative diff 4.1961198621376e-31  runtime 0.000839   Serial sum with quad double accumulator and quad terms

  accurate sum 1638.4000016384   sum 1638.400001638408 diff  7.731e-12 relative diff  4.718e-15 runtime 0.002110   OpenMP sum
  accurate sum 1638.400001630187 sum 1638.400001630187 diff          0 relative diff          0 runtime 0.002029   OpenMP sum with bit truncation
  accurate sum 1638.4000016384   sum 1638.400001638399 diff -1.364e-12 relative diff -8.327e-16 runtime 0.004139   OpenMP sum with double double kahan sum accumulator
  accurate sum 1638.4000016384   sum 1638.400001638398 diff -1.819e-12 relative diff  -1.11e-15 runtime 0.004126   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 65536 log 16 ndigits 6 ndigitsld 3 nbits 20 nbitsld 9
Initializing mesh with Leblanc problem, high values first
  accurate sum 3276.8000032768   sum 3276.800003276371 diff -4.293e-10 relative diff  -1.31e-13 runtime 0.000081   Serial sum
  accurate sum 3276.8000032768   sum 3276.800003278726 diff  1.926e-09 relative diff  5.879e-13 runtime 0.000019   Serial sum (OpenMP SIMD pragma)
  accurate sum 3276.800003       sum 3276.800003       diff          0 relative diff          0 runtime 0.000080   Serial sum with digit truncation
  accurate sum 3276.800003051758 sum 3276.800003051758 diff          0 relative diff          0 runtime 0.000079   Serial sum with bit truncation
  accurate sum 3276.8000032768   sum 3276.800003276801 diff   8.68e-13 relative diff  2.649e-16 runtime 0.000137   Serial sum with long double accumulator
  accurate sum 3276.800003277    sum 3276.800003277    diff          0 relative diff          0 runtime 0.000151   Serial sum with long double accumulator with ndigit truncation
  accurate sum 3276.800003276672 sum 3276.800003276672 diff          0 relative diff          0 runtime 0.000131   Serial sum with long double accumulator with bit truncation
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000239   Serial sum with double double kahan sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000066   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000065   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000060   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff -4.547e-13 relative diff -1.388e-16 runtime 0.000118   8 wide GCC vector extensions Kahan sum
  accurate sum 3276.8000032768   sum 3276.8000032768   diff -4.547e-13 relative diff -1.388e-16 runtime 0.000033   8 wide Fog C++ vector class Kahan sum
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000515   Serial sum with double double knuth sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000119   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000120   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000119   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000131   8 wide GCC vector extensions Knuth sum
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000066   8 wide Fog C++ vector class Knuth sum
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000139   Pair-wise sum

  accurate sum 3276.8000032768          sum 3276.800003276800181898  diff 1.8189894047397e-13  relative diff 5.5511151212179e-17  runtime 0.002762   Serial sum with quad double accumulator
  accurate sum 3276.8000032768          sum 3276.8000032768          diff -6.037546938109e-27  relative diff -1.8425131018285e-30 runtime 0.001922   Serial sum with quad double accumulator and quad terms

  accurate sum 3276.8000032768   sum 3276.800003276826 diff  2.638e-11 relative diff  8.049e-15 runtime 0.001906   OpenMP sum
  accurate sum 3276.800003260374 sum 3276.800003260374 diff          0 relative diff          0 runtime 0.002108   OpenMP sum with bit truncation
  accurate sum 3276.8000032768   sum 3276.800003276797 diff -3.183e-12 relative diff -9.714e-16 runtime 0.004418   OpenMP sum with double double kahan sum accumulator
  accurate sum 3276.8000032768   sum 3276.800003276796 diff -3.638e-12 relative diff  -1.11e-15 runtime 0.003467   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 131072 log 17 ndigits 6 ndigitsld 3 nbits 21 nbitsld 10
Initializing mesh with Leblanc problem, high values first
  accurate sum 6553.6000065536   sum 6553.600006562821 diff  9.221e-09 relative diff  1.407e-12 runtime 0.000160   Serial sum
  accurate sum 6553.6000065536   sum 6553.600006554932 diff  1.332e-09 relative diff  2.033e-13 runtime 0.000040   Serial sum (OpenMP SIMD pragma)
  accurate sum 6553.600007       sum 6553.600007       diff          0 relative diff          0 runtime 0.000171   Serial sum with digit truncation
  accurate sum 6553.600006103516 sum 6553.600006103516 diff          0 relative diff          0 runtime 0.000158   Serial sum with bit truncation
  accurate sum 6553.6000065536   sum 6553.600006553605 diff  3.868e-12 relative diff  5.901e-16 runtime 0.000267   Serial sum with long double accumulator
  accurate sum 6553.600006554    sum 6553.600006554    diff          0 relative diff          0 runtime 0.000267   Serial sum with long double accumulator with ndigit truncation
  accurate sum 6553.600006553344 sum 6553.600006553344 diff          0 relative diff          0 runtime 0.000277   Serial sum with long double accumulator with bit truncation
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000485   Serial sum with double double kahan sum accumulator
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000133   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000133   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000119   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 6553.6000065536   sum 6553.600006553599 diff -9.095e-13 relative diff -1.388e-16 runtime 0.000243   8 wide GCC vector extensions Kahan sum
  accurate sum 6553.6000065536   sum 6553.600006553599 diff -9.095e-13 relative diff -1.388e-16 runtime 0.000067   8 wide Fog C++ vector class Kahan sum
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000980   Serial sum with double double knuth sum accumulator
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000242   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000239   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000250   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000267   8 wide GCC vector extensions Knuth sum
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000134   8 wide Fog C++ vector class Knuth sum
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000220   Pair-wise sum

  accurate sum 6553.6000065536          sum 6553.600006553600363797  diff 3.6379788094793e-13  relative diff 5.5511151212179e-17  runtime 0.004871   Serial sum with quad double accumulator
  accurate sum 6553.6000065536          sum 6553.6000065536          diff 2.2517245678629e-26  relative diff 3.435859017351e-30   runtime 0.003383   Serial sum with quad double accumulator and quad terms

  accurate sum 6553.6000065536   sum 6553.600006553505 diff -9.459e-11 relative diff -1.443e-14 runtime 0.002031   OpenMP sum
  accurate sum 6553.600006461143 sum 6553.600006461143 diff          0 relative diff          0 runtime 0.002660   OpenMP sum with bit truncation
  accurate sum 6553.6000065536   sum 6553.600006553595 diff -5.457e-12 relative diff -8.327e-16 runtime 0.003370   OpenMP sum with double double kahan sum accumulator
  accurate sum 6553.600006553599 sum 6553.600006553592 diff -7.276e-12 relative diff  -1.11e-15 runtime 0.003857   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 262144 log 18 ndigits 6 ndigitsld 3 nbits 22 nbitsld 10
Initializing mesh with Leblanc problem, high values first
  accurate sum 13107.2000131072  sum 13107.20001314317 diff  3.597e-08 relative diff  2.745e-12 runtime 0.000317   Serial sum
  accurate sum 13107.2000131072  sum 13107.20001310548 diff -1.717e-09 relative diff  -1.31e-13 runtime 0.000090   Serial sum (OpenMP SIMD pragma)
  accurate sum 13107.20001       sum 13107.20001       diff          0 relative diff          0 runtime 0.000315   Serial sum with digit truncation
  accurate sum 13107.20001220703 sum 13107.20001220703 diff          0 relative diff          0 runtime 0.000314   Serial sum with bit truncation
  accurate sum 13107.2000131072  sum 13107.20001310719 diff -1.196e-11 relative diff -9.126e-16 runtime 0.000530   Serial sum with long double accumulator
  accurate sum 13107.20001311    sum 13107.20001311    diff          0 relative diff          0 runtime 0.000523   Serial sum with long double accumulator with ndigit truncation
  accurate sum 13107.20001310669 sum 13107.20001310669 diff          0 relative diff          0 runtime 0.000525   Serial sum with long double accumulator with bit truncation
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000943   Serial sum with double double kahan sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000262   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000262   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000236   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff -1.819e-12 relative diff -1.388e-16 runtime 0.000466   8 wide GCC vector extensions Kahan sum
  accurate sum 13107.2000131072  sum 13107.2000131072  diff -1.819e-12 relative diff -1.388e-16 runtime 0.000132   8 wide Fog C++ vector class Kahan sum
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.001887   Serial sum with double double knuth sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000471   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000475   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000470   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000508   8 wide GCC vector extensions Knuth sum
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000261   8 wide Fog C++ vector class Knuth sum
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000563   Pair-wise sum

  accurate sum 13107.2000131072         sum 13107.20001310720072759  diff 7.2759576189587e-13  relative diff 5.5511151212179e-17  runtime 0.009541   Serial sum with quad double accumulator
  accurate sum 13107.2000131072         sum 13107.2000131072         diff 6.0240574166297e-26  relative diff 4.5959910664411e-30  runtime 0.006423   Serial sum with quad double accumulator and quad terms

  accurate sum 13107.2000131072  sum 13107.20001310672 diff  -4.82e-10 relative diff -3.678e-14 runtime 0.002100   OpenMP sum
  accurate sum 13107.20001268387 sum 13107.20001268387 diff          0 relative diff          0 runtime 0.002327   OpenMP sum with bit truncation
  accurate sum 13107.2000131072  sum 13107.20001310719 diff -1.091e-11 relative diff -8.327e-16 runtime 0.003805   OpenMP sum with double double kahan sum accumulator
  accurate sum 13107.2000131072  sum 13107.20001310718 diff -1.455e-11 relative diff  -1.11e-15 runtime 0.003955   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 524288 log 19 ndigits 6 ndigitsld 3 nbits 23 nbitsld 11
Initializing mesh with Leblanc problem, high values first
  accurate sum 26214.4000262144  sum 26214.40002564823 diff -5.662e-07 relative diff  -2.16e-11 runtime 0.000676   Serial sum
  accurate sum 26214.4000262144  sum 26214.40002625129 diff  3.689e-08 relative diff  1.407e-12 runtime 0.000160   Serial sum (OpenMP SIMD pragma)
  accurate sum 26214.40003       sum 26214.40003       diff          0 relative diff          0 runtime 0.000629   Serial sum with digit truncation
  accurate sum 26214.40002441406 sum 26214.40002441406 diff          0 relative diff          0 runtime 0.000633   Serial sum with bit truncation
  accurate sum 26214.4000262144  sum 26214.40002621434 diff -5.817e-11 relative diff -2.219e-15 runtime 0.001053   Serial sum with long double accumulator
  accurate sum 26214.40002621    sum 26214.40002621    diff          0 relative diff          0 runtime 0.001048   Serial sum with long double accumulator with ndigit truncation
  accurate sum 26214.40002620965 sum 26214.40002620965 diff          0 relative diff          0 runtime 0.001048   Serial sum with long double accumulator with bit truncation
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.001895   Serial sum with double double kahan sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.000500   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.000498   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.000474   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff -3.638e-12 relative diff -1.388e-16 runtime 0.000685   8 wide GCC vector extensions Kahan sum
  accurate sum 26214.4000262144  sum 26214.4000262144  diff -3.638e-12 relative diff -1.388e-16 runtime 0.000263   8 wide Fog C++ vector class Kahan sum
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.003811   Serial sum with double double knuth sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.000943   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.000943   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.000942   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.000933   8 wide GCC vector extensions Knuth sum
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.000497   8 wide Fog C++ vector class Knuth sum
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.001035   Pair-wise sum

  accurate sum 26214.4000262144         sum 26214.40002621440145519  diff 1.4551915237917e-12  relative diff 5.5511151212179e-17  runtime 0.019075   Serial sum with quad double accumulator
  accurate sum 26214.4000262144         sum 26214.4000262144         diff -4.3299943998857e-25 relative diff -1.6517617780898e-29 runtime 0.010789   Serial sum with quad double accumulator and quad terms

  accurate sum 26214.4000262144  sum 26214.40002621595 diff  1.553e-09 relative diff  5.926e-14 runtime 0.002439   OpenMP sum
  accurate sum 26214.40002441406 sum 26214.40002441406 diff          0 relative diff          0 runtime 0.001876   OpenMP sum with bit truncation
  accurate sum 26214.4000262144  sum 26214.40002621438 diff -2.183e-11 relative diff -8.327e-16 runtime 0.003337   OpenMP sum with double double kahan sum accumulator
  accurate sum 26214.4000262144  sum 26214.40002621437 diff  -2.91e-11 relative diff  -1.11e-15 runtime 0.004163   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 1048576 log 20 ndigits 7 ndigitsld 4 nbits 24 nbitsld 12
Initializing mesh with Leblanc problem, high values first
  accurate sum 52428.8000524288  sum 52428.80005292332 diff  4.945e-07 relative diff  9.432e-12 runtime 0.001102   Serial sum
  accurate sum 52428.8000524288  sum 52428.8000525727  diff  1.439e-07 relative diff  2.745e-12 runtime 0.000404   Serial sum (OpenMP SIMD pragma)
  accurate sum 52428.8001        sum 52428.8001        diff          0 relative diff          0 runtime 0.001106   Serial sum with digit truncation
  accurate sum 52428.80004882812 sum 52428.80004882812 diff          0 relative diff          0 runtime 0.001086   Serial sum with bit truncation
  accurate sum 52428.8000524288  sum 52428.80005242807 diff -7.327e-10 relative diff -1.397e-14 runtime 0.001774   Serial sum with long double accumulator
  accurate sum 52428.8000524     sum 52428.8000524     diff          0 relative diff          0 runtime 0.001773   Serial sum with long double accumulator with ndigit truncation
  accurate sum 52428.8000524044  sum 52428.8000524044  diff          0 relative diff          0 runtime 0.001773   Serial sum with long double accumulator with bit truncation
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.003157   Serial sum with double double kahan sum accumulator
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.000878   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.000900   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.000841   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 52428.8000524288  sum 52428.80005242879 diff -7.276e-12 relative diff -1.388e-16 runtime 0.001214   8 wide GCC vector extensions Kahan sum
  accurate sum 52428.8000524288  sum 52428.80005242879 diff -7.276e-12 relative diff -1.388e-16 runtime 0.000526   8 wide Fog C++ vector class Kahan sum
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.006307   Serial sum with double double knuth sum accumulator
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.001614   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.001609   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.001618   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.001586   8 wide GCC vector extensions Knuth sum
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.000958   8 wide Fog C++ vector class Knuth sum
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.001678   Pair-wise sum

  accurate sum 52428.8000524288         sum 52428.80005242880291038  diff 2.9103830475835e-12  relative diff 5.5511151212179e-17  runtime 0.031879   Serial sum with quad double accumulator
  accurate sum 52428.8000524288         sum 52428.8000524288         diff 5.4507764195875e-25  relative diff 1.039653094127e-29   runtime 0.021402   Serial sum with quad double accumulator and quad terms

  accurate sum 52428.8000524288  sum 52428.8000524364  diff  7.596e-09 relative diff  1.449e-13 runtime 0.002054   OpenMP sum
  accurate sum 52428.80004882812 sum 52428.80004882812 diff          0 relative diff          0 runtime 0.002259   OpenMP sum with bit truncation
  accurate sum 52428.8000524288  sum 52428.80005242875 diff -5.093e-11 relative diff -9.714e-16 runtime 0.003951   OpenMP sum with double double kahan sum accumulator
  accurate sum 52428.80005242879 sum 52428.80005242873 diff -5.821e-11 relative diff  -1.11e-15 runtime 0.004762   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 2097152 log 21 ndigits 7 ndigitsld 4 nbits 25 nbitsld 12
Initializing mesh with Leblanc problem, high values first
  accurate sum 104857.6001048576 sum 104857.6001084272 diff   3.57e-06 relative diff  3.404e-11 runtime 0.002674   Serial sum
  accurate sum 104857.6001048576 sum 104857.6001025929 diff -2.265e-06 relative diff  -2.16e-11 runtime 0.000868   Serial sum (OpenMP SIMD pragma)
  accurate sum 104857.6          sum 104857.6          diff          0 relative diff          0 runtime 0.002676   Serial sum with digit truncation
  accurate sum 104857.6000976562 sum 104857.6000976562 diff          0 relative diff          0 runtime 0.002652   Serial sum with bit truncation
  accurate sum 104857.6001048576 sum 104857.6001048604 diff  2.808e-09 relative diff  2.678e-14 runtime 0.004306   Serial sum with long double accumulator
  accurate sum 104857.600105     sum 104857.600105     diff          0 relative diff          0 runtime 0.004289   Serial sum with long double accumulator with ndigit truncation
  accurate sum 104857.6001048088 sum 104857.6001048088 diff          0 relative diff          0 runtime 0.004301   Serial sum with long double accumulator with bit truncation
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.007941   Serial sum with double double kahan sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.002134   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.002142   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.002035   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff -1.455e-11 relative diff -1.388e-16 runtime 0.002938   8 wide GCC vector extensions Kahan sum
  accurate sum 104857.6001048576 sum 104857.6001048576 diff -1.455e-11 relative diff -1.388e-16 runtime 0.001292   8 wide Fog C++ vector class Kahan sum
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.015854   Serial sum with double double knuth sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.003890   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.003931   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.003911   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.003575   8 wide GCC vector extensions Knuth sum
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.001950   8 wide Fog C++ vector class Knuth sum
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.003118   Pair-wise sum

  accurate sum 104857.6001048576        sum 104857.6001048576058207  diff 5.8207660951669e-12  relative diff 5.5511151212179e-17  runtime 0.063767   Serial sum with quad double accumulator
  accurate sum 104857.6001048576        sum 104857.6001048576        diff -3.2890451037923e-24 relative diff -3.1366778378517e-29 runtime 0.042822   Serial sum with quad double accumulator and quad terms

  accurate sum 104857.6001048576 sum 104857.6001048323 diff -2.529e-08 relative diff -2.412e-13 runtime 0.002005   OpenMP sum
  accurate sum 104857.6000976562 sum 104857.6000976562 diff          0 relative diff          0 runtime 0.002278   OpenMP sum with bit truncation
  accurate sum 104857.6001048576 sum 104857.6001048575 diff -8.731e-11 relative diff -8.327e-16 runtime 0.004043   OpenMP sum with double double kahan sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048575 diff -1.164e-10 relative diff  -1.11e-15 runtime 0.003648   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 4194304 log 22 ndigits 7 ndigitsld 4 nbits 26 nbitsld 13
Initializing mesh with Leblanc problem, high values first
  accurate sum 209715.2002097152 sum 209715.2001908246 diff -1.889e-05 relative diff -9.008e-11 runtime 0.005276   Serial sum
  accurate sum 209715.2002097152 sum 209715.2002116933 diff  1.978e-06 relative diff  9.432e-12 runtime 0.001706   Serial sum (OpenMP SIMD pragma)
  accurate sum 209715.2          sum 209715.2          diff          0 relative diff          0 runtime 0.005222   Serial sum with digit truncation
  accurate sum 209715.19921875   sum 209715.19921875   diff          0 relative diff          0 runtime 0.005193   Serial sum with bit truncation
  accurate sum 209715.2002097152 sum 209715.2002097158 diff  5.755e-10 relative diff  2.744e-15 runtime 0.008426   Serial sum with long double accumulator
  accurate sum 209715.20021      sum 209715.20021      diff          0 relative diff          0 runtime 0.008472   Serial sum with long double accumulator with ndigit truncation
  accurate sum 209715.2002096176 sum 209715.2002096176 diff          0 relative diff          0 runtime 0.008431   Serial sum with long double accumulator with bit truncation
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.015183   Serial sum with double double kahan sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.004182   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.004188   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.003993   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff  -2.91e-11 relative diff -1.388e-16 runtime 0.005712   8 wide GCC vector extensions Kahan sum
  accurate sum 209715.2002097152 sum 209715.2002097152 diff  -2.91e-11 relative diff -1.388e-16 runtime 0.002500   8 wide Fog C++ vector class Kahan sum
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.030199   Serial sum with double double knuth sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.007615   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.007616   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.007642   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.007486   8 wide GCC vector extensions Knuth sum
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.004474   8 wide Fog C++ vector class Knuth sum
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.009158   Pair-wise sum

  accurate sum 209715.2002097152        sum 209715.2002097152116415  diff 1.1641532190334e-11  relative diff 5.5511151212179e-17  runtime 0.152574   Serial sum with quad double accumulator
  accurate sum 209715.2002097152        sum 209715.2002097152        diff 2.3784295131933e-23  relative diff 1.1341235689234e-28  runtime 0.102720   Serial sum with quad double accumulator and quad terms

  accurate sum 209715.2002097152 sum 209715.2002095948 diff -1.204e-07 relative diff -5.741e-13 runtime 0.001875   OpenMP sum
  accurate sum 209715.2001953125 sum 209715.2001953125 diff          0 relative diff          0 runtime 0.001822   OpenMP sum with bit truncation
  accurate sum 209715.2002097152 sum 209715.200209715  diff -1.746e-10 relative diff -8.327e-16 runtime 0.003755   OpenMP sum with double double kahan sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097149 diff -2.328e-10 relative diff  -1.11e-15 runtime 0.004026   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 8388608 log 23 ndigits 7 ndigitsld 4 nbits 27 nbitsld 13
Initializing mesh with Leblanc problem, high values first
  accurate sum 419430.4004194304 sum 419430.400462431  diff    4.3e-05 relative diff  1.025e-10 runtime 0.008843   Serial sum
  accurate sum 419430.4004194304 sum 419430.4004337086 diff  1.428e-05 relative diff  3.404e-11 runtime 0.004174   Serial sum (OpenMP SIMD pragma)
  accurate sum 419430.4          sum 419430.4          diff          0 relative diff          0 runtime 0.008838   Serial sum with digit truncation
  accurate sum 419430.3984375    sum 419430.3984375    diff          0 relative diff          0 runtime 0.008821   Serial sum with bit truncation
  accurate sum 419430.4004194304 sum 419430.4004193632 diff -6.722e-08 relative diff -1.603e-13 runtime 0.014213   Serial sum with long double accumulator
  accurate sum 419430.400419     sum 419430.400419     diff          0 relative diff          0 runtime 0.014219   Serial sum with long double accumulator with ndigit truncation
  accurate sum 419430.4004192352 sum 419430.4004192352 diff          0 relative diff          0 runtime 0.014217   Serial sum with long double accumulator with bit truncation
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.025230   Serial sum with double double kahan sum accumulator
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.007096   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.007102   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.006728   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 419430.4004194304 sum 419430.4004194303 diff -5.821e-11 relative diff -1.388e-16 runtime 0.009611   8 wide GCC vector extensions Kahan sum
  accurate sum 419430.4004194304 sum 419430.4004194303 diff -5.821e-11 relative diff -1.388e-16 runtime 0.004376   8 wide Fog C++ vector class Kahan sum
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.050790   Serial sum with double double knuth sum accumulator
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.012884   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.012888   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.012887   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.012604   8 wide GCC vector extensions Knuth sum
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.007661   8 wide Fog C++ vector class Knuth sum
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.012843   Pair-wise sum

  accurate sum 419430.4004194304        sum 419430.4004194304232830  diff 2.3283064380668e-11  relative diff 5.5511151212179e-17  runtime 0.255018   Serial sum with quad double accumulator
  accurate sum 419430.4004194304        sum 419430.4004194304        diff 1.1756526599141e-23  relative diff 2.8029743641339e-29  runtime 0.171170   Serial sum with quad double accumulator and quad terms

  accurate sum 419430.4004194304 sum 419430.4004198347 diff  4.043e-07 relative diff   9.64e-13 runtime 0.002323   OpenMP sum
  accurate sum 419430.400390625  sum 419430.400390625  diff          0 relative diff          0 runtime 0.002023   OpenMP sum with bit truncation
  accurate sum 419430.4004194304 sum 419430.40041943   diff -4.075e-10 relative diff -9.714e-16 runtime 0.004594   OpenMP sum with double double kahan sum accumulator
  accurate sum 419430.4004194303 sum 419430.4004194299 diff -4.657e-10 relative diff  -1.11e-15 runtime 0.004015   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 16777216 log 24 ndigits 7 ndigitsld 4 nbits 27 nbitsld 14
Initializing mesh with Leblanc problem, high values first
  accurate sum 838860.8008388608 sum 838860.800853056  diff   1.42e-05 relative diff  1.692e-11 runtime 0.017825   Serial sum
  accurate sum 838860.8008388608 sum 838860.8007632984 diff -7.556e-05 relative diff -9.008e-11 runtime 0.006376   Serial sum (OpenMP SIMD pragma)
  accurate sum 838860.801        sum 838860.801        diff          0 relative diff          0 runtime 0.017687   Serial sum with digit truncation
  accurate sum 838860.796875     sum 838860.796875     diff          0 relative diff          0 runtime 0.017643   Serial sum with bit truncation
  accurate sum 838860.8008388608 sum 838860.800838807  diff  -5.38e-08 relative diff -6.413e-14 runtime 0.028472   Serial sum with long double accumulator
  accurate sum 838860.800839     sum 838860.800839     diff          0 relative diff          0 runtime 0.028435   Serial sum with long double accumulator with ndigit truncation
  accurate sum 838860.8008384705 sum 838860.8008384705 diff          0 relative diff          0 runtime 0.028419   Serial sum with long double accumulator with bit truncation
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.050446   Serial sum with double double kahan sum accumulator
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.014160   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.014191   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.013459   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 838860.8008388608 sum 838860.8008388607 diff -1.164e-10 relative diff -1.388e-16 runtime 0.019172   8 wide GCC vector extensions Kahan sum
  accurate sum 838860.8008388608 sum 838860.8008388607 diff -1.164e-10 relative diff -1.388e-16 runtime 0.009002   8 wide Fog C++ vector class Kahan sum
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.102052   Serial sum with double double knuth sum accumulator
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.025797   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.025771   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.025778   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.025184   8 wide GCC vector extensions Knuth sum
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.015295   8 wide Fog C++ vector class Knuth sum
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.026363   Pair-wise sum

  accurate sum 838860.8008388608        sum 838860.8008388608465661  diff 4.6566128761335e-11  relative diff 5.5511151212179e-17  runtime 0.510050   Serial sum with quad double accumulator
  accurate sum 838860.8008388608        sum 838860.8008388608        diff -3.8768739581042e-23 relative diff -4.6215938976137e-29 runtime 0.342395   Serial sum with quad double accumulator and quad terms

  accurate sum 838860.8008388608 sum 838860.8008407898 diff  1.929e-06 relative diff    2.3e-12 runtime 0.004128   OpenMP sum
  accurate sum 838860.80078125   sum 838860.80078125   diff          0 relative diff          0 runtime 0.002373   OpenMP sum with bit truncation
  accurate sum 838860.8008388608 sum 838860.80083886   diff -8.149e-10 relative diff -9.714e-16 runtime 0.004757   OpenMP sum with double double kahan sum accumulator
  accurate sum 838860.8008388607 sum 838860.8008388598 diff -9.313e-10 relative diff  -1.11e-15 runtime 0.004914   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 33554432 log 25 ndigits 8 ndigitsld 5 nbits 29 nbitsld 15
Initializing mesh with Leblanc problem, high values first
  accurate sum 1677721.601677722 sum 1677721.600413603 diff  -0.001264 relative diff -7.535e-10 runtime 0.035611   Serial sum
  accurate sum 1677721.601677722 sum 1677721.601849724 diff   0.000172 relative diff  1.025e-10 runtime 0.012762   Serial sum (OpenMP SIMD pragma)
  accurate sum 1677721.6         sum 1677721.6         diff          0 relative diff          0 runtime 0.035301   Serial sum with digit truncation
  accurate sum 1677721.5         sum 1677721.5         diff          0 relative diff          0 runtime 0.035288   Serial sum with bit truncation
  accurate sum 1677721.601677722 sum 1677721.601678708 diff  9.863e-07 relative diff  5.879e-13 runtime 0.056838   Serial sum with long double accumulator
  accurate sum 1677721.6017      sum 1677721.6017      diff          0 relative diff          0 runtime 0.056872   Serial sum with long double accumulator with ndigit truncation
  accurate sum 1677721.601676941 sum 1677721.601676941 diff          0 relative diff          0 runtime 0.056857   Serial sum with long double accumulator with bit truncation
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.100883   Serial sum with double double kahan sum accumulator
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.028275   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.028396   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.026925   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 1677721.601677722 sum 1677721.601677721 diff -2.328e-10 relative diff -1.388e-16 runtime 0.038329   8 wide GCC vector extensions Kahan sum
  accurate sum 1677721.601677722 sum 1677721.601677721 diff -2.328e-10 relative diff -1.388e-16 runtime 0.018012   8 wide Fog C++ vector class Kahan sum
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.201818   Serial sum with double double knuth sum accumulator
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.051537   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.051551   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.051566   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.050413   8 wide GCC vector extensions Knuth sum
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.030531   8 wide Fog C++ vector class Knuth sum
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.052976   Pair-wise sum

  accurate sum 1677721.6016777216       sum 1677721.601677721693132  diff 9.3132257522671e-11  relative diff 5.5511151212179e-17  runtime 1.020204   Serial sum with quad double accumulator
  accurate sum 1677721.6016777216       sum 1677721.6016777216       diff 4.9545533752512e-22  relative diff 2.9531439365725e-28  runtime 0.684694   Serial sum with quad double accumulator and quad terms

  accurate sum 1677721.601677722 sum 1677721.60167126  diff -6.462e-06 relative diff -3.851e-12 runtime 0.004771   OpenMP sum
  accurate sum 1677721.6015625   sum 1677721.6015625   diff          0 relative diff          0 runtime 0.005444   OpenMP sum with bit truncation
  accurate sum 1677721.601677722 sum 1677721.60167772  diff -1.397e-09 relative diff -8.327e-16 runtime 0.006719   OpenMP sum with double double kahan sum accumulator
  accurate sum 1677721.601677721 sum 1677721.60167772  diff -1.863e-09 relative diff  -1.11e-15 runtime 0.007949   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 67108864 log 26 ndigits 8 ndigitsld 5 nbits 30 nbitsld 15
Initializing mesh with Leblanc problem, high values first
  accurate sum 3355443.203355443 sum 3355443.201976103 diff  -0.001379 relative diff -4.111e-10 runtime 0.071161   Serial sum
  accurate sum 3355443.203355443 sum 3355443.203412224 diff  5.678e-05 relative diff  1.692e-11 runtime 0.025159   Serial sum (OpenMP SIMD pragma)
  accurate sum 3355443.2         sum 3355443.2         diff          0 relative diff          0 runtime 0.070556   Serial sum with digit truncation
  accurate sum 3355443           sum 3355443           diff          0 relative diff          0 runtime 0.070559   Serial sum with bit truncation
  accurate sum 3355443.203355443 sum 3355443.203356126 diff  6.824e-07 relative diff  2.034e-13 runtime 0.113674   Serial sum with long double accumulator
  accurate sum 3355443.2034      sum 3355443.2034      diff          0 relative diff          0 runtime 0.113707   Serial sum with long double accumulator with ndigit truncation
  accurate sum 3355443.203353882 sum 3355443.203353882 diff          0 relative diff          0 runtime 0.113677   Serial sum with long double accumulator with bit truncation
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.201733   Serial sum with double double kahan sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.056535   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.056714   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.053782   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff -4.657e-10 relative diff -1.388e-16 runtime 0.076679   8 wide GCC vector extensions Kahan sum
  accurate sum 3355443.203355443 sum 3355443.203355443 diff -4.657e-10 relative diff -1.388e-16 runtime 0.035504   8 wide Fog C++ vector class Kahan sum
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.403453   Serial sum with double double knuth sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.103086   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.103051   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.103047   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.100735   8 wide GCC vector extensions Knuth sum
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.061023   8 wide Fog C++ vector class Knuth sum
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.103962   Pair-wise sum

  accurate sum 3355443.2033554432       sum 3355443.203355443386264  diff 1.8626451504534e-10  relative diff 5.5511151212179e-17  runtime 2.040126   Serial sum with quad double accumulator
  accurate sum 3355443.2033554432       sum 3355443.2033554432       diff 1.987420167313e-21   relative diff 5.9229736486839e-28  runtime 1.369342   Serial sum with quad double accumulator and quad terms

  accurate sum 3355443.203355443 sum 3355443.203324564 diff -3.088e-05 relative diff -9.203e-12 runtime 0.008722   OpenMP sum
  accurate sum 3355443.1875      sum 3355443.1875      diff          0 relative diff          0 runtime 0.006216   OpenMP sum with bit truncation
  accurate sum 3355443.203355443 sum 3355443.20335544  diff -2.794e-09 relative diff -8.327e-16 runtime 0.010242   OpenMP sum with double double kahan sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355439 diff -3.725e-09 relative diff  -1.11e-15 runtime 0.008703   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 134217728 log 27 ndigits 8 ndigitsld 5 nbits 31 nbitsld 16
Initializing mesh with Leblanc problem, high values first
  accurate sum 6710886.406710886 sum 6710886.393382353 diff   -0.01333 relative diff -1.986e-09 runtime 0.140792   Serial sum
  accurate sum 6710886.406710886 sum 6710886.401654411 diff  -0.005056 relative diff -7.535e-10 runtime 0.050570   Serial sum (OpenMP SIMD pragma)
  accurate sum 6710886.4         sum 6710886.4         diff          0 relative diff          0 runtime 0.141128   Serial sum with digit truncation
  accurate sum 6710886           sum 6710886           diff          0 relative diff          0 runtime 0.141075   Serial sum with bit truncation
  accurate sum 6710886.406710886 sum 6710886.406710007 diff -8.792e-07 relative diff  -1.31e-13 runtime 0.227365   Serial sum with long double accumulator
  accurate sum 6710886.4067      sum 6710886.4067      diff          0 relative diff          0 runtime 0.227413   Serial sum with long double accumulator with ndigit truncation
  accurate sum 6710886.406677246 sum 6710886.406677246 diff          0 relative diff          0 runtime 0.227435   Serial sum with long double accumulator with bit truncation
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.403567   Serial sum with double double kahan sum accumulator
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.113134   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.113539   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.107601   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 6710886.406710886 sum 6710886.406710885 diff -9.313e-10 relative diff -1.388e-16 runtime 0.153399   8 wide GCC vector extensions Kahan sum
  accurate sum 6710886.406710886 sum 6710886.406710885 diff -9.313e-10 relative diff -1.388e-16 runtime 0.070848   8 wide Fog C++ vector class Kahan sum
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.807675   Serial sum with double double knuth sum accumulator
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.205998   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.206138   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.206142   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.202244   8 wide GCC vector extensions Knuth sum
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.122216   8 wide Fog C++ vector class Knuth sum
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.209813   Pair-wise sum

  accurate sum 6710886.4067108864       sum 6710886.406710886772529  diff 3.7252903009068e-10  relative diff 5.5511151212179e-17  runtime 4.080931   Serial sum with quad double accumulator
  accurate sum 6710886.4067108864       sum 6710886.4067108864       diff -3.22980998523e-20   relative diff -4.8127919167284e-27 runtime 2.739514   Serial sum with quad double accumulator and quad terms

  accurate sum 6710886.406710886 sum 6710886.406814281 diff  0.0001034 relative diff  1.541e-11 runtime 0.009853   OpenMP sum
  accurate sum 6710886.375       sum 6710886.375       diff          0 relative diff          0 runtime 0.007991   OpenMP sum with bit truncation
  accurate sum 6710886.406710886 sum 6710886.406710881 diff -5.588e-09 relative diff -8.327e-16 runtime 0.012700   OpenMP sum with double double kahan sum accumulator
  accurate sum 6710886.406710885 sum 6710886.406710878 diff -7.451e-09 relative diff  -1.11e-15 runtime 0.011646   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 268435456 log 28 ndigits 8 ndigitsld 5 nbits 32 nbitsld 16
Initializing mesh with Leblanc problem, high values first
  accurate sum 13421772.81342177 sum 13421772.76838235 diff   -0.04504 relative diff -3.356e-09 runtime 0.284401   Serial sum
  accurate sum 13421772.81342177 sum 13421772.80790441 diff  -0.005517 relative diff -4.111e-10 runtime 0.100880   Serial sum (OpenMP SIMD pragma)
  accurate sum 13421773          sum 13421773          diff          0 relative diff          0 runtime 0.281879   Serial sum with digit truncation
  accurate sum 13421768          sum 13421768          diff          0 relative diff          0 runtime 0.281862   Serial sum with bit truncation
  accurate sum 13421772.81342177 sum 13421772.81344066 diff  1.889e-05 relative diff  1.407e-12 runtime 0.455048   Serial sum with long double accumulator
  accurate sum 13421772.813      sum 13421772.813      diff          0 relative diff          0 runtime 0.455094   Serial sum with long double accumulator with ndigit truncation
  accurate sum 13421772.81335449 sum 13421772.81335449 diff          0 relative diff          0 runtime 0.454719   Serial sum with long double accumulator with bit truncation
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.807018   Serial sum with double double kahan sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.226525   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.227184   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.215376   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff -1.863e-09 relative diff -1.388e-16 runtime 0.306041   8 wide GCC vector extensions Kahan sum
  accurate sum 13421772.81342177 sum 13421772.81342177 diff -1.863e-09 relative diff -1.388e-16 runtime 0.141535   8 wide Fog C++ vector class Kahan sum
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 1.614166   Serial sum with double double knuth sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.411880   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.411932   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.411962   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.403626   8 wide GCC vector extensions Knuth sum
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.245720   8 wide Fog C++ vector class Knuth sum
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.418636   Pair-wise sum

  accurate sum 13421772.8134217728      sum 13421772.81342177354505  diff 7.4505806018137e-10  relative diff 5.5511151212179e-17  runtime 8.160413   Serial sum with quad double accumulator
  accurate sum 13421772.8134217728      sum 13421772.8134217728      diff 2.787986889892e-20   relative diff 2.0772121005535e-27  runtime 5.478150   Serial sum with quad double accumulator and quad terms

  accurate sum 13421772.81342177 sum 13421772.81391581 diff   0.000494 relative diff  3.681e-11 runtime 0.015190   OpenMP sum
  accurate sum 13421772.5        sum 13421772.5        diff          0 relative diff          0 runtime 0.014210   OpenMP sum with bit truncation
  accurate sum 13421772.81342177 sum 13421772.81342176 diff -1.304e-08 relative diff -9.714e-16 runtime 0.020239   OpenMP sum with double double kahan sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342176 diff  -1.49e-08 relative diff  -1.11e-15 runtime 0.019109   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 536870912 log 29 ndigits 8 ndigitsld 5 nbits 33 nbitsld 17
Initializing mesh with Leblanc problem, high values first
  accurate sum 26843545.62684355 sum 26843545.70588235 diff    0.07904 relative diff  2.944e-09 runtime 0.566975   Serial sum
  accurate sum 26843545.62684355 sum 26843545.57352941 diff   -0.05331 relative diff -1.986e-09 runtime 0.201905   Serial sum (OpenMP SIMD pragma)
  accurate sum 26843546          sum 26843546          diff          0 relative diff          0 runtime 0.562214   Serial sum with digit truncation
  accurate sum 26843520          sum 26843520          diff          0 relative diff          0 runtime 0.561910   Serial sum with bit truncation
  accurate sum 26843545.62684355 sum 26843545.62691722 diff  7.367e-05 relative diff  2.745e-12 runtime 0.910186   Serial sum with long double accumulator
  accurate sum 26843545.627      sum 26843545.627      diff          0 relative diff          0 runtime 0.910374   Serial sum with long double accumulator with ndigit truncation
  accurate sum 26843545.62646484 sum 26843545.62646484 diff          0 relative diff          0 runtime 0.910473   Serial sum with long double accumulator with bit truncation
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 1.614041   Serial sum with double double kahan sum accumulator
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 0.453102   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 0.454072   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 0.433386   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 26843545.62684355 sum 26843545.62684354 diff -3.725e-09 relative diff -1.388e-16 runtime 0.611010   8 wide GCC vector extensions Kahan sum
  accurate sum 26843545.62684355 sum 26843545.62684354 diff -3.725e-09 relative diff -1.388e-16 runtime 0.283167   8 wide Fog C++ vector class Kahan sum
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 3.227849   Serial sum with double double knuth sum accumulator
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 0.821682   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 0.821739   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 0.822132   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 0.803837   8 wide GCC vector extensions Knuth sum
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 0.492901   8 wide Fog C++ vector class Knuth sum
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 0.836921   Pair-wise sum

  accurate sum 26843545.6268435456      sum 26843545.62684354709011  diff 1.4901161203627e-09  relative diff 5.5511151212179e-17  runtime 16.321659   Serial sum with quad double accumulator
  accurate sum 26843545.6268435456      sum 26843545.6268435456      diff 2.0244591179446e-19  relative diff 7.5416979041701e-27  runtime 10.954143   Serial sum with quad double accumulator and quad terms

  accurate sum 26843545.62684355 sum 26843545.62518912 diff  -0.001654 relative diff -6.163e-11 runtime 0.020632   OpenMP sum
  accurate sum 26843544          sum 26843544          diff          0 relative diff          0 runtime 0.019766   OpenMP sum with bit truncation
  accurate sum 26843545.62684355 sum 26843545.62684352 diff -2.608e-08 relative diff -9.714e-16 runtime 0.019948   OpenMP sum with double double kahan sum accumulator
  accurate sum 26843545.62684354 sum 26843545.62684351 diff  -2.98e-08 relative diff  -1.11e-15 runtime 0.020058   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 1073741824 log 30 ndigits 9 ndigitsld 6 nbits 34 nbitsld 18
Initializing mesh with Leblanc problem, high values first
  accurate sum 53687091.25368709 sum 53687091.70588235 diff     0.4522 relative diff  8.423e-09 runtime 1.129904   Serial sum
  accurate sum 53687091.25368709 sum 53687091.07352941 diff    -0.1802 relative diff -3.356e-09 runtime 0.399147   Serial sum (OpenMP SIMD pragma)
  accurate sum 53687090          sum 53687090          diff          0 relative diff          0 runtime 1.123560   Serial sum with digit truncation
  accurate sum 53687040          sum 53687040          diff          0 relative diff          0 runtime 1.123274   Serial sum with bit truncation
  accurate sum 53687091.25368709 sum 53687091.25252757 diff   -0.00116 relative diff  -2.16e-11 runtime 1.820063   Serial sum with long double accumulator
  accurate sum 53687091.25       sum 53687091.25       diff          0 relative diff          0 runtime 1.820503   Serial sum with long double accumulator with ndigit truncation
  accurate sum 53687091.25195312 sum 53687091.25195312 diff          0 relative diff          0 runtime 1.820030   Serial sum with long double accumulator with bit truncation
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 3.227945   Serial sum with double double kahan sum accumulator
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 0.906315   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 0.907389   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 0.866294   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 53687091.25368709 sum 53687091.25368708 diff -7.451e-09 relative diff -1.388e-16 runtime 1.223631   8 wide GCC vector extensions Kahan sum
  accurate sum 53687091.25368709 sum 53687091.25368708 diff -7.451e-09 relative diff -1.388e-16 runtime 0.558550   8 wide Fog C++ vector class Kahan sum
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 6.454943   Serial sum with double double knuth sum accumulator
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 1.643956   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 1.643680   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 1.644556   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 1.607537   8 wide GCC vector extensions Knuth sum
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 0.982480   8 wide Fog C++ vector class Knuth sum
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 1.657733   Pair-wise sum

  accurate sum 53687091.2536870912      sum 53687091.25368709418023  diff 2.9802322407255e-09  relative diff 5.5511151212179e-17  runtime 32.639819   Serial sum with quad double accumulator
  accurate sum 53687091.2536870912      sum 53687091.2536870912      diff -1.0747252611427e-18 relative diff -2.0018317924216e-26 runtime 21.909471   Serial sum with quad double accumulator and quad terms

  accurate sum 53687091.25368709 sum 53687091.24578273 diff  -0.007904 relative diff -1.472e-10 runtime 0.037033   OpenMP sum
  accurate sum 53687088          sum 53687088          diff          0 relative diff          0 runtime 0.035407   OpenMP sum with bit truncation
  accurate sum 53687091.25368709 sum 53687091.25368705 diff  -4.47e-08 relative diff -8.327e-16 runtime 0.035306   OpenMP sum with double double kahan sum accumulator
  accurate sum 53687091.25368708 sum 53687091.25368702 diff  -5.96e-08 relative diff  -1.11e-15 runtime 0.035661   OpenMP sum with double double kahan sum accumulator with bit truncation

Scanning dependencies of target distclean
Built target distclean
/usr/bin/modulecmd bash $*
MANPATH=/usr/share/man:/usr/local/share/man ;export MANPATH;PATH=/home/brobey/bin:/home/brobey/parsplice-install/bin:/home/brobey/bin:/home/brobey/parsplice-install/bin:/home/brobey/spack/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin ;export PATH;unset CC;unset CPP;unset CXX;unset F77;unset F90;unset FC;unset LD_LIBRARY_PATH;unset LOADEDMODULES;unset _LMFILES_;
/usr/bin/modulecmd bash $*
/usr/bin/modulecmd bash $*
ADVISOR_2019_DIR=/projects/opt/intel/advisor_2019.4.0.597843 ;export ADVISOR_2019_DIR;CC=icc ;export CC;CLASSPATH=/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/mpi/intel64/lib/mpi.jar:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/daal/lib/daal.jar ;export CLASSPATH;CLCK_ROOT=/projects/opt/intel/clck/2019.4.0 ;export CLCK_ROOT;CONDA_DEFAULT_ENV=root ;export CONDA_DEFAULT_ENV;CONDA_PATH_BACKUP=/projects/opt/intel/advisor_2019.4.0.597843/bin64:/projects/opt/intel/vtune_amplifier_2019.4.0.597835/bin64:/projects/opt/intel/inspector_2019.4.0.597413/bin64:/projects/opt/intel/itac/2019.4.036/intel64/bin:/projects/opt/intel/itac/2019.4.036/intel64/bin:/projects/opt/intel/clck/2019.4.0/bin/intel64:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/bin/intel64:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/mpi/intel64/libfabric/bin:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/mpi/intel64/bin:/projects/opt/intel/debugger_2019/gdb/intel64/bin:/root/perl5/bin:/usr/local/sbin:/sbin:/bin:/usr/sbin:/usr/bin ;export CONDA_PATH_BACKUP;CONDA_PREFIX=/projects/opt/intel/intelpython3 ;export CONDA_PREFIX;CONDA_PS1_BACKUP= ;export CONDA_PS1_BACKUP;CPATH=/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/ipp/include:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/mkl/include:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/pstl/include:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/tbb/include:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/tbb/include:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/daal/include ;export CPATH;CPLUS_INCLUDE_PATH=/projects/opt/intel/clck/2019.4.0/include ;export CPLUS_INCLUDE_PATH;CXX=icpc ;export CXX;DAALROOT=/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/daal ;export DAALROOT;F77=ifort ;export F77;F90=ifort ;export F90;FC=ifort ;export FC;FI_PROVIDER_PATH=/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/mpi/intel64/libfabric/lib/prov ;export FI_PROVIDER_PATH;INFOPATH=/projects/opt/intel/documentation_2019/en/debugger/gdb-ia/info/ ;export INFOPATH;INSPECTOR_2019_DIR=/projects/opt/intel/inspector_2019.4.0.597413 ;export INSPECTOR_2019_DIR;INTEL_LICENSE_FILE=/projects/opt/intel/licenses:/opt/intel/licenses:/root/intel/licenses:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/licenses:/opt/intel/licenses:/root/intel/licenses:/projects/opt/intel/clck/2019.4.0/licenses:/opt/intel/licenses:/root/intel/licenses:/Users/Shared/Library/Application\ Support/Intel/Licenses ;export INTEL_LICENSE_FILE;INTEL_PYTHONHOME=/projects/opt/intel/debugger_2019/python/intel64/ ;export INTEL_PYTHONHOME;IPPROOT=/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/ipp ;export IPPROOT;I_MPI_ROOT=/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/mpi ;export I_MPI_ROOT;LD_LIBRARY_PATH=/projects/opt/intel/itac/2019.4.036/intel64/slib:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/compiler/lib/intel64_lin:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/mpi/intel64/libfabric/lib:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/mpi/intel64/lib/release:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/mpi/intel64/lib:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/ipp/lib/intel64:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/compiler/lib/intel64_lin:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/mkl/lib/intel64_lin:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64/gcc4.7:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64/gcc4.7:/projects/opt/intel/debugger_2019/libipt/intel64/lib:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/daal/lib/intel64_lin:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/daal/../tbb/lib/intel64_lin/gcc4.4 ;export LD_LIBRARY_PATH;LIBRARY_PATH=/projects/opt/intel/clck/2019.4.0/lib/intel64:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/mpi/intel64/libfabric/lib:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/ipp/lib/intel64:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/compiler/lib/intel64_lin:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/mkl/lib/intel64_lin:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64/gcc4.7:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64/gcc4.7:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/daal/lib/intel64_lin:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/daal/../tbb/lib/intel64_lin/gcc4.4 ;export LIBRARY_PATH;LOADEDMODULES=cmake/3.12.4:intel/19.0.4 ;export LOADEDMODULES;MANPATH=/projects/opt/intel/itac/2019.4.036/man:/projects/opt/intel/clck/2019.4.0/man:/projects/opt/intel/man/common:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/mpi/man:/projects/opt/intel/documentation_2019/en/debugger/gdb-ia/man/:/root/perl5/man:/usr/local/man:/usr/local/share/man:/usr/share/man/overrides:/usr/share/man ;export MANPATH;MKLROOT=/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/mkl ;export MKLROOT;NLSPATH=/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/compiler/lib/intel64/locale/%l_%t/%N:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/mkl/lib/intel64_lin/locale/%l_%t/%N:/projects/opt/intel/debugger_2019/gdb/intel64/share/locale/%l_%t/%N ;export NLSPATH;PATH=/projects/opt/intel/intelpython3/bin:/projects/opt/intel/advisor_2019.4.0.597843/bin64:/projects/opt/intel/vtune_amplifier_2019.4.0.597835/bin64:/projects/opt/intel/inspector_2019.4.0.597413/bin64:/projects/opt/intel/itac/2019.4.036/intel64/bin:/projects/opt/intel/clck/2019.4.0/bin/intel64:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/bin/intel64:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/mpi/intel64/libfabric/bin:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/mpi/intel64/bin:/projects/opt/intel/debugger_2019/gdb/intel64/bin:/projects/opt/centos7/cmake/3.12.4/bin:/home/brobey/bin:/home/brobey/parsplice-install/bin:/home/brobey/bin:/home/brobey/parsplice-install/bin:/home/brobey/spack/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/projects/opt/intel/parallel_studio_xe_2019.4.070/bin ;export PATH;PKG_CONFIG_PATH=/projects/opt/intel/advisor_2019.4.0.597843/include/pkgconfig/lib64:/projects/opt/intel/vtune_amplifier_2019.4.0.597835/include/pkgconfig/lib64:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/mkl/bin/pkgconfig ;export PKG_CONFIG_PATH;PSTLROOT=/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/pstl ;export PSTLROOT;PSXE_2019=1 ;export PSXE_2019;PYTHONPATH=/projects/opt/intel/advisor_2019.4.0.597843/pythonapi ;export PYTHONPATH;TBBROOT=/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/tbb ;export TBBROOT;VTUNE_AMPLIFIER_2019_DIR=/projects/opt/intel/vtune_amplifier_2019.4.0.597835 ;export VTUNE_AMPLIFIER_2019_DIR;VT_ADD_LIBS=-ldwarf\ -lelf\ -lvtunwind\ -lm\ -lpthread ;export VT_ADD_LIBS;VT_ARCH=intel64 ;export VT_ARCH;VT_LIB_DIR=/projects/opt/intel/itac/2019.4.036/intel64/lib ;export VT_LIB_DIR;VT_MPI=impi4 ;export VT_MPI;VT_ROOT=/projects/opt/intel/itac/2019.4.036 ;export VT_ROOT;VT_SLIB_DIR=/projects/opt/intel/itac/2019.4.036/intel64/slib ;export VT_SLIB_DIR;_LMFILES_=/projects/darwin/modulefiles/centos7/cmake/3.12.4:/projects/darwin/modulefiles/centos7/intel/19.0.4 ;export _LMFILES_;
-- The C compiler identification is Intel 19.0.4.20190416
-- The CXX compiler identification is Intel 19.0.4.20190416
-- Check for working C compiler: /projects/opt/intel/compilers_and_libraries_2019.4.243/linux/bin/intel64/icc
-- Check for working C compiler: /projects/opt/intel/compilers_and_libraries_2019.4.243/linux/bin/intel64/icc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /projects/opt/intel/compilers_and_libraries_2019.4.243/linux/bin/intel64/icpc
-- Check for working CXX compiler: /projects/opt/intel/compilers_and_libraries_2019.4.243/linux/bin/intel64/icpc -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Found OpenMP_C: -qopenmp (found version "5.0") 
-- Found OpenMP_CXX: -qopenmp (found version "5.0") 
-- Found OpenMP: TRUE (found version "5.0")  
-- Trying Fog Vector Class -- works
-- Trying X86_64 intrinsics -- works
-- Detecting AVX512 hardware -- found
-- Trying GCC Vector Extensions -- works
-- Trying Quad math library -- works
-- Configuring done
-- Generating done
-- Build files have been written to: /home/brobey/GlobalSums
Scanning dependencies of target globalsums
[  3%] Building C object CMakeFiles/globalsums.dir/globalsums.c.o
icc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[  6%] Building C object CMakeFiles/globalsums.dir/do_kahan_sum.c.o
icc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[  9%] Building C object CMakeFiles/globalsums.dir/serial_sum_novec.c.o
icc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[ 12%] Building C object CMakeFiles/globalsums.dir/do_kahan_sum_omp.c.o
icc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[ 15%] Building C object CMakeFiles/globalsums.dir/do_kahan_sum_omp_wbittrunc.c.o
icc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[ 18%] Building C object CMakeFiles/globalsums.dir/do_knuth_sum.c.o
icc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[ 21%] Building C object CMakeFiles/globalsums.dir/do_ldsum.c.o
icc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[ 25%] Building C object CMakeFiles/globalsums.dir/do_ldsum_wbittrunc.c.o
icc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[ 28%] Building C object CMakeFiles/globalsums.dir/do_ldsum_wdigittrunc.c.o
icc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[ 31%] Building C object CMakeFiles/globalsums.dir/do_pair_sum.c.o
icc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[ 34%] Building C object CMakeFiles/globalsums.dir/do_sum.c.o
icc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[ 37%] Building C object CMakeFiles/globalsums.dir/do_sum_omp.c.o
icc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[ 40%] Building C object CMakeFiles/globalsums.dir/do_sum_omp_wbittrunc.c.o
icc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[ 43%] Building C object CMakeFiles/globalsums.dir/do_sum_wbittrunc.c.o
icc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[ 46%] Building C object CMakeFiles/globalsums.dir/do_sum_wdigittrunc.c.o
icc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[ 50%] Building CXX object CMakeFiles/globalsums.dir/kahan_fog_vector.cpp.o
icpc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[ 53%] Building CXX object CMakeFiles/globalsums.dir/kahan_fog_vector8.cpp.o
icpc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[ 56%] Building CXX object CMakeFiles/globalsums.dir/knuth_fog_vector.cpp.o
icpc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[ 59%] Building CXX object CMakeFiles/globalsums.dir/knuth_fog_vector8.cpp.o
icpc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[ 62%] Building C object CMakeFiles/globalsums.dir/kahan_intel_vector.c.o
icc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[ 65%] Building C object CMakeFiles/globalsums.dir/kahan_intel_vector8.c.o
icc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[ 68%] Building C object CMakeFiles/globalsums.dir/knuth_intel_vector.c.o
icc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[ 71%] Building C object CMakeFiles/globalsums.dir/knuth_intel_vector8.c.o
icc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[ 75%] Building C object CMakeFiles/globalsums.dir/kahan_gcc_vector.c.o
icc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[ 78%] Building C object CMakeFiles/globalsums.dir/kahan_gcc_vector8.c.o
icc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[ 81%] Building C object CMakeFiles/globalsums.dir/knuth_gcc_vector.c.o
icc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[ 84%] Building C object CMakeFiles/globalsums.dir/knuth_gcc_vector8.c.o
icc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[ 87%] Building C object CMakeFiles/globalsums.dir/do_full_qdsum.c.o
icc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[ 90%] Building C object CMakeFiles/globalsums.dir/do_full_qdsum_wtrunc.c.o
icc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[ 93%] Building C object CMakeFiles/globalsums.dir/do_qdsum.c.o
icc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[ 96%] Building C object CMakeFiles/globalsums.dir/do_qdsum_wtrunc.c.o
icc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[100%] Linking CXX executable globalsums
icpc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[100%] Built target globalsums
./amd_epyc_batch.sh: line 3: 88966 Illegal instruction     (core dumped) ./globalsums
Scanning dependencies of target distclean
Built target distclean
/usr/bin/modulecmd bash $*
PATH=/home/brobey/bin:/home/brobey/parsplice-install/bin:/home/brobey/bin:/home/brobey/parsplice-install/bin:/home/brobey/spack/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin ;export PATH;unset ADVISOR_2019_DIR;unset CC;unset CLASSPATH;unset CLCK_ROOT;unset CONDA_DEFAULT_ENV;unset CONDA_PATH_BACKUP;unset CONDA_PREFIX;unset CONDA_PS1_BACKUP;unset CPATH;unset CPLUS_INCLUDE_PATH;unset CXX;unset DAALROOT;unset F77;unset F90;unset FC;unset FI_PROVIDER_PATH;unset INFOPATH;unset INSPECTOR_2019_DIR;unset INTEL_LICENSE_FILE;unset INTEL_PYTHONHOME;unset IPPROOT;unset I_MPI_ROOT;unset LD_LIBRARY_PATH;unset LIBRARY_PATH;unset LOADEDMODULES;unset MANPATH;unset MKLROOT;unset NLSPATH;unset PKG_CONFIG_PATH;unset PSTLROOT;unset PSXE_2019;unset PYTHONPATH;unset TBBROOT;unset VTUNE_AMPLIFIER_2019_DIR;unset VT_ADD_LIBS;unset VT_ARCH;unset VT_LIB_DIR;unset VT_MPI;unset VT_ROOT;unset VT_SLIB_DIR;unset _LMFILES_;
/usr/bin/modulecmd bash $*
/usr/bin/modulecmd bash $*
CC=pgcc ;export CC;CPP=pgcc\ -E ;export CPP;CXX=pgc++ ;export CXX;F77=pgf77 ;export F77;FC=pgfortran ;export FC;LD_LIBRARY_PATH=/projects/opt/centos7/pgi/linux86-64/18.10/lib ;export LD_LIBRARY_PATH;LM_LICENSE_FILE=/projects/opt/centos7/pgi/license.dat ;export LM_LICENSE_FILE;LOADEDMODULES=cmake/3.12.4:pgi/18.10 ;export LOADEDMODULES;MANPATH=/projects/opt/centos7/pgi/linux86-64/18.10/man:/usr/share/man:/usr/local/share/man ;export MANPATH;PATH=/projects/opt/centos7/pgi/linux86-64/18.10/bin:/projects/opt/centos7/cmake/3.12.4/bin:/home/brobey/bin:/home/brobey/parsplice-install/bin:/home/brobey/bin:/home/brobey/parsplice-install/bin:/home/brobey/spack/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin ;export PATH;PGROUPD_LICENSE_FILE=/projects/opt/centos7/pgi/license.dat ;export PGROUPD_LICENSE_FILE;_LMFILES_=/projects/darwin/modulefiles/centos7/cmake/3.12.4:/projects/darwin/modulefiles/centos7/pgi/18.10 ;export _LMFILES_;f90=pgf90 ;export f90;
-- The C compiler identification is PGI 18.10.0
-- The CXX compiler identification is PGI 18.10.0
-- Check for working C compiler: /projects/opt/centos7/pgi/linux86-64/18.10/bin/pgcc
-- Check for working C compiler: /projects/opt/centos7/pgi/linux86-64/18.10/bin/pgcc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /projects/opt/centos7/pgi/linux86-64/18.10/bin/pgc++
-- Check for working CXX compiler: /projects/opt/centos7/pgi/linux86-64/18.10/bin/pgc++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Found OpenMP_C: -mp (found version "4.0") 
-- Found OpenMP_CXX: -mp (found version "4.0") 
-- Found OpenMP: TRUE (found version "4.0")  
-- Trying Fog Vector Class -- fails
-- Trying X86_64 intrinsics -- fails
-- Trying GCC Vector Extensions -- works
-- Trying Quad math library -- fails
-- Configuring done
-- Generating done
-- Build files have been written to: /home/brobey/GlobalSums
Scanning dependencies of target globalsums
[  5%] Building C object CMakeFiles/globalsums.dir/globalsums.c.o
PGC-W-0114-More than one type specified (/home/brobey/GlobalSums/globalsums.c: 36)
PGC-W-0143-Useless typedef declaration (no declarators present) (/home/brobey/GlobalSums/globalsums.c: 36)
main:
    104, Loop not vectorized/parallelized: contains a parallel region
    137, Loop not vectorized: may not be beneficial
    154, cpu_timer_start inlined, size=2 (inline) file /home/brobey/GlobalSums/globalsums.c (601)
    158, cpu_timer_stop inlined, size=7 (inline) file /home/brobey/GlobalSums/globalsums.c (605)
    166, cpu_timer_start inlined, size=2 (inline) file /home/brobey/GlobalSums/globalsums.c (601)
    170, cpu_timer_stop inlined, size=7 (inline) file /home/brobey/GlobalSums/globalsums.c (605)
    177, cpu_timer_start inlined, size=2 (inline) file /home/brobey/GlobalSums/globalsums.c (601)
    181, cpu_timer_stop inlined, size=7 (inline) file /home/brobey/GlobalSums/globalsums.c (605)
    182, digitround inlined, size=10 (inline) file /home/brobey/GlobalSums/globalsums.c (616)
    189, cpu_timer_start inlined, size=2 (inline) file /home/brobey/GlobalSums/globalsums.c (601)
    193, cpu_timer_stop inlined, size=7 (inline) file /home/brobey/GlobalSums/globalsums.c (605)
    195, bittruncate inlined, size=28 (inline) file /home/brobey/GlobalSums/globalsums.c (629)
    202, cpu_timer_start inlined, size=2 (inline) file /home/brobey/GlobalSums/globalsums.c (601)
    206, cpu_timer_stop inlined, size=7 (inline) file /home/brobey/GlobalSums/globalsums.c (605)
    213, cpu_timer_start inlined, size=2 (inline) file /home/brobey/GlobalSums/globalsums.c (601)
    217, digitround inlined, size=10 (inline) file /home/brobey/GlobalSums/globalsums.c (616)
    219, cpu_timer_stop inlined, size=7 (inline) file /home/brobey/GlobalSums/globalsums.c (605)
    226, cpu_timer_start inlined, size=2 (inline) file /home/brobey/GlobalSums/globalsums.c (601)
    230, bittruncate inlined, size=28 (inline) file /home/brobey/GlobalSums/globalsums.c (629)
    232, cpu_timer_stop inlined, size=7 (inline) file /home/brobey/GlobalSums/globalsums.c (605)
    239, cpu_timer_start inlined, size=2 (inline) file /home/brobey/GlobalSums/globalsums.c (601)
    243, cpu_timer_stop inlined, size=7 (inline) file /home/brobey/GlobalSums/globalsums.c (605)
    264, cpu_timer_start inlined, size=2 (inline) file /home/brobey/GlobalSums/globalsums.c (601)
    268, cpu_timer_stop inlined, size=7 (inline) file /home/brobey/GlobalSums/globalsums.c (605)
    307, cpu_timer_start inlined, size=2 (inline) file /home/brobey/GlobalSums/globalsums.c (601)
    311, cpu_timer_stop inlined, size=7 (inline) file /home/brobey/GlobalSums/globalsums.c (605)
    334, cpu_timer_start inlined, size=2 (inline) file /home/brobey/GlobalSums/globalsums.c (601)
    338, cpu_timer_stop inlined, size=7 (inline) file /home/brobey/GlobalSums/globalsums.c (605)
    359, cpu_timer_start inlined, size=2 (inline) file /home/brobey/GlobalSums/globalsums.c (601)
    363, cpu_timer_stop inlined, size=7 (inline) file /home/brobey/GlobalSums/globalsums.c (605)
    401, cpu_timer_start inlined, size=2 (inline) file /home/brobey/GlobalSums/globalsums.c (601)
    405, cpu_timer_stop inlined, size=7 (inline) file /home/brobey/GlobalSums/globalsums.c (605)
    428, cpu_timer_start inlined, size=2 (inline) file /home/brobey/GlobalSums/globalsums.c (601)
    432, cpu_timer_stop inlined, size=7 (inline) file /home/brobey/GlobalSums/globalsums.c (605)
    541, Loop not vectorized: may not be beneficial
    547, cpu_timer_start inlined, size=2 (inline) file /home/brobey/GlobalSums/globalsums.c (601)
    551, cpu_timer_stop inlined, size=7 (inline) file /home/brobey/GlobalSums/globalsums.c (605)
    558, cpu_timer_start inlined, size=2 (inline) file /home/brobey/GlobalSums/globalsums.c (601)
    562, bittruncate inlined, size=28 (inline) file /home/brobey/GlobalSums/globalsums.c (629)
    564, cpu_timer_stop inlined, size=7 (inline) file /home/brobey/GlobalSums/globalsums.c (605)
    572, cpu_timer_start inlined, size=2 (inline) file /home/brobey/GlobalSums/globalsums.c (601)
    576, cpu_timer_stop inlined, size=7 (inline) file /home/brobey/GlobalSums/globalsums.c (605)
    583, cpu_timer_start inlined, size=2 (inline) file /home/brobey/GlobalSums/globalsums.c (601)
    587, bittruncate inlined, size=28 (inline) file /home/brobey/GlobalSums/globalsums.c (629)
    589, cpu_timer_stop inlined, size=7 (inline) file /home/brobey/GlobalSums/globalsums.c (605)
PGC/x86-64 Linux 18.10-0: compilation completed with warnings
[ 10%] Building C object CMakeFiles/globalsums.dir/do_kahan_sum.c.o
do_kahan_sum:
     10, Generated a prefetch instruction for the loop
[ 15%] Building C object CMakeFiles/globalsums.dir/serial_sum_novec.c.o
do_sum_novec:
      5, Generated 1 prefetches in scalar loop
[ 20%] Building C object CMakeFiles/globalsums.dir/do_kahan_sum_omp.c.o
do_kahan_sum_omp:
     18, Generated a prefetch instruction for the loop
[ 25%] Building C object CMakeFiles/globalsums.dir/do_kahan_sum_omp_wbittrunc.c.o
do_kahan_sum_omp_wbittrunc:
     22, Generated a prefetch instruction for the loop
[ 30%] Building C object CMakeFiles/globalsums.dir/do_knuth_sum.c.o
do_knuth_sum:
     13, Generated a prefetch instruction for the loop
[ 35%] Building C object CMakeFiles/globalsums.dir/do_ldsum.c.o
do_ldsum:
      5, Loop not vectorized: data dependency
[ 40%] Building C object CMakeFiles/globalsums.dir/do_ldsum_wbittrunc.c.o
do_ldsum_wbittrunc:
      8, Loop not vectorized: data dependency
[ 45%] Building C object CMakeFiles/globalsums.dir/do_ldsum_wdigittrunc.c.o
do_ldsum_wdigittrunc:
      7, Loop not vectorized: data dependency
[ 50%] Building C object CMakeFiles/globalsums.dir/do_pair_sum.c.o
do_pair_sum:
     10, Generated 2 alternate versions of the loop
         Generated vector simd code for the loop
         Generated 2 prefetch instructions for the loop
         Generated vector simd code for the loop
         Generated 2 prefetch instructions for the loop
         Generated vector simd code for the loop
         Generated 2 prefetch instructions for the loop
     14, Loop not vectorized/parallelized: contains call
     16, Loop not vectorized: data dependency
         Generated 3 prefetches in scalar loop
[ 55%] Building C object CMakeFiles/globalsums.dir/do_sum.c.o
do_sum:
      6, Generated an alternate version of the loop
         Generated vector simd code for the loop containing reductions
         Generated a prefetch instruction for the loop
         Generated vector simd code for the loop containing reductions
         Generated a prefetch instruction for the loop
[ 60%] Building C object CMakeFiles/globalsums.dir/do_sum_omp.c.o
do_sum_omp:
      6, Generated vector simd code for the loop containing reductions
         Generated a prefetch instruction for the loop
[ 65%] Building C object CMakeFiles/globalsums.dir/do_sum_omp_wbittrunc.c.o
do_sum_omp_wbittrunc:
      9, Generated vector simd code for the loop containing reductions
         Generated a prefetch instruction for the loop
[ 70%] Building C object CMakeFiles/globalsums.dir/do_sum_wbittrunc.c.o
do_sum_wbittrunc:
      8, Generated an alternate version of the loop
         Generated vector simd code for the loop containing reductions
         Generated a prefetch instruction for the loop
         Generated vector simd code for the loop containing reductions
         Generated a prefetch instruction for the loop
[ 75%] Building C object CMakeFiles/globalsums.dir/do_sum_wdigittrunc.c.o
do_sum_wdigittrunc:
      7, Generated an alternate version of the loop
         Generated vector simd code for the loop containing reductions
         Generated a prefetch instruction for the loop
         Generated vector simd code for the loop containing reductions
         Generated a prefetch instruction for the loop
[ 80%] Building C object CMakeFiles/globalsums.dir/kahan_gcc_vector.c.o
do_kahan_sum_gcc_v:
     11, Generated 2 prefetches in scalar loop
[ 85%] Building C object CMakeFiles/globalsums.dir/kahan_gcc_vector8.c.o
do_kahan_sum_gcc_v8:
     10, Generated 3 prefetches in scalar loop
[ 90%] Building C object CMakeFiles/globalsums.dir/knuth_gcc_vector.c.o
do_knuth_sum_gcc_v:
     11, Generated 2 prefetches in scalar loop
[ 95%] Building C object CMakeFiles/globalsums.dir/knuth_gcc_vector8.c.o
do_knuth_sum_gcc_v8:
     11, Generated 3 prefetches in scalar loop
     30, Generated a prefetch instruction for the loop
[100%] Linking C executable globalsums
[100%] Built target globalsums
--- max num openmp threads: 1
--- num openmp threads in parallel region: 1
SETTINGS INFO -- ncells 16 log 4 ndigits 3 ndigitsld 0 nbits 8 nbitsld 2
Initializing mesh with Leblanc problem, high values first
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Serial sum
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000008   Serial sum (OpenMP SIMD pragma)
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000008   Serial sum with digit truncation
  accurate sum 0.8000000007999972 sum 0.8000000007999972 diff          0 relative diff          0 runtime 0.000000   Serial sum with bit truncation
  accurate sum 0.8000000008      sum 0.8000000008      diff -1.626e-19 relative diff -2.033e-19 runtime 0.000000   Serial sum with long double accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Serial sum with long double accumulator with ndigit truncation
  accurate sum 0.8000000007999999 sum 0.8000000007999999 diff          0 relative diff          0 runtime 0.000000   Serial sum with long double accumulator with bit truncation
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double kahan sum accumulator
  accurate sum 0.8000000008      sum 0.2000000002      diff       -0.6 relative diff      -0.75 runtime 0.000000   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 0.8000000008      sum 0.1000000001      diff       -0.7 relative diff     -0.875 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000001   Serial sum with double double knuth sum accumulator
  accurate sum 0.8000000008      sum 0.2000000002      diff       -0.6 relative diff      -0.75 runtime 0.000000   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 0.8000000008      sum 0.1000000001      diff       -0.7 relative diff     -0.875 runtime 0.000000   8 wide GCC vector extensions Knuth sum
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Pair-wise sum


  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   OpenMP sum
  accurate sum 0.8000000007999972 sum 0.8000000007999972 diff          0 relative diff          0 runtime 0.000001   OpenMP sum with bit truncation
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   OpenMP sum with double double kahan sum accumulator
  accurate sum 0.8000000007999999 sum 0.8000000007999999 diff          0 relative diff          0 runtime 0.000000   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 32 log 5 ndigits 4 ndigitsld 1 nbits 9 nbitsld 3
Initializing mesh with Leblanc problem, high values first
  accurate sum 1.6000000016      sum 1.6000000016      diff  4.441e-16 relative diff  2.776e-16 runtime 0.000000   Serial sum
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Serial sum with digit truncation
  accurate sum 1.600000001599938 sum 1.600000001599938 diff          0 relative diff          0 runtime 0.000000   Serial sum with bit truncation
  accurate sum 1.6000000016      sum 1.6000000016      diff  5.421e-19 relative diff  3.388e-19 runtime 0.000000   Serial sum with long double accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Serial sum with long double accumulator with ndigit truncation
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Serial sum with long double accumulator with bit truncation
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double kahan sum accumulator
  accurate sum 1.6000000016      sum 0.4000000004      diff       -1.2 relative diff      -0.75 runtime 0.000000   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 1.6000000016      sum 0.2000000002      diff       -1.4 relative diff     -0.875 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double knuth sum accumulator
  accurate sum 1.6000000016      sum 0.4000000004      diff       -1.2 relative diff      -0.75 runtime 0.000000   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 1.6000000016      sum 0.2000000002      diff       -1.4 relative diff     -0.875 runtime 0.000000   8 wide GCC vector extensions Knuth sum
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Pair-wise sum


  accurate sum 1.6000000016      sum 1.6000000016      diff   2.22e-16 relative diff  1.388e-16 runtime 0.000000   OpenMP sum
  accurate sum 1.600000001599994 sum 1.600000001599994 diff          0 relative diff          0 runtime 0.000000   OpenMP sum with bit truncation
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   OpenMP sum with double double kahan sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 64 log 6 ndigits 4 ndigitsld 1 nbits 9 nbitsld 3
Initializing mesh with Leblanc problem, high values first
  accurate sum 3.2000000032      sum 3.200000003200002 diff  1.776e-15 relative diff  5.551e-16 runtime 0.000000   Serial sum
  accurate sum 3.2000000032      sum 3.2000000032      diff  4.441e-16 relative diff  1.388e-16 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000002   Serial sum with digit truncation
  accurate sum 3.200000003199875 sum 3.200000003199875 diff          0 relative diff          0 runtime 0.000000   Serial sum with bit truncation
  accurate sum 3.2000000032      sum 3.2000000032      diff  1.084e-18 relative diff  3.388e-19 runtime 0.000000   Serial sum with long double accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Serial sum with long double accumulator with ndigit truncation
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Serial sum with long double accumulator with bit truncation
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double kahan sum accumulator
  accurate sum 3.2000000032      sum 0.8000000008      diff       -2.4 relative diff      -0.75 runtime 0.000000   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 3.2000000032      sum 0.4000000004      diff       -2.8 relative diff     -0.875 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double knuth sum accumulator
  accurate sum 3.2000000032      sum 0.8000000008      diff       -2.4 relative diff      -0.75 runtime 0.000000   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 3.2000000032      sum 0.4000000004      diff       -2.8 relative diff     -0.875 runtime 0.000000   8 wide GCC vector extensions Knuth sum
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Pair-wise sum


  accurate sum 3.2000000032      sum 3.2000000032      diff  4.441e-16 relative diff  1.388e-16 runtime 0.000000   OpenMP sum
  accurate sum 3.200000003199989 sum 3.200000003199989 diff          0 relative diff          0 runtime 0.000000   OpenMP sum with bit truncation
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000001   OpenMP sum with double double kahan sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000001   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 128 log 7 ndigits 4 ndigitsld 1 nbits 11 nbitsld 4
Initializing mesh with Leblanc problem, high values first
  accurate sum 6.4000000064      sum 6.400000006399994 diff -6.217e-15 relative diff -9.714e-16 runtime 0.000000   Serial sum
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   Serial sum with digit truncation
  accurate sum 6.400000006398841 sum 6.400000006398841 diff          0 relative diff          0 runtime 0.000000   Serial sum with bit truncation
  accurate sum 6.4000000064      sum 6.4000000064      diff  2.168e-18 relative diff  3.388e-19 runtime 0.000001   Serial sum with long double accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000001   Serial sum with long double accumulator with ndigit truncation
  accurate sum 6.400000006399992 sum 6.400000006399992 diff          0 relative diff          0 runtime 0.000001   Serial sum with long double accumulator with bit truncation
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000001   Serial sum with double double kahan sum accumulator
  accurate sum 6.4000000064      sum 1.6000000016      diff       -4.8 relative diff      -0.75 runtime 0.000000   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 6.4000000064      sum 0.8000000008      diff       -5.6 relative diff     -0.875 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000001   Serial sum with double double knuth sum accumulator
  accurate sum 6.4000000064      sum 1.6000000016      diff       -4.8 relative diff      -0.75 runtime 0.000000   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 6.4000000064      sum 0.8000000008      diff       -5.6 relative diff     -0.875 runtime 0.000000   8 wide GCC vector extensions Knuth sum
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   Pair-wise sum


  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   OpenMP sum
  accurate sum 6.400000006399978 sum 6.400000006399978 diff          0 relative diff          0 runtime 0.000000   OpenMP sum with bit truncation
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000001   OpenMP sum with double double kahan sum accumulator
  accurate sum 6.400000006399999 sum 6.400000006399999 diff          0 relative diff          0 runtime 0.000001   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 256 log 8 ndigits 4 ndigitsld 1 nbits 12 nbitsld 4
Initializing mesh with Leblanc problem, high values first
  accurate sum 12.8000000128     sum 12.80000001279997 diff -2.842e-14 relative diff  -2.22e-15 runtime 0.000000   Serial sum
  accurate sum 12.8000000128     sum 12.8000000128     diff  1.776e-15 relative diff  1.388e-16 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000000   Serial sum with digit truncation
  accurate sum 12.80000001279404 sum 12.80000001279404 diff          0 relative diff          0 runtime 0.000000   Serial sum with bit truncation
  accurate sum 12.8000000128     sum 12.8000000128     diff -5.117e-17 relative diff -3.998e-18 runtime 0.000001   Serial sum with long double accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000001   Serial sum with long double accumulator with ndigit truncation
  accurate sum 12.80000001279998 sum 12.80000001279998 diff          0 relative diff          0 runtime 0.000001   Serial sum with long double accumulator with bit truncation
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000001   Serial sum with double double kahan sum accumulator
  accurate sum 12.8000000128     sum 3.2000000032      diff       -9.6 relative diff      -0.75 runtime 0.000000   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 12.8000000128     sum 1.6000000016      diff      -11.2 relative diff     -0.875 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000002   Serial sum with double double knuth sum accumulator
  accurate sum 12.8000000128     sum 3.2000000032      diff       -9.6 relative diff      -0.75 runtime 0.000000   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 12.8000000128     sum 1.6000000016      diff      -11.2 relative diff     -0.875 runtime 0.000000   8 wide GCC vector extensions Knuth sum
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000000   Pair-wise sum


  accurate sum 12.8000000128     sum 12.8000000128     diff  3.553e-15 relative diff  2.776e-16 runtime 0.000000   OpenMP sum
  accurate sum 12.8000000127995  sum 12.8000000127995  diff          0 relative diff          0 runtime 0.000000   OpenMP sum with bit truncation
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000001   OpenMP sum with double double kahan sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000001   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 512 log 9 ndigits 4 ndigitsld 1 nbits 13 nbitsld 5
Initializing mesh with Leblanc problem, high values first
  accurate sum 25.6000000256     sum 25.60000002559964 diff -3.588e-13 relative diff -1.402e-14 runtime 0.000001   Serial sum
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000000   Serial sum with digit truncation
  accurate sum 25.60000002558809 sum 25.60000002558809 diff          0 relative diff          0 runtime 0.000000   Serial sum with bit truncation
  accurate sum 25.6000000256     sum 25.6000000256     diff -1.023e-16 relative diff -3.998e-18 runtime 0.000002   Serial sum with long double accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000002   Serial sum with long double accumulator with ndigit truncation
  accurate sum 25.60000002559991 sum 25.60000002559991 diff          0 relative diff          0 runtime 0.000002   Serial sum with long double accumulator with bit truncation
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000002   Serial sum with double double kahan sum accumulator
  accurate sum 25.6000000256     sum 6.4000000064      diff      -19.2 relative diff      -0.75 runtime 0.000000   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 25.6000000256     sum 3.2000000032      diff      -22.4 relative diff     -0.875 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000003   Serial sum with double double knuth sum accumulator
  accurate sum 25.6000000256     sum 6.4000000064      diff      -19.2 relative diff      -0.75 runtime 0.000001   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 25.6000000256     sum 3.2000000032      diff      -22.4 relative diff     -0.875 runtime 0.000000   8 wide GCC vector extensions Knuth sum
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000002   Pair-wise sum


  accurate sum 25.6000000256     sum 25.60000002560001 diff  1.421e-14 relative diff  5.551e-16 runtime 0.000000   OpenMP sum
  accurate sum 25.600000025599   sum 25.600000025599   diff          0 relative diff          0 runtime 0.000000   OpenMP sum with bit truncation
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000002   OpenMP sum with double double kahan sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000002   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 1024 log 10 ndigits 5 ndigitsld 2 nbits 14 nbitsld 6
Initializing mesh with Leblanc problem, high values first
  accurate sum 51.2000000512     sum 51.20000005120137 diff  1.371e-12 relative diff  2.678e-14 runtime 0.000001   Serial sum
  accurate sum 51.2000000512     sum 51.20000005119996 diff -3.553e-14 relative diff -6.939e-16 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 51.200000051      sum 51.200000051      diff          0 relative diff          0 runtime 0.000000   Serial sum with digit truncation
  accurate sum 51.20000005117618 sum 51.20000005117618 diff          0 relative diff          0 runtime 0.000000   Serial sum with bit truncation
  accurate sum 51.2000000512     sum 51.20000005120001 diff  6.835e-16 relative diff  1.335e-17 runtime 0.000005   Serial sum with long double accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000005   Serial sum with long double accumulator with ndigit truncation
  accurate sum 51.20000005119982 sum 51.20000005119982 diff          0 relative diff          0 runtime 0.000005   Serial sum with long double accumulator with bit truncation
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000004   Serial sum with double double kahan sum accumulator
  accurate sum 51.2000000512     sum 12.8000000128     diff      -38.4 relative diff      -0.75 runtime 0.000001   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 51.2000000512     sum 6.4000000064      diff      -44.8 relative diff     -0.875 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000007   Serial sum with double double knuth sum accumulator
  accurate sum 51.2000000512     sum 12.8000000128     diff      -38.4 relative diff      -0.75 runtime 0.000002   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 51.2000000512     sum 6.4000000064      diff      -44.8 relative diff     -0.875 runtime 0.000001   8 wide GCC vector extensions Knuth sum
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000002   Pair-wise sum


  accurate sum 51.2000000512     sum 51.20000005119995 diff -4.974e-14 relative diff -9.714e-16 runtime 0.000000   OpenMP sum
  accurate sum 51.20000005119073 sum 51.20000005119073 diff          0 relative diff          0 runtime 0.000000   OpenMP sum with bit truncation
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000004   OpenMP sum with double double kahan sum accumulator
  accurate sum 51.20000005119999 sum 51.20000005119999 diff          0 relative diff          0 runtime 0.000004   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 2047 log 10 ndigits 5 ndigitsld 2 nbits 14 nbitsld 6
Initializing mesh with Leblanc problem, high values first
  accurate sum 102.3000001023    sum 102.3000001024003 diff  1.003e-10 relative diff  9.803e-13 runtime 0.000002   Serial sum
  accurate sum 102.3000001023    sum 102.3000001023998 diff  9.979e-11 relative diff  9.755e-13 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 102.3000001       sum 102.3000001       diff          0 relative diff          0 runtime 0.000000   Serial sum with digit truncation
  accurate sum 102.3000001022592 sum 102.3000001022592 diff          0 relative diff          0 runtime 0.000000   Serial sum with bit truncation
  accurate sum 102.3000001023    sum 102.3000001024    diff      1e-10 relative diff  9.775e-13 runtime 0.000009   Serial sum with long double accumulator
  accurate sum 102.3000001023    sum 102.3000001024    diff      1e-10 relative diff  9.775e-13 runtime 0.000019   Serial sum with long double accumulator with ndigit truncation
  accurate sum 102.3000001022992 sum 102.3000001023993 diff      1e-10 relative diff   9.78e-13 runtime 0.000009   Serial sum with long double accumulator with bit truncation
  accurate sum 102.3000001023    sum 102.3000001024    diff      1e-10 relative diff  9.775e-13 runtime 0.000008   Serial sum with double double kahan sum accumulator
  accurate sum 102.3000001023    sum 25.6000000256     diff      -76.7 relative diff    -0.7498 runtime 0.000002   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 102.3000001023    sum 12.8000000128     diff      -89.5 relative diff    -0.8749 runtime 0.000001   8 wide GCC vector extensions Kahan sum
  accurate sum 102.3000001023    sum 102.3000001024    diff      1e-10 relative diff  9.775e-13 runtime 0.000014   Serial sum with double double knuth sum accumulator
  accurate sum 102.3000001023    sum 25.6000000256     diff      -76.7 relative diff    -0.7498 runtime 0.000003   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 102.3000001023    sum 12.8000000128     diff      -89.5 relative diff    -0.8749 runtime 0.000002   8 wide GCC vector extensions Knuth sum
  accurate sum 102.3000001023    sum 102.3000000001    diff -1.022e-07 relative diff  -9.99e-10 runtime 0.000004   Pair-wise sum


  accurate sum 102.3000001023    sum 102.3000001023998 diff  9.977e-11 relative diff  9.753e-13 runtime 0.000001   OpenMP sum
  accurate sum 102.3000001022592 sum 102.3000001023756 diff  1.164e-10 relative diff  1.138e-12 runtime 0.000001   OpenMP sum with bit truncation
  accurate sum 102.3000001023    sum 102.3000001024    diff      1e-10 relative diff  9.775e-13 runtime 0.000008   OpenMP sum with double double kahan sum accumulator
  accurate sum 102.3000001023    sum 102.3000001024    diff  9.999e-11 relative diff  9.774e-13 runtime 0.000008   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 4096 log 12 ndigits 5 ndigitsld 2 nbits 15 nbitsld 7
Initializing mesh with Leblanc problem, high values first
  accurate sum 204.8000002048    sum 204.8000002047672 diff  -3.28e-11 relative diff -1.601e-13 runtime 0.000004   Serial sum
  accurate sum 204.8000002048    sum 204.8000002047971 diff -2.927e-12 relative diff -1.429e-14 runtime 0.000001   Serial sum (OpenMP SIMD pragma)
  accurate sum 204.8000002       sum 204.8000002       diff          0 relative diff          0 runtime 0.000001   Serial sum with digit truncation
  accurate sum 204.8000002047047 sum 204.8000002047047 diff          0 relative diff          0 runtime 0.000001   Serial sum with bit truncation
  accurate sum 204.8000002048    sum 204.8000002048    diff -1.148e-14 relative diff -5.604e-17 runtime 0.000018   Serial sum with long double accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000019   Serial sum with long double accumulator with ndigit truncation
  accurate sum 204.8000002047993 sum 204.8000002047993 diff          0 relative diff          0 runtime 0.000019   Serial sum with long double accumulator with bit truncation
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000015   Serial sum with double double kahan sum accumulator
  accurate sum 204.8000002048    sum 51.2000000512     diff     -153.6 relative diff      -0.75 runtime 0.000003   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 204.8000002048    sum 25.6000000256     diff     -179.2 relative diff     -0.875 runtime 0.000002   8 wide GCC vector extensions Kahan sum
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000027   Serial sum with double double knuth sum accumulator
  accurate sum 204.8000002048    sum 51.2000000512     diff     -153.6 relative diff      -0.75 runtime 0.000006   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 204.8000002048    sum 25.6000000256     diff     -179.2 relative diff     -0.875 runtime 0.000003   8 wide GCC vector extensions Knuth sum
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000007   Pair-wise sum


  accurate sum 204.8000002048    sum 204.8000002047971 diff -2.871e-12 relative diff -1.402e-14 runtime 0.000001   OpenMP sum
  accurate sum 204.8000002047047 sum 204.8000002047047 diff          0 relative diff          0 runtime 0.000001   OpenMP sum with bit truncation
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000016   OpenMP sum with double double kahan sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000016   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 8192 log 13 ndigits 5 ndigitsld 2 nbits 17 nbitsld 7
Initializing mesh with Leblanc problem, high values first
  accurate sum 409.6000004096    sum 409.6000004095737 diff -2.626e-11 relative diff -6.412e-14 runtime 0.000008   Serial sum
  accurate sum 409.6000004096    sum 409.6000004096109 diff  1.086e-11 relative diff  2.651e-14 runtime 0.000001   Serial sum (OpenMP SIMD pragma)
  accurate sum 409.60000041      sum 409.60000041      diff          0 relative diff          0 runtime 0.000001   Serial sum with digit truncation
  accurate sum 409.6000004038215 sum 409.6000004038215 diff          0 relative diff          0 runtime 0.000001   Serial sum with bit truncation
  accurate sum 409.6000004096    sum 409.6000004096001 diff  3.389e-14 relative diff  8.274e-17 runtime 0.000037   Serial sum with long double accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000037   Serial sum with long double accumulator with ndigit truncation
  accurate sum 409.6000004095986 sum 409.6000004095986 diff          0 relative diff          0 runtime 0.000037   Serial sum with long double accumulator with bit truncation
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000030   Serial sum with double double kahan sum accumulator
  accurate sum 409.6000004096    sum 102.4000001024    diff     -307.2 relative diff      -0.75 runtime 0.000006   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 409.6000004096    sum 51.2000000512     diff     -358.4 relative diff     -0.875 runtime 0.000003   8 wide GCC vector extensions Kahan sum
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000055   Serial sum with double double knuth sum accumulator
  accurate sum 409.6000004096    sum 102.4000001024    diff     -307.2 relative diff      -0.75 runtime 0.000012   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 409.6000004096    sum 51.2000000512     diff     -358.4 relative diff     -0.875 runtime 0.000006   8 wide GCC vector extensions Knuth sum
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000019   Pair-wise sum


  accurate sum 409.6000004096    sum 409.600000409611  diff  1.097e-11 relative diff  2.678e-14 runtime 0.000001   OpenMP sum
  accurate sum 409.6000004094094 sum 409.6000004094094 diff          0 relative diff          0 runtime 0.000001   OpenMP sum with bit truncation
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000031   OpenMP sum with double double kahan sum accumulator
  accurate sum 409.6000004095999 sum 409.6000004095999 diff          0 relative diff          0 runtime 0.000031   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 16384 log 14 ndigits 5 ndigitsld 2 nbits 18 nbitsld 8
Initializing mesh with Leblanc problem, high values first
  accurate sum 819.2000008192    sum 819.2000008196816 diff  4.816e-10 relative diff  5.879e-13 runtime 0.000016   Serial sum
  accurate sum 819.2000008192    sum 819.2000008192026 diff  2.615e-12 relative diff  3.192e-15 runtime 0.000002   Serial sum (OpenMP SIMD pragma)
  accurate sum 819.20000082      sum 819.20000082      diff          0 relative diff          0 runtime 0.000002   Serial sum with digit truncation
  accurate sum 819.2000007927418 sum 819.2000007927418 diff          0 relative diff          0 runtime 0.000002   Serial sum with bit truncation
  accurate sum 819.2000008192    sum 819.2000008192    diff -1.749e-14 relative diff -2.135e-17 runtime 0.000074   Serial sum with long double accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000074   Serial sum with long double accumulator with ndigit truncation
  accurate sum 819.2000008191972 sum 819.2000008191972 diff          0 relative diff          0 runtime 0.000074   Serial sum with long double accumulator with bit truncation
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000067   Serial sum with double double kahan sum accumulator
  accurate sum 819.2000008192    sum 204.8000002048    diff     -614.4 relative diff      -0.75 runtime 0.000012   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 819.2000008192    sum 102.4000001024    diff     -716.8 relative diff     -0.875 runtime 0.000006   8 wide GCC vector extensions Kahan sum
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000109   Serial sum with double double knuth sum accumulator
  accurate sum 819.2000008192    sum 204.8000002048    diff     -614.4 relative diff      -0.75 runtime 0.000025   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 819.2000008192    sum 102.4000001024    diff     -716.8 relative diff     -0.875 runtime 0.000012   8 wide GCC vector extensions Knuth sum
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000028   Pair-wise sum


  accurate sum 819.2000008192    sum 819.2000008192023 diff  2.274e-12 relative diff  2.776e-15 runtime 0.000003   OpenMP sum
  accurate sum 819.2000008188188 sum 819.2000008188188 diff          0 relative diff          0 runtime 0.000002   OpenMP sum with bit truncation
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000061   OpenMP sum with double double kahan sum accumulator
  accurate sum 819.2000008191999 sum 819.2000008191999 diff          0 relative diff          0 runtime 0.000061   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 32768 log 15 ndigits 6 ndigitsld 3 nbits 19 nbitsld 9
Initializing mesh with Leblanc problem, high values first
  accurate sum 1638.4000016384   sum 1638.400001638733 diff  3.331e-10 relative diff  2.033e-13 runtime 0.000033   Serial sum
  accurate sum 1638.4000016384   sum 1638.400001638138 diff -2.619e-10 relative diff -1.599e-13 runtime 0.000004   Serial sum (OpenMP SIMD pragma)
  accurate sum 1638.400002       sum 1638.400002       diff          0 relative diff          0 runtime 0.000004   Serial sum with digit truncation
  accurate sum 1638.400001525879 sum 1638.400001525879 diff          0 relative diff          0 runtime 0.000004   Serial sum with bit truncation
  accurate sum 1638.4000016384   sum 1638.4000016384   diff -1.771e-13 relative diff -1.081e-16 runtime 0.000148   Serial sum with long double accumulator
  accurate sum 1638.400001638    sum 1638.400001638    diff          0 relative diff          0 runtime 0.000148   Serial sum with long double accumulator with ndigit truncation
  accurate sum 1638.400001638336 sum 1638.400001638336 diff          0 relative diff          0 runtime 0.000148   Serial sum with long double accumulator with bit truncation
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000127   Serial sum with double double kahan sum accumulator
  accurate sum 1638.4000016384   sum 409.6000004096    diff      -1229 relative diff      -0.75 runtime 0.000025   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 1638.4000016384   sum 204.8000002048    diff      -1434 relative diff     -0.875 runtime 0.000012   8 wide GCC vector extensions Kahan sum
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000218   Serial sum with double double knuth sum accumulator
  accurate sum 1638.4000016384   sum 409.6000004096    diff      -1229 relative diff      -0.75 runtime 0.000049   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 1638.4000016384   sum 204.8000002048    diff      -1434 relative diff     -0.875 runtime 0.000025   8 wide GCC vector extensions Knuth sum
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000018   Pair-wise sum


  accurate sum 1638.4000016384   sum 1638.400001638138 diff -2.624e-10 relative diff -1.601e-13 runtime 0.000005   OpenMP sum
  accurate sum 1638.400001630187 sum 1638.400001630187 diff          0 relative diff          0 runtime 0.000005   OpenMP sum with bit truncation
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000122   OpenMP sum with double double kahan sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000122   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 65536 log 16 ndigits 6 ndigitsld 3 nbits 20 nbitsld 9
Initializing mesh with Leblanc problem, high values first
  accurate sum 3276.8000032768   sum 3276.800003276371 diff -4.293e-10 relative diff  -1.31e-13 runtime 0.000071   Serial sum
  accurate sum 3276.8000032768   sum 3276.80000327659  diff -2.101e-10 relative diff -6.412e-14 runtime 0.000009   Serial sum (OpenMP SIMD pragma)
  accurate sum 3276.800003       sum 3276.800003       diff          0 relative diff          0 runtime 0.000009   Serial sum with digit truncation
  accurate sum 3276.800003051758 sum 3276.800003051758 diff          0 relative diff          0 runtime 0.000009   Serial sum with bit truncation
  accurate sum 3276.8000032768   sum 3276.800003276801 diff   8.68e-13 relative diff  2.649e-16 runtime 0.000295   Serial sum with long double accumulator
  accurate sum 3276.800003277    sum 3276.800003277    diff          0 relative diff          0 runtime 0.000295   Serial sum with long double accumulator with ndigit truncation
  accurate sum 3276.800003276672 sum 3276.800003276672 diff          0 relative diff          0 runtime 0.000295   Serial sum with long double accumulator with bit truncation
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000253   Serial sum with double double kahan sum accumulator
  accurate sum 3276.8000032768   sum 819.2000008192    diff      -2458 relative diff      -0.75 runtime 0.000049   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 3276.8000032768   sum 409.6000004096    diff      -2867 relative diff     -0.875 runtime 0.000025   8 wide GCC vector extensions Kahan sum
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000437   Serial sum with double double knuth sum accumulator
  accurate sum 3276.8000032768   sum 819.2000008192    diff      -2458 relative diff      -0.75 runtime 0.000098   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 3276.8000032768   sum 409.6000004096    diff      -2867 relative diff     -0.875 runtime 0.000049   8 wide GCC vector extensions Knuth sum
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000034   Pair-wise sum


  accurate sum 3276.8000032768   sum 3276.80000327659  diff -2.101e-10 relative diff -6.412e-14 runtime 0.000009   OpenMP sum
  accurate sum 3276.800003260374 sum 3276.800003260374 diff          0 relative diff          0 runtime 0.000009   OpenMP sum with bit truncation
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000244   OpenMP sum with double double kahan sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000243   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 131072 log 17 ndigits 6 ndigitsld 3 nbits 21 nbitsld 10
Initializing mesh with Leblanc problem, high values first
  accurate sum 6553.6000065536   sum 6553.600006562821 diff  9.221e-09 relative diff  1.407e-12 runtime 0.000131   Serial sum
  accurate sum 6553.6000065536   sum 6553.600006557453 diff  3.853e-09 relative diff  5.879e-13 runtime 0.000018   Serial sum (OpenMP SIMD pragma)
  accurate sum 6553.600007       sum 6553.600007       diff          0 relative diff          0 runtime 0.000024   Serial sum with digit truncation
  accurate sum 6553.600006103516 sum 6553.600006103516 diff          0 relative diff          0 runtime 0.000018   Serial sum with bit truncation
  accurate sum 6553.6000065536   sum 6553.600006553605 diff  3.868e-12 relative diff  5.901e-16 runtime 0.000590   Serial sum with long double accumulator
  accurate sum 6553.600006554    sum 6553.600006554    diff          0 relative diff          0 runtime 0.000593   Serial sum with long double accumulator with ndigit truncation
  accurate sum 6553.600006553344 sum 6553.600006553344 diff          0 relative diff          0 runtime 0.000590   Serial sum with long double accumulator with bit truncation
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000493   Serial sum with double double kahan sum accumulator
  accurate sum 6553.6000065536   sum 1638.4000016384   diff      -4915 relative diff      -0.75 runtime 0.000098   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 6553.6000065536   sum 819.2000008192    diff      -5734 relative diff     -0.875 runtime 0.000049   8 wide GCC vector extensions Kahan sum
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000878   Serial sum with double double knuth sum accumulator
  accurate sum 6553.6000065536   sum 1638.4000016384   diff      -4915 relative diff      -0.75 runtime 0.000197   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 6553.6000065536   sum 819.2000008192    diff      -5734 relative diff     -0.875 runtime 0.000098   8 wide GCC vector extensions Knuth sum
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000067   Pair-wise sum


  accurate sum 6553.6000065536   sum 6553.600006557453 diff  3.853e-09 relative diff  5.879e-13 runtime 0.000019   OpenMP sum
  accurate sum 6553.600006461143 sum 6553.600006461143 diff          0 relative diff          0 runtime 0.000019   OpenMP sum with bit truncation
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000494   OpenMP sum with double double kahan sum accumulator
  accurate sum 6553.600006553599 sum 6553.600006553599 diff          0 relative diff          0 runtime 0.000487   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 262144 log 18 ndigits 6 ndigitsld 3 nbits 22 nbitsld 10
Initializing mesh with Leblanc problem, high values first
  accurate sum 13107.2000131072  sum 13107.20001314317 diff  3.597e-08 relative diff  2.745e-12 runtime 0.000263   Serial sum
  accurate sum 13107.2000131072  sum 13107.20001310986 diff  2.665e-09 relative diff  2.033e-13 runtime 0.000038   Serial sum (OpenMP SIMD pragma)
  accurate sum 13107.20001       sum 13107.20001       diff          0 relative diff          0 runtime 0.000038   Serial sum with digit truncation
  accurate sum 13107.20001220703 sum 13107.20001220703 diff          0 relative diff          0 runtime 0.000038   Serial sum with bit truncation
  accurate sum 13107.2000131072  sum 13107.20001310719 diff -1.196e-11 relative diff -9.126e-16 runtime 0.001185   Serial sum with long double accumulator
  accurate sum 13107.20001311    sum 13107.20001311    diff          0 relative diff          0 runtime 0.001186   Serial sum with long double accumulator with ndigit truncation
  accurate sum 13107.20001310669 sum 13107.20001310669 diff          0 relative diff          0 runtime 0.001183   Serial sum with long double accumulator with bit truncation
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000975   Serial sum with double double kahan sum accumulator
  accurate sum 13107.2000131072  sum 3276.8000032768   diff      -9830 relative diff      -0.75 runtime 0.000197   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 13107.2000131072  sum 1638.4000016384   diff -1.147e+04 relative diff     -0.875 runtime 0.000098   8 wide GCC vector extensions Kahan sum
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.001752   Serial sum with double double knuth sum accumulator
  accurate sum 13107.2000131072  sum 3276.8000032768   diff      -9830 relative diff      -0.75 runtime 0.000393   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 13107.2000131072  sum 1638.4000016384   diff -1.147e+04 relative diff     -0.875 runtime 0.000200   8 wide GCC vector extensions Knuth sum
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000135   Pair-wise sum


  accurate sum 13107.2000131072  sum 13107.20001310986 diff  2.665e-09 relative diff  2.033e-13 runtime 0.000039   OpenMP sum
  accurate sum 13107.20001268387 sum 13107.20001268387 diff          0 relative diff          0 runtime 0.000038   OpenMP sum with bit truncation
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000976   OpenMP sum with double double kahan sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000975   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 524288 log 19 ndigits 6 ndigitsld 3 nbits 23 nbitsld 11
Initializing mesh with Leblanc problem, high values first
  accurate sum 26214.4000262144  sum 26214.40002564823 diff -5.662e-07 relative diff  -2.16e-11 runtime 0.000531   Serial sum
  accurate sum 26214.4000262144  sum 26214.40002621096 diff -3.442e-09 relative diff -1.313e-13 runtime 0.000077   Serial sum (OpenMP SIMD pragma)
  accurate sum 26214.40003       sum 26214.40003       diff          0 relative diff          0 runtime 0.000075   Serial sum with digit truncation
  accurate sum 26214.40002441406 sum 26214.40002441406 diff          0 relative diff          0 runtime 0.000073   Serial sum with bit truncation
  accurate sum 26214.4000262144  sum 26214.40002621434 diff -5.817e-11 relative diff -2.219e-15 runtime 0.002368   Serial sum with long double accumulator
  accurate sum 26214.40002621    sum 26214.40002621    diff          0 relative diff          0 runtime 0.002373   Serial sum with long double accumulator with ndigit truncation
  accurate sum 26214.40002620965 sum 26214.40002620965 diff          0 relative diff          0 runtime 0.002366   Serial sum with long double accumulator with bit truncation
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.001949   Serial sum with double double kahan sum accumulator
  accurate sum 26214.4000262144  sum 6553.6000065536   diff -1.966e+04 relative diff      -0.75 runtime 0.000393   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 26214.4000262144  sum 3276.8000032768   diff -2.294e+04 relative diff     -0.875 runtime 0.000199   8 wide GCC vector extensions Kahan sum
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.003502   Serial sum with double double knuth sum accumulator
  accurate sum 26214.4000262144  sum 6553.6000065536   diff -1.966e+04 relative diff      -0.75 runtime 0.000789   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 26214.4000262144  sum 3276.8000032768   diff -2.294e+04 relative diff     -0.875 runtime 0.000394   8 wide GCC vector extensions Knuth sum
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.000296   Pair-wise sum


  accurate sum 26214.4000262144  sum 26214.40002621097 diff -3.434e-09 relative diff  -1.31e-13 runtime 0.000089   OpenMP sum
  accurate sum 26214.40002441406 sum 26214.40002441406 diff          0 relative diff          0 runtime 0.000087   OpenMP sum with bit truncation
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.001949   OpenMP sum with double double kahan sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.001947   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 1048576 log 20 ndigits 7 ndigitsld 4 nbits 24 nbitsld 12
Initializing mesh with Leblanc problem, high values first
  accurate sum 52428.8000524288  sum 52428.80005292332 diff  4.945e-07 relative diff  9.432e-12 runtime 0.001075   Serial sum
  accurate sum 52428.8000524288  sum 52428.80005250258 diff  7.378e-08 relative diff  1.407e-12 runtime 0.000258   Serial sum (OpenMP SIMD pragma)
  accurate sum 52428.8001        sum 52428.8001        diff          0 relative diff          0 runtime 0.000264   Serial sum with digit truncation
  accurate sum 52428.80004882812 sum 52428.80004882812 diff          0 relative diff          0 runtime 0.000251   Serial sum with bit truncation
  accurate sum 52428.8000524288  sum 52428.80005242807 diff -7.327e-10 relative diff -1.397e-14 runtime 0.004743   Serial sum with long double accumulator
  accurate sum 52428.8000524     sum 52428.8000524     diff          0 relative diff          0 runtime 0.004735   Serial sum with long double accumulator with ndigit truncation
  accurate sum 52428.8000524044  sum 52428.8000524044  diff          0 relative diff          0 runtime 0.004732   Serial sum with long double accumulator with bit truncation
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.003898   Serial sum with double double kahan sum accumulator
  accurate sum 52428.8000524288  sum 13107.2000131072  diff -3.932e+04 relative diff      -0.75 runtime 0.000816   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 52428.8000524288  sum 6553.6000065536   diff -4.588e+04 relative diff     -0.875 runtime 0.000404   8 wide GCC vector extensions Kahan sum
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.007013   Serial sum with double double knuth sum accumulator
  accurate sum 52428.8000524288  sum 13107.2000131072  diff -3.932e+04 relative diff      -0.75 runtime 0.001586   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 52428.8000524288  sum 6553.6000065536   diff -4.588e+04 relative diff     -0.875 runtime 0.000800   8 wide GCC vector extensions Knuth sum
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.001110   Pair-wise sum


  accurate sum 52428.8000524288  sum 52428.80005250257 diff  7.377e-08 relative diff  1.407e-12 runtime 0.000342   OpenMP sum
  accurate sum 52428.80004882812 sum 52428.80004882812 diff          0 relative diff          0 runtime 0.000283   OpenMP sum with bit truncation
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.003908   OpenMP sum with double double kahan sum accumulator
  accurate sum 52428.80005242879 sum 52428.80005242879 diff          0 relative diff          0 runtime 0.003901   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 2097151 log 20 ndigits 7 ndigitsld 4 nbits 24 nbitsld 12
Initializing mesh with Leblanc problem, high values first
  accurate sum 104857.5001048575 sum 104857.5001084271 diff   3.57e-06 relative diff  3.404e-11 runtime 0.002189   Serial sum
  accurate sum 104857.5001048575 sum 104857.5001051454 diff  2.879e-07 relative diff  2.746e-12 runtime 0.000765   Serial sum (OpenMP SIMD pragma)
  accurate sum 104857.5          sum 104857.5          diff          0 relative diff          0 runtime 0.000782   Serial sum with digit truncation
  accurate sum 104857.5          sum 104857.5          diff          0 relative diff          0 runtime 0.000775   Serial sum with bit truncation
  accurate sum 104857.5001048575 sum 104857.5001048604 diff  2.908e-09 relative diff  2.773e-14 runtime 0.009478   Serial sum with long double accumulator
  accurate sum 104857.500105     sum 104857.500105     diff          0 relative diff          0 runtime 0.009468   Serial sum with long double accumulator with ndigit truncation
  accurate sum 104857.5001048446 sum 104857.5001048446 diff          0 relative diff          0 runtime 0.009462   Serial sum with long double accumulator with bit truncation
  accurate sum 104857.5001048575 sum 104857.5001048576 diff  1.019e-10 relative diff  9.714e-16 runtime 0.007803   Serial sum with double double kahan sum accumulator
  accurate sum 104857.5001048575 sum 26214.4000262144  diff -7.864e+04 relative diff      -0.75 runtime 0.001738   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 104857.5001048575 sum 13107.2000131072  diff -9.175e+04 relative diff     -0.875 runtime 0.000884   8 wide GCC vector extensions Kahan sum
  accurate sum 104857.5001048575 sum 104857.5001048576 diff  1.019e-10 relative diff  9.714e-16 runtime 0.014024   Serial sum with double double knuth sum accumulator
  accurate sum 104857.5001048575 sum 26214.4000262144  diff -7.864e+04 relative diff      -0.75 runtime 0.003194   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 104857.5001048575 sum 13107.2000131072  diff -9.175e+04 relative diff     -0.875 runtime 0.001601   8 wide GCC vector extensions Knuth sum
  accurate sum 104857.5001048575 sum 104857.5000000001 diff -0.0001049 relative diff     -1e-09 runtime 0.002286   Pair-wise sum


  accurate sum 104857.5001048575 sum 104857.5001051454 diff  2.879e-07 relative diff  2.746e-12 runtime 0.001107   OpenMP sum
  accurate sum 104857.5000915527 sum 104857.5000915527 diff          0 relative diff          0 runtime 0.000772   OpenMP sum with bit truncation
  accurate sum 104857.5001048575 sum 104857.5001048576 diff  1.019e-10 relative diff  9.714e-16 runtime 0.007817   OpenMP sum with double double kahan sum accumulator
  accurate sum 104857.5001048575 sum 104857.5001048576 diff  1.164e-10 relative diff   1.11e-15 runtime 0.007806   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 4194304 log 22 ndigits 7 ndigitsld 4 nbits 26 nbitsld 13
Initializing mesh with Leblanc problem, high values first
  accurate sum 209715.2002097152 sum 209715.2001908246 diff -1.889e-05 relative diff -9.008e-11 runtime 0.004354   Serial sum
  accurate sum 209715.2002097152 sum 209715.2002051858 diff -4.529e-06 relative diff  -2.16e-11 runtime 0.001527   Serial sum (OpenMP SIMD pragma)
  accurate sum 209715.2          sum 209715.2          diff          0 relative diff          0 runtime 0.001543   Serial sum with digit truncation
  accurate sum 209715.19921875   sum 209715.19921875   diff          0 relative diff          0 runtime 0.001528   Serial sum with bit truncation
  accurate sum 209715.2002097152 sum 209715.2002097158 diff  5.755e-10 relative diff  2.744e-15 runtime 0.018943   Serial sum with long double accumulator
  accurate sum 209715.20021      sum 209715.20021      diff          0 relative diff          0 runtime 0.018928   Serial sum with long double accumulator with ndigit truncation
  accurate sum 209715.2002096176 sum 209715.2002096176 diff          0 relative diff          0 runtime 0.018922   Serial sum with long double accumulator with bit truncation
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.015594   Serial sum with double double kahan sum accumulator
  accurate sum 209715.2002097152 sum 52428.8000524288  diff -1.573e+05 relative diff      -0.75 runtime 0.003491   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 209715.2002097152 sum 26214.4000262144  diff -1.835e+05 relative diff     -0.875 runtime 0.001748   8 wide GCC vector extensions Kahan sum
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.028029   Serial sum with double double knuth sum accumulator
  accurate sum 209715.2002097152 sum 52428.8000524288  diff -1.573e+05 relative diff      -0.75 runtime 0.006385   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 209715.2002097152 sum 26214.4000262144  diff -1.835e+05 relative diff     -0.875 runtime 0.003187   8 wide GCC vector extensions Knuth sum
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.004502   Pair-wise sum


  accurate sum 209715.2002097152 sum 209715.2002051858 diff -4.529e-06 relative diff  -2.16e-11 runtime 0.001861   OpenMP sum
  accurate sum 209715.2001953125 sum 209715.2001953125 diff          0 relative diff          0 runtime 0.001521   OpenMP sum with bit truncation
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.015608   OpenMP sum with double double kahan sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.015594   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 8388608 log 23 ndigits 7 ndigitsld 4 nbits 27 nbitsld 13
Initializing mesh with Leblanc problem, high values first
  accurate sum 419430.4004194304 sum 419430.400462431  diff    4.3e-05 relative diff  1.025e-10 runtime 0.008770   Serial sum
  accurate sum 419430.4004194304 sum 419430.4004233867 diff  3.956e-06 relative diff  9.432e-12 runtime 0.003049   Serial sum (OpenMP SIMD pragma)
  accurate sum 419430.4          sum 419430.4          diff          0 relative diff          0 runtime 0.003058   Serial sum with digit truncation
  accurate sum 419430.3984375    sum 419430.3984375    diff          0 relative diff          0 runtime 0.003051   Serial sum with bit truncation
  accurate sum 419430.4004194304 sum 419430.4004193632 diff -6.722e-08 relative diff -1.603e-13 runtime 0.037884   Serial sum with long double accumulator
  accurate sum 419430.400419     sum 419430.400419     diff          0 relative diff          0 runtime 0.037864   Serial sum with long double accumulator with ndigit truncation
  accurate sum 419430.4004192352 sum 419430.4004192352 diff          0 relative diff          0 runtime 0.037843   Serial sum with long double accumulator with bit truncation
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.031180   Serial sum with double double kahan sum accumulator
  accurate sum 419430.4004194304 sum 104857.6001048576 diff -3.146e+05 relative diff      -0.75 runtime 0.006966   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 419430.4004194304 sum 52428.8000524288  diff  -3.67e+05 relative diff     -0.875 runtime 0.003493   8 wide GCC vector extensions Kahan sum
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.056059   Serial sum with double double knuth sum accumulator
  accurate sum 419430.4004194304 sum 104857.6001048576 diff -3.146e+05 relative diff      -0.75 runtime 0.012771   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 419430.4004194304 sum 52428.8000524288  diff  -3.67e+05 relative diff     -0.875 runtime 0.006353   8 wide GCC vector extensions Knuth sum
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.011808   Pair-wise sum


  accurate sum 419430.4004194304 sum 419430.4004233865 diff  3.956e-06 relative diff  9.432e-12 runtime 0.003377   OpenMP sum
  accurate sum 419430.400390625  sum 419430.400390625  diff          0 relative diff          0 runtime 0.003032   OpenMP sum with bit truncation
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.031192   OpenMP sum with double double kahan sum accumulator
  accurate sum 419430.4004194303 sum 419430.4004194303 diff          0 relative diff          0 runtime 0.031188   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 16777216 log 24 ndigits 7 ndigitsld 4 nbits 27 nbitsld 14
Initializing mesh with Leblanc problem, high values first
  accurate sum 838860.8008388608 sum 838860.800853056  diff   1.42e-05 relative diff  1.692e-11 runtime 0.017389   Serial sum
  accurate sum 838860.8008388608 sum 838860.8008674172 diff  2.856e-05 relative diff  3.404e-11 runtime 0.006090   Serial sum (OpenMP SIMD pragma)
  accurate sum 838860.801        sum 838860.801        diff          0 relative diff          0 runtime 0.006102   Serial sum with digit truncation
  accurate sum 838860.796875     sum 838860.796875     diff          0 relative diff          0 runtime 0.006093   Serial sum with bit truncation
  accurate sum 838860.8008388608 sum 838860.800838807  diff  -5.38e-08 relative diff -6.413e-14 runtime 0.075685   Serial sum with long double accumulator
  accurate sum 838860.800839     sum 838860.800839     diff          0 relative diff          0 runtime 0.075700   Serial sum with long double accumulator with ndigit truncation
  accurate sum 838860.8008384705 sum 838860.8008384705 diff          0 relative diff          0 runtime 0.075687   Serial sum with long double accumulator with bit truncation
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.062354   Serial sum with double double kahan sum accumulator
  accurate sum 838860.8008388608 sum 209715.2002097152 diff -6.291e+05 relative diff      -0.75 runtime 0.013944   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 838860.8008388608 sum 104857.6001048576 diff  -7.34e+05 relative diff     -0.875 runtime 0.007020   8 wide GCC vector extensions Kahan sum
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.112086   Serial sum with double double knuth sum accumulator
  accurate sum 838860.8008388608 sum 209715.2002097152 diff -6.291e+05 relative diff      -0.75 runtime 0.025517   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 838860.8008388608 sum 104857.6001048576 diff  -7.34e+05 relative diff     -0.875 runtime 0.012719   8 wide GCC vector extensions Knuth sum
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.023568   Pair-wise sum


  accurate sum 838860.8008388608 sum 838860.8008674172 diff  2.856e-05 relative diff  3.404e-11 runtime 0.006420   OpenMP sum
  accurate sum 838860.80078125   sum 838860.80078125   diff          0 relative diff          0 runtime 0.006054   OpenMP sum with bit truncation
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.062379   OpenMP sum with double double kahan sum accumulator
  accurate sum 838860.8008388607 sum 838860.8008388607 diff          0 relative diff          0 runtime 0.062360   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 33554432 log 25 ndigits 8 ndigitsld 5 nbits 29 nbitsld 15
Initializing mesh with Leblanc problem, high values first
  accurate sum 1677721.601677722 sum 1677721.600413603 diff  -0.001264 relative diff -7.535e-10 runtime 0.034898   Serial sum
  accurate sum 1677721.601677722 sum 1677721.601526596 diff -0.0001511 relative diff -9.008e-11 runtime 0.012177   Serial sum (OpenMP SIMD pragma)
  accurate sum 1677721.6         sum 1677721.6         diff          0 relative diff          0 runtime 0.012187   Serial sum with digit truncation
  accurate sum 1677721.5         sum 1677721.5         diff          0 relative diff          0 runtime 0.012191   Serial sum with bit truncation
  accurate sum 1677721.601677722 sum 1677721.601678708 diff  9.863e-07 relative diff  5.879e-13 runtime 0.151346   Serial sum with long double accumulator
  accurate sum 1677721.6017      sum 1677721.6017      diff          0 relative diff          0 runtime 0.151383   Serial sum with long double accumulator with ndigit truncation
  accurate sum 1677721.601676941 sum 1677721.601676941 diff          0 relative diff          0 runtime 0.151343   Serial sum with long double accumulator with bit truncation
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.124702   Serial sum with double double kahan sum accumulator
  accurate sum 1677721.601677722 sum 419430.4004194304 diff -1.258e+06 relative diff      -0.75 runtime 0.027897   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 1677721.601677722 sum 209715.2002097152 diff -1.468e+06 relative diff     -0.875 runtime 0.014008   8 wide GCC vector extensions Kahan sum
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.224168   Serial sum with double double knuth sum accumulator
  accurate sum 1677721.601677722 sum 419430.4004194304 diff -1.258e+06 relative diff      -0.75 runtime 0.051063   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 1677721.601677722 sum 209715.2002097152 diff -1.468e+06 relative diff     -0.875 runtime 0.025460   8 wide GCC vector extensions Knuth sum
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.047107   Pair-wise sum


  accurate sum 1677721.601677722 sum 1677721.601526597 diff -0.0001511 relative diff -9.008e-11 runtime 0.012470   OpenMP sum
  accurate sum 1677721.6015625   sum 1677721.59375     diff  -0.007812 relative diff -4.657e-09 runtime 0.012106   OpenMP sum with bit truncation
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.124722   OpenMP sum with double double kahan sum accumulator
  accurate sum 1677721.601677721 sum 1677721.601677721 diff          0 relative diff          0 runtime 0.124725   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 67108864 log 26 ndigits 8 ndigitsld 5 nbits 30 nbitsld 15
Initializing mesh with Leblanc problem, high values first
  accurate sum 3355443.203355443 sum 3355443.201976103 diff  -0.001379 relative diff -4.111e-10 runtime 0.069720   Serial sum
  accurate sum 3355443.203355443 sum 3355443.203699448 diff   0.000344 relative diff  1.025e-10 runtime 0.024365   Serial sum (OpenMP SIMD pragma)
  accurate sum 3355443.2         sum 3355443.2         diff          0 relative diff          0 runtime 0.024483   Serial sum with digit truncation
  accurate sum 3355443           sum 3355443           diff          0 relative diff          0 runtime 0.024771   Serial sum with bit truncation
  accurate sum 3355443.203355443 sum 3355443.203356126 diff  6.824e-07 relative diff  2.034e-13 runtime 0.302756   Serial sum with long double accumulator
  accurate sum 3355443.2034      sum 3355443.2034      diff          0 relative diff          0 runtime 0.302711   Serial sum with long double accumulator with ndigit truncation
  accurate sum 3355443.203353882 sum 3355443.203353882 diff          0 relative diff          0 runtime 0.302716   Serial sum with long double accumulator with bit truncation
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.249567   Serial sum with double double kahan sum accumulator
  accurate sum 3355443.203355443 sum 838860.8008388608 diff -2.517e+06 relative diff      -0.75 runtime 0.055694   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 3355443.203355443 sum 419430.4004194304 diff -2.936e+06 relative diff     -0.875 runtime 0.027855   8 wide GCC vector extensions Kahan sum
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.448336   Serial sum with double double knuth sum accumulator
  accurate sum 3355443.203355443 sum 838860.8008388608 diff -2.517e+06 relative diff      -0.75 runtime 0.102120   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 3355443.203355443 sum 419430.4004194304 diff -2.936e+06 relative diff     -0.875 runtime 0.050968   8 wide GCC vector extensions Knuth sum
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.094531   Pair-wise sum


  accurate sum 3355443.203355443 sum 3355443.203699448 diff   0.000344 relative diff  1.025e-10 runtime 0.024556   OpenMP sum
  accurate sum 3355443.1875      sum 3355443.1875      diff          0 relative diff          0 runtime 0.024196   OpenMP sum with bit truncation
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.249456   OpenMP sum with double double kahan sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.249477   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 134217728 log 27 ndigits 8 ndigitsld 5 nbits 31 nbitsld 16
Initializing mesh with Leblanc problem, high values first
  accurate sum 6710886.406710886 sum 6710886.393382353 diff   -0.01333 relative diff -1.986e-09 runtime 0.139141   Serial sum
  accurate sum 6710886.406710886 sum 6710886.406824448 diff  0.0001136 relative diff  1.692e-11 runtime 0.048751   Serial sum (OpenMP SIMD pragma)
  accurate sum 6710886.4         sum 6710886.4         diff          0 relative diff          0 runtime 0.048739   Serial sum with digit truncation
  accurate sum 6710886           sum 6710886           diff          0 relative diff          0 runtime 0.048786   Serial sum with bit truncation
  accurate sum 6710886.406710886 sum 6710886.406710007 diff -8.792e-07 relative diff  -1.31e-13 runtime 0.605334   Serial sum with long double accumulator
  accurate sum 6710886.4067      sum 6710886.4067      diff          0 relative diff          0 runtime 0.605715   Serial sum with long double accumulator with ndigit truncation
  accurate sum 6710886.406677246 sum 6710886.406677246 diff          0 relative diff          0 runtime 0.605715   Serial sum with long double accumulator with bit truncation
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.498905   Serial sum with double double kahan sum accumulator
  accurate sum 6710886.406710886 sum 1677721.601677722 diff -5.033e+06 relative diff      -0.75 runtime 0.111225   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 6710886.406710886 sum 838860.8008388608 diff -5.872e+06 relative diff     -0.875 runtime 0.055757   8 wide GCC vector extensions Kahan sum
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.896598   Serial sum with double double knuth sum accumulator
  accurate sum 6710886.406710886 sum 1677721.601677722 diff -5.033e+06 relative diff      -0.75 runtime 0.204331   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 6710886.406710886 sum 838860.8008388608 diff -5.872e+06 relative diff     -0.875 runtime 0.101875   8 wide GCC vector extensions Knuth sum
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.188260   Pair-wise sum


  accurate sum 6710886.406710886 sum 6710886.406824448 diff  0.0001136 relative diff  1.692e-11 runtime 0.048787   OpenMP sum
  accurate sum 6710886.375       sum 6710886.375       diff          0 relative diff          0 runtime 0.048514   OpenMP sum with bit truncation
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.498829   OpenMP sum with double double kahan sum accumulator
  accurate sum 6710886.406710885 sum 6710886.406710885 diff          0 relative diff          0 runtime 0.498938   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 268435456 log 28 ndigits 8 ndigitsld 5 nbits 32 nbitsld 16
Initializing mesh with Leblanc problem, high values first
  accurate sum 13421772.81342177 sum 13421772.76838235 diff   -0.04504 relative diff -3.356e-09 runtime 0.278373   Serial sum
  accurate sum 13421772.81342177 sum 13421772.80330882 diff   -0.01011 relative diff -7.535e-10 runtime 0.097919   Serial sum (OpenMP SIMD pragma)
  accurate sum 13421773          sum 13421773          diff          0 relative diff          0 runtime 0.097511   Serial sum with digit truncation
  accurate sum 13421768          sum 13421768          diff          0 relative diff          0 runtime 0.097593   Serial sum with bit truncation
  accurate sum 13421772.81342177 sum 13421772.81344066 diff  1.889e-05 relative diff  1.407e-12 runtime 1.210770   Serial sum with long double accumulator
  accurate sum 13421772.813      sum 13421772.813      diff          0 relative diff          0 runtime 1.211316   Serial sum with long double accumulator with ndigit truncation
  accurate sum 13421772.81335449 sum 13421772.81335449 diff          0 relative diff          0 runtime 1.210903   Serial sum with long double accumulator with bit truncation
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.997678   Serial sum with double double kahan sum accumulator
  accurate sum 13421772.81342177 sum 3355443.203355443 diff -1.007e+07 relative diff      -0.75 runtime 0.222641   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 13421772.81342177 sum 1677721.601677722 diff -1.174e+07 relative diff     -0.875 runtime 0.111301   8 wide GCC vector extensions Kahan sum
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 1.793405   Serial sum with double double knuth sum accumulator
  accurate sum 13421772.81342177 sum 3355443.203355443 diff -1.007e+07 relative diff      -0.75 runtime 0.408650   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 13421772.81342177 sum 1677721.601677722 diff -1.174e+07 relative diff     -0.875 runtime 0.203609   8 wide GCC vector extensions Knuth sum
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.376540   Pair-wise sum


  accurate sum 13421772.81342177 sum 13421772.80330882 diff   -0.01011 relative diff -7.535e-10 runtime 0.097039   OpenMP sum
  accurate sum 13421772.5        sum 13421772.5        diff          0 relative diff          0 runtime 0.097764   OpenMP sum with bit truncation
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.998449   OpenMP sum with double double kahan sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.997887   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 536870911 log 28 ndigits 8 ndigitsld 5 nbits 32 nbitsld 17
Initializing mesh with Leblanc problem, high values first
  accurate sum 26843545.52684355 sum 26843545.60588235 diff    0.07904 relative diff  2.944e-09 runtime 0.556217   Serial sum
  accurate sum 26843545.52684355 sum 26843545.51580882 diff   -0.01103 relative diff -4.111e-10 runtime 0.197157   Serial sum (OpenMP SIMD pragma)
  accurate sum 26843546          sum 26843546          diff          0 relative diff          0 runtime 0.196749   Serial sum with digit truncation
  accurate sum 26843536          sum 26843536          diff          0 relative diff          0 runtime 0.196869   Serial sum with bit truncation
  accurate sum 26843545.52684355 sum 26843545.52691722 diff  7.367e-05 relative diff  2.745e-12 runtime 2.421876   Serial sum with long double accumulator
  accurate sum 26843545.527      sum 26843545.527      diff          0 relative diff          0 runtime 2.422644   Serial sum with long double accumulator with ndigit truncation
  accurate sum 26843545.52636719 sum 26843545.52685547 diff  0.0004883 relative diff  1.819e-11 runtime 2.422129   Serial sum with long double accumulator with bit truncation
  accurate sum 26843545.52684355 sum 26843545.52684355 diff          0 relative diff          0 runtime 1.995731   Serial sum with double double kahan sum accumulator
  accurate sum 26843545.52684355 sum 6710886.406710886 diff -2.013e+07 relative diff      -0.75 runtime 0.443121   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 26843545.52684355 sum 3355443.203355443 diff -2.349e+07 relative diff     -0.875 runtime 0.224446   8 wide GCC vector extensions Kahan sum
  accurate sum 26843545.52684355 sum 26843545.52684355 diff          0 relative diff          0 runtime 3.586966   Serial sum with double double knuth sum accumulator
  accurate sum 26843545.52684355 sum 6710886.406710886 diff -2.013e+07 relative diff      -0.75 runtime 0.817573   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 26843545.52684355 sum 3355443.203355443 diff -2.349e+07 relative diff     -0.875 runtime 0.407605   8 wide GCC vector extensions Knuth sum
  accurate sum 26843545.52684355 sum 26843545.5        diff   -0.02684 relative diff     -1e-09 runtime 0.758521   Pair-wise sum


  accurate sum 26843545.52684355 sum 26843545.51580882 diff   -0.01103 relative diff -4.111e-10 runtime 0.195305   OpenMP sum
  accurate sum 26843544          sum 26843544          diff          0 relative diff          0 runtime 0.195063   OpenMP sum with bit truncation
  accurate sum 26843545.52684355 sum 26843545.52684355 diff          0 relative diff          0 runtime 1.995830   OpenMP sum with double double kahan sum accumulator
  accurate sum 26843545.52684355 sum 26843545.52684355 diff          0 relative diff          0 runtime 1.996126   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 1073741824 log 30 ndigits 9 ndigitsld 6 nbits 34 nbitsld 18
Initializing mesh with Leblanc problem, high values first
  accurate sum 53687091.25368709 sum 53687091.70588235 diff     0.4522 relative diff  8.423e-09 runtime 1.112250   Serial sum
  accurate sum 53687091.25368709 sum 53687091.14705883 diff    -0.1066 relative diff -1.986e-09 runtime 0.393353   Serial sum (OpenMP SIMD pragma)
  accurate sum 53687090          sum 53687090          diff          0 relative diff          0 runtime 0.393759   Serial sum with digit truncation
  accurate sum 53687040          sum 53687040          diff          0 relative diff          0 runtime 0.393720   Serial sum with bit truncation
  accurate sum 53687091.25368709 sum 53687091.25252757 diff   -0.00116 relative diff  -2.16e-11 runtime 4.843730   Serial sum with long double accumulator
  accurate sum 53687091.25       sum 53687091.25       diff          0 relative diff          0 runtime 4.845335   Serial sum with long double accumulator with ndigit truncation
  accurate sum 53687091.25195312 sum 53687091.25195312 diff          0 relative diff          0 runtime 4.844285   Serial sum with long double accumulator with bit truncation
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 3.991315   Serial sum with double double kahan sum accumulator
  accurate sum 53687091.25368709 sum 13421772.81342177 diff -4.027e+07 relative diff      -0.75 runtime 0.887108   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 53687091.25368709 sum 6710886.406710886 diff -4.698e+07 relative diff     -0.875 runtime 0.448333   8 wide GCC vector extensions Kahan sum
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 7.173906   Serial sum with double double knuth sum accumulator
  accurate sum 53687091.25368709 sum 13421772.81342177 diff -4.027e+07 relative diff      -0.75 runtime 1.634807   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 53687091.25368709 sum 6710886.406710886 diff -4.698e+07 relative diff     -0.875 runtime 0.815332   8 wide GCC vector extensions Knuth sum
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 1.517399   Pair-wise sum


  accurate sum 53687091.25368709 sum 53687091.14705882 diff    -0.1066 relative diff -1.986e-09 runtime 0.390340   OpenMP sum
  accurate sum 53687088          sum 53687088          diff          0 relative diff          0 runtime 0.390061   OpenMP sum with bit truncation
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 3.991404   OpenMP sum with double double kahan sum accumulator
  accurate sum 53687091.25368708 sum 53687091.25368708 diff          0 relative diff          0 runtime 3.991872   OpenMP sum with double double kahan sum accumulator with bit truncation

Scanning dependencies of target distclean
Built target distclean
/usr/bin/modulecmd bash $*
MANPATH=/usr/share/man:/usr/local/share/man ;export MANPATH;PATH=/home/brobey/bin:/home/brobey/parsplice-install/bin:/home/brobey/bin:/home/brobey/parsplice-install/bin:/home/brobey/spack/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin ;export PATH;unset CC;unset CPP;unset CXX;unset F77;unset FC;unset LD_LIBRARY_PATH;unset LM_LICENSE_FILE;unset LOADEDMODULES;unset PGROUPD_LICENSE_FILE;unset _LMFILES_;unset f90;
