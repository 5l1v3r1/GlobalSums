for i in clang/8.0.1 gcc/9.1.0 intel/19.0.4 pgi/18.10
do
    module purge
    module load cmake $i
    cmake .
    make 
    ./globalsums
    make clean
    make distclean
    module purge
done
/usr/bin/modulecmd bash $*
/usr/bin/modulecmd bash $*
CC=clang ;export CC;CLANGROOT=/projects/opt/centos7/clang/8.0.1 ;export CLANGROOT;CLANGVER=8.0.1 ;export CLANGVER;CPP=clang\ -E ;export CPP;CXX=clang++ ;export CXX;LD_LIBRARY_PATH=/projects/opt/centos7/clang/8.0.1/lib:/projects/opt/centos7/gcc/8.2.0/lib64:/projects/opt/centos7/gcc/8.2.0/lib ;export LD_LIBRARY_PATH;LLVMROOT=/projects/opt/centos7/clang/8.0.1 ;export LLVMROOT;LOADEDMODULES=cmake/3.12.4:clang/8.0.1 ;export LOADEDMODULES;MANPATH=/projects/opt/centos7/clang/8.0.1/share/man:/usr/share/man:/usr/local/share/man ;export MANPATH;PATH=/projects/opt/centos7/clang/8.0.1/bin:/projects/opt/centos7/cmake/3.12.4/bin:/home/brobey/bin:/home/brobey/parsplice-install/bin:/home/brobey/bin:/home/brobey/parsplice-install/bin:/home/brobey/spack/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin ;export PATH;PYTHONPATH=/projects/opt/centos7/clang/8.0.1/lib64/python2.7/site-packages ;export PYTHONPATH;_LMFILES_=/projects/darwin/modulefiles/centos7/cmake/3.12.4:/projects/darwin/modulefiles/centos7/clang/8.0.1 ;export _LMFILES_;
-- The C compiler identification is Clang 8.0.1
-- The CXX compiler identification is Clang 8.0.1
-- Check for working C compiler: /projects/opt/centos7/clang/8.0.1/bin/clang
-- Check for working C compiler: /projects/opt/centos7/clang/8.0.1/bin/clang -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /projects/opt/centos7/clang/8.0.1/bin/clang++
-- Check for working CXX compiler: /projects/opt/centos7/clang/8.0.1/bin/clang++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Could NOT find OpenMP_C (missing: OpenMP_C_FLAGS OpenMP_C_LIB_NAMES) 
-- Could NOT find OpenMP_CXX (missing: OpenMP_CXX_FLAGS OpenMP_CXX_LIB_NAMES) 
-- Could NOT find OpenMP (missing: OpenMP_C_FOUND OpenMP_CXX_FOUND) 
-- Trying Fog Vector Class -- works
-- Trying X86_64 intrinsics -- works
-- Detecting AVX512 hardware -- found
-- Trying GCC Vector Extensions -- works
-- Trying Quad math library -- fails
-- Configuring done
-- Generating done
-- Build files have been written to: /home/brobey/GlobalSums
Scanning dependencies of target globalsums
[  3%] Building C object CMakeFiles/globalsums.dir/globalsums.c.o
globalsums.c:541:7: remark: vectorized loop (vectorization width: 8, interleaved count: 4) [-Rpass=loop-vectorize]
      for (long i = 0; i < ncells; i++){
      ^
globalsums.c:137:7: remark: vectorized loop (vectorization width: 8, interleaved count: 4) [-Rpass=loop-vectorize]
      for (long i = 0; i < ncells; i++){
      ^
[  7%] Building C object CMakeFiles/globalsums.dir/do_kahan_sum.c.o
do_kahan_sum.c:10:4: remark: loop not vectorized: value that could not be identified as reduction is used outside the loop [-Rpass-analysis=loop-vectorize]
   for (long i = 0; i < ncells; i++) {
   ^
do_kahan_sum.c:10:4: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
[ 10%] Building C object CMakeFiles/globalsums.dir/serial_sum_novec.c.o
serial_sum_novec.c:5:4: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
   for (long i = 0; i < ncells; i++){
   ^
[ 14%] Building C object CMakeFiles/globalsums.dir/do_kahan_sum_omp.c.o
do_kahan_sum_omp.c:18:7: remark: loop not vectorized: value that could not be identified as reduction is used outside the loop [-Rpass-analysis=loop-vectorize]
      for (long i = 0; i < ncells; i++) {
      ^
do_kahan_sum_omp.c:18:7: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
[ 17%] Building C object CMakeFiles/globalsums.dir/do_kahan_sum_omp_wbittrunc.c.o
do_kahan_sum_omp_wbittrunc.c:22:7: remark: loop not vectorized: value that could not be identified as reduction is used outside the loop [-Rpass-analysis=loop-vectorize]
      for (long i = 0; i < ncells; i++) {
      ^
do_kahan_sum_omp_wbittrunc.c:22:7: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
[ 21%] Building C object CMakeFiles/globalsums.dir/do_knuth_sum.c.o
do_knuth_sum.c:13:4: remark: loop not vectorized: value that could not be identified as reduction is used outside the loop [-Rpass-analysis=loop-vectorize]
   for (long i = 0; i < ncells; i++) {
   ^
do_knuth_sum.c:13:4: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
[ 25%] Building C object CMakeFiles/globalsums.dir/do_ldsum.c.o
do_ldsum.c:6:13: remark: loop not vectorized: cannot prove it is safe to reorder floating-point operations; allow reordering by specifying '#pragma clang loop vectorize(enable)' before the loop or by providing the compiler option '-ffast-math'. [-Rpass-analysis=loop-vectorize]
      ldsum += var[i];
            ^
do_ldsum.c:5:4: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
   for (long i = 0; i < ncells; i++){
   ^
[ 28%] Building C object CMakeFiles/globalsums.dir/do_ldsum_wbittrunc.c.o
do_ldsum_wbittrunc.c:9:13: remark: loop not vectorized: cannot prove it is safe to reorder floating-point operations; allow reordering by specifying '#pragma clang loop vectorize(enable)' before the loop or by providing the compiler option '-ffast-math'. [-Rpass-analysis=loop-vectorize]
      ldsum += var[i];
            ^
do_ldsum_wbittrunc.c:8:4: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
   for (long i = 0; i < ncells; i++){
   ^
[ 32%] Building C object CMakeFiles/globalsums.dir/do_ldsum_wdigittrunc.c.o
do_ldsum_wdigittrunc.c:8:13: remark: loop not vectorized: cannot prove it is safe to reorder floating-point operations; allow reordering by specifying '#pragma clang loop vectorize(enable)' before the loop or by providing the compiler option '-ffast-math'. [-Rpass-analysis=loop-vectorize]
      ldsum += var[i];
            ^
do_ldsum_wdigittrunc.c:7:4: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
   for (long i = 0; i < ncells; i++){
   ^
[ 35%] Building C object CMakeFiles/globalsums.dir/do_pair_sum.c.o
do_pair_sum.c:10:4: remark: vectorized loop (vectorization width: 8, interleaved count: 4) [-Rpass=loop-vectorize]
   for (long i = 0; i<nmax; i++){
   ^
do_pair_sum.c:16:7: remark: loop not vectorized: unsafe dependent memory operations in loop. Use #pragma loop distribute(enable) to allow loop distribution to attempt to isolate the offending operations into a separate loop [-Rpass-analysis=loop-vectorize]
      for (long i = 0; i<nmax; i++){
      ^
do_pair_sum.c:16:7: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
[ 39%] Building C object CMakeFiles/globalsums.dir/do_sum.c.o
do_sum.c:5:9: remark: vectorized loop (vectorization width: 8, interleaved count: 4) [-Rpass=loop-vectorize]
#pragma omp simd reduction(+:sum)
        ^
[ 42%] Building C object CMakeFiles/globalsums.dir/do_sum_omp.c.o
do_sum_omp.c:7:11: remark: loop not vectorized: cannot prove it is safe to reorder floating-point operations; allow reordering by specifying '#pragma clang loop vectorize(enable)' before the loop or by providing the compiler option '-ffast-math'. [-Rpass-analysis=loop-vectorize]
      sum += var[i];
          ^
do_sum_omp.c:6:4: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
   for (long i = 0; i < ncells; i++){
   ^
[ 46%] Building C object CMakeFiles/globalsums.dir/do_sum_omp_wbittrunc.c.o
do_sum_omp_wbittrunc.c:10:11: remark: loop not vectorized: cannot prove it is safe to reorder floating-point operations; allow reordering by specifying '#pragma clang loop vectorize(enable)' before the loop or by providing the compiler option '-ffast-math'. [-Rpass-analysis=loop-vectorize]
      sum += var[i];
          ^
do_sum_omp_wbittrunc.c:9:4: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
   for (long i = 0; i < ncells; i++){
   ^
[ 50%] Building C object CMakeFiles/globalsums.dir/do_sum_wbittrunc.c.o
do_sum_wbittrunc.c:9:11: remark: loop not vectorized: cannot prove it is safe to reorder floating-point operations; allow reordering by specifying '#pragma clang loop vectorize(enable)' before the loop or by providing the compiler option '-ffast-math'. [-Rpass-analysis=loop-vectorize]
      sum += var[i];
          ^
do_sum_wbittrunc.c:8:4: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
   for (long i = 0; i < ncells; i++){
   ^
[ 53%] Building C object CMakeFiles/globalsums.dir/do_sum_wdigittrunc.c.o
do_sum_wdigittrunc.c:8:11: remark: loop not vectorized: cannot prove it is safe to reorder floating-point operations; allow reordering by specifying '#pragma clang loop vectorize(enable)' before the loop or by providing the compiler option '-ffast-math'. [-Rpass-analysis=loop-vectorize]
      sum += var[i];
          ^
do_sum_wdigittrunc.c:7:4: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
   for (long i = 0; i < ncells; i++){
   ^
[ 57%] Building CXX object CMakeFiles/globalsums.dir/kahan_fog_vector.cpp.o
In file included from /home/brobey/GlobalSums/kahan_fog_vector.cpp:1:
In file included from /home/brobey/GlobalSums/vectorclass/vectorclass.h:41:
/home/brobey/GlobalSums/vectorclass/vectori128.h:5057:37: warning: | has lower precedence than >=; >= will be evaluated first [-Wparentheses]
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3);
                              ~~~~~~^
/home/brobey/GlobalSums/vectorclass/vectori128.h:5057:37: note: place parentheses around the '>=' expression to silence this warning
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3);
                                    ^
                              (    )
/home/brobey/GlobalSums/vectorclass/vectori128.h:5057:37: note: place parentheses around the | expression to evaluate it first
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3);
                                    ^
                                  (             )
In file included from /home/brobey/GlobalSums/kahan_fog_vector.cpp:1:
In file included from /home/brobey/GlobalSums/vectorclass/vectorclass.h:42:
/home/brobey/GlobalSums/vectorclass/vectorf128.h:2680:37: warning: | has lower precedence than >=; >= will be evaluated first [-Wparentheses]
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3);
                              ~~~~~~^
/home/brobey/GlobalSums/vectorclass/vectorf128.h:2680:37: note: place parentheses around the '>=' expression to silence this warning
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3);
                                    ^
                              (    )
/home/brobey/GlobalSums/vectorclass/vectorf128.h:2680:37: note: place parentheses around the | expression to evaluate it first
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3);
                                    ^
                                  (             )
In file included from /home/brobey/GlobalSums/kahan_fog_vector.cpp:1:
In file included from /home/brobey/GlobalSums/vectorclass/vectorclass.h:46:
/home/brobey/GlobalSums/vectorclass/vectori256.h:4814:37: warning: | has lower precedence than >=; >= will be evaluated first [-Wparentheses]
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3| (i4>=0)<<4| (i5>=0)<<5| (i6>=0)<<6| (i7>=0)<<7);
                              ~~~~~~^
/home/brobey/GlobalSums/vectorclass/vectori256.h:4814:37: note: place parentheses around the '>=' expression to silence this warning
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3| (i4>=0)<<4| (i5>=0)<<5| (i6>=0)<<6| (i7>=0)<<7);
                                    ^
                              (    )
/home/brobey/GlobalSums/vectorclass/vectori256.h:4814:37: note: place parentheses around the | expression to evaluate it first
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3| (i4>=0)<<4| (i5>=0)<<5| (i6>=0)<<6| (i7>=0)<<7);
                                    ^
                                  (             )
/home/brobey/GlobalSums/vectorclass/vectori256.h:4833:37: warning: | has lower precedence than >=; >= will be evaluated first [-Wparentheses]
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3);
                              ~~~~~~^
/home/brobey/GlobalSums/vectorclass/vectori256.h:4833:37: note: place parentheses around the '>=' expression to silence this warning
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3);
                                    ^
                              (    )
/home/brobey/GlobalSums/vectorclass/vectori256.h:4833:37: note: place parentheses around the | expression to evaluate it first
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3);
                                    ^
                                  (             )
In file included from /home/brobey/GlobalSums/kahan_fog_vector.cpp:1:
In file included from /home/brobey/GlobalSums/vectorclass/vectorclass.h:51:
/home/brobey/GlobalSums/vectorclass/vectorf256.h:3209:37: warning: | has lower precedence than >=; >= will be evaluated first [-Wparentheses]
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3| (i4>=0)<<4| (i5>=0)<<5| (i6>=0)<<6| (i7>=0)<<7);
                              ~~~~~~^
/home/brobey/GlobalSums/vectorclass/vectorf256.h:3209:37: note: place parentheses around the '>=' expression to silence this warning
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3| (i4>=0)<<4| (i5>=0)<<5| (i6>=0)<<6| (i7>=0)<<7);
                                    ^
                              (    )
/home/brobey/GlobalSums/vectorclass/vectorf256.h:3209:37: note: place parentheses around the | expression to evaluate it first
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3| (i4>=0)<<4| (i5>=0)<<5| (i6>=0)<<6| (i7>=0)<<7);
                                    ^
                                  (             )
/home/brobey/GlobalSums/vectorclass/vectorf256.h:3227:37: warning: | has lower precedence than >=; >= will be evaluated first [-Wparentheses]
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3);
                              ~~~~~~^
/home/brobey/GlobalSums/vectorclass/vectorf256.h:3227:37: note: place parentheses around the '>=' expression to silence this warning
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3);
                                    ^
                              (    )
/home/brobey/GlobalSums/vectorclass/vectorf256.h:3227:37: note: place parentheses around the | expression to evaluate it first
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3);
                                    ^
                                  (             )
kahan_fog_vector.cpp:15:4: remark: loop not vectorized: loop control flow is not understood by vectorizer [-Rpass-analysis=loop-vectorize]
   for (long i = 0; i < ncells; i+=4) {
   ^
kahan_fog_vector.cpp:15:4: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
6 warnings generated.
[ 60%] Building CXX object CMakeFiles/globalsums.dir/kahan_fog_vector8.cpp.o
In file included from /home/brobey/GlobalSums/kahan_fog_vector8.cpp:1:
In file included from /home/brobey/GlobalSums/vectorclass/vectorclass.h:41:
/home/brobey/GlobalSums/vectorclass/vectori128.h:5057:37: warning: | has lower precedence than >=; >= will be evaluated first [-Wparentheses]
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3);
                              ~~~~~~^
/home/brobey/GlobalSums/vectorclass/vectori128.h:5057:37: note: place parentheses around the '>=' expression to silence this warning
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3);
                                    ^
                              (    )
/home/brobey/GlobalSums/vectorclass/vectori128.h:5057:37: note: place parentheses around the | expression to evaluate it first
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3);
                                    ^
                                  (             )
In file included from /home/brobey/GlobalSums/kahan_fog_vector8.cpp:1:
In file included from /home/brobey/GlobalSums/vectorclass/vectorclass.h:42:
/home/brobey/GlobalSums/vectorclass/vectorf128.h:2680:37: warning: | has lower precedence than >=; >= will be evaluated first [-Wparentheses]
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3);
                              ~~~~~~^
/home/brobey/GlobalSums/vectorclass/vectorf128.h:2680:37: note: place parentheses around the '>=' expression to silence this warning
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3);
                                    ^
                              (    )
/home/brobey/GlobalSums/vectorclass/vectorf128.h:2680:37: note: place parentheses around the | expression to evaluate it first
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3);
                                    ^
                                  (             )
In file included from /home/brobey/GlobalSums/kahan_fog_vector8.cpp:1:
In file included from /home/brobey/GlobalSums/vectorclass/vectorclass.h:46:
/home/brobey/GlobalSums/vectorclass/vectori256.h:4814:37: warning: | has lower precedence than >=; >= will be evaluated first [-Wparentheses]
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3| (i4>=0)<<4| (i5>=0)<<5| (i6>=0)<<6| (i7>=0)<<7);
                              ~~~~~~^
/home/brobey/GlobalSums/vectorclass/vectori256.h:4814:37: note: place parentheses around the '>=' expression to silence this warning
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3| (i4>=0)<<4| (i5>=0)<<5| (i6>=0)<<6| (i7>=0)<<7);
                                    ^
                              (    )
/home/brobey/GlobalSums/vectorclass/vectori256.h:4814:37: note: place parentheses around the | expression to evaluate it first
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3| (i4>=0)<<4| (i5>=0)<<5| (i6>=0)<<6| (i7>=0)<<7);
                                    ^
                                  (             )
/home/brobey/GlobalSums/vectorclass/vectori256.h:4833:37: warning: | has lower precedence than >=; >= will be evaluated first [-Wparentheses]
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3);
                              ~~~~~~^
/home/brobey/GlobalSums/vectorclass/vectori256.h:4833:37: note: place parentheses around the '>=' expression to silence this warning
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3);
                                    ^
                              (    )
/home/brobey/GlobalSums/vectorclass/vectori256.h:4833:37: note: place parentheses around the | expression to evaluate it first
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3);
                                    ^
                                  (             )
In file included from /home/brobey/GlobalSums/kahan_fog_vector8.cpp:1:
In file included from /home/brobey/GlobalSums/vectorclass/vectorclass.h:51:
/home/brobey/GlobalSums/vectorclass/vectorf256.h:3209:37: warning: | has lower precedence than >=; >= will be evaluated first [-Wparentheses]
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3| (i4>=0)<<4| (i5>=0)<<5| (i6>=0)<<6| (i7>=0)<<7);
                              ~~~~~~^
/home/brobey/GlobalSums/vectorclass/vectorf256.h:3209:37: note: place parentheses around the '>=' expression to silence this warning
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3| (i4>=0)<<4| (i5>=0)<<5| (i6>=0)<<6| (i7>=0)<<7);
                                    ^
                              (    )
/home/brobey/GlobalSums/vectorclass/vectorf256.h:3209:37: note: place parentheses around the | expression to evaluate it first
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3| (i4>=0)<<4| (i5>=0)<<5| (i6>=0)<<6| (i7>=0)<<7);
                                    ^
                                  (             )
/home/brobey/GlobalSums/vectorclass/vectorf256.h:3227:37: warning: | has lower precedence than >=; >= will be evaluated first [-Wparentheses]
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3);
                              ~~~~~~^
/home/brobey/GlobalSums/vectorclass/vectorf256.h:3227:37: note: place parentheses around the '>=' expression to silence this warning
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3);
                                    ^
                              (    )
/home/brobey/GlobalSums/vectorclass/vectorf256.h:3227:37: note: place parentheses around the | expression to evaluate it first
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3);
                                    ^
                                  (             )
kahan_fog_vector8.cpp:14:4: remark: loop not vectorized: loop control flow is not understood by vectorizer [-Rpass-analysis=loop-vectorize]
   for (long i = 0; i < ncells; i+=8) {
   ^
kahan_fog_vector8.cpp:14:4: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
6 warnings generated.
[ 64%] Building CXX object CMakeFiles/globalsums.dir/knuth_fog_vector.cpp.o
In file included from /home/brobey/GlobalSums/knuth_fog_vector.cpp:1:
In file included from /home/brobey/GlobalSums/vectorclass/vectorclass.h:41:
/home/brobey/GlobalSums/vectorclass/vectori128.h:5057:37: warning: | has lower precedence than >=; >= will be evaluated first [-Wparentheses]
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3);
                              ~~~~~~^
/home/brobey/GlobalSums/vectorclass/vectori128.h:5057:37: note: place parentheses around the '>=' expression to silence this warning
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3);
                                    ^
                              (    )
/home/brobey/GlobalSums/vectorclass/vectori128.h:5057:37: note: place parentheses around the | expression to evaluate it first
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3);
                                    ^
                                  (             )
In file included from /home/brobey/GlobalSums/knuth_fog_vector.cpp:1:
In file included from /home/brobey/GlobalSums/vectorclass/vectorclass.h:42:
/home/brobey/GlobalSums/vectorclass/vectorf128.h:2680:37: warning: | has lower precedence than >=; >= will be evaluated first [-Wparentheses]
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3);
                              ~~~~~~^
/home/brobey/GlobalSums/vectorclass/vectorf128.h:2680:37: note: place parentheses around the '>=' expression to silence this warning
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3);
                                    ^
                              (    )
/home/brobey/GlobalSums/vectorclass/vectorf128.h:2680:37: note: place parentheses around the | expression to evaluate it first
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3);
                                    ^
                                  (             )
In file included from /home/brobey/GlobalSums/knuth_fog_vector.cpp:1:
In file included from /home/brobey/GlobalSums/vectorclass/vectorclass.h:46:
/home/brobey/GlobalSums/vectorclass/vectori256.h:4814:37: warning: | has lower precedence than >=; >= will be evaluated first [-Wparentheses]
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3| (i4>=0)<<4| (i5>=0)<<5| (i6>=0)<<6| (i7>=0)<<7);
                              ~~~~~~^
/home/brobey/GlobalSums/vectorclass/vectori256.h:4814:37: note: place parentheses around the '>=' expression to silence this warning
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3| (i4>=0)<<4| (i5>=0)<<5| (i6>=0)<<6| (i7>=0)<<7);
                                    ^
                              (    )
/home/brobey/GlobalSums/vectorclass/vectori256.h:4814:37: note: place parentheses around the | expression to evaluate it first
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3| (i4>=0)<<4| (i5>=0)<<5| (i6>=0)<<6| (i7>=0)<<7);
                                    ^
                                  (             )
/home/brobey/GlobalSums/vectorclass/vectori256.h:4833:37: warning: | has lower precedence than >=; >= will be evaluated first [-Wparentheses]
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3);
                              ~~~~~~^
/home/brobey/GlobalSums/vectorclass/vectori256.h:4833:37: note: place parentheses around the '>=' expression to silence this warning
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3);
                                    ^
                              (    )
/home/brobey/GlobalSums/vectorclass/vectori256.h:4833:37: note: place parentheses around the | expression to evaluate it first
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3);
                                    ^
                                  (             )
In file included from /home/brobey/GlobalSums/knuth_fog_vector.cpp:1:
In file included from /home/brobey/GlobalSums/vectorclass/vectorclass.h:51:
/home/brobey/GlobalSums/vectorclass/vectorf256.h:3209:37: warning: | has lower precedence than >=; >= will be evaluated first [-Wparentheses]
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3| (i4>=0)<<4| (i5>=0)<<5| (i6>=0)<<6| (i7>=0)<<7);
                              ~~~~~~^
/home/brobey/GlobalSums/vectorclass/vectorf256.h:3209:37: note: place parentheses around the '>=' expression to silence this warning
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3| (i4>=0)<<4| (i5>=0)<<5| (i6>=0)<<6| (i7>=0)<<7);
                                    ^
                              (    )
/home/brobey/GlobalSums/vectorclass/vectorf256.h:3209:37: note: place parentheses around the | expression to evaluate it first
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3| (i4>=0)<<4| (i5>=0)<<5| (i6>=0)<<6| (i7>=0)<<7);
                                    ^
                                  (             )
/home/brobey/GlobalSums/vectorclass/vectorf256.h:3227:37: warning: | has lower precedence than >=; >= will be evaluated first [-Wparentheses]
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3);
                              ~~~~~~^
/home/brobey/GlobalSums/vectorclass/vectorf256.h:3227:37: note: place parentheses around the '>=' expression to silence this warning
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3);
                                    ^
                              (    )
/home/brobey/GlobalSums/vectorclass/vectorf256.h:3227:37: note: place parentheses around the | expression to evaluate it first
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3);
                                    ^
                                  (             )
knuth_fog_vector.cpp:15:4: remark: loop not vectorized: loop control flow is not understood by vectorizer [-Rpass-analysis=loop-vectorize]
   for (long i = 0; i < ncells; i+=4) {
   ^
knuth_fog_vector.cpp:15:4: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
6 warnings generated.
[ 67%] Building CXX object CMakeFiles/globalsums.dir/knuth_fog_vector8.cpp.o
In file included from /home/brobey/GlobalSums/knuth_fog_vector8.cpp:1:
In file included from /home/brobey/GlobalSums/vectorclass/vectorclass.h:41:
/home/brobey/GlobalSums/vectorclass/vectori128.h:5057:37: warning: | has lower precedence than >=; >= will be evaluated first [-Wparentheses]
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3);
                              ~~~~~~^
/home/brobey/GlobalSums/vectorclass/vectori128.h:5057:37: note: place parentheses around the '>=' expression to silence this warning
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3);
                                    ^
                              (    )
/home/brobey/GlobalSums/vectorclass/vectori128.h:5057:37: note: place parentheses around the | expression to evaluate it first
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3);
                                    ^
                                  (             )
In file included from /home/brobey/GlobalSums/knuth_fog_vector8.cpp:1:
In file included from /home/brobey/GlobalSums/vectorclass/vectorclass.h:42:
/home/brobey/GlobalSums/vectorclass/vectorf128.h:2680:37: warning: | has lower precedence than >=; >= will be evaluated first [-Wparentheses]
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3);
                              ~~~~~~^
/home/brobey/GlobalSums/vectorclass/vectorf128.h:2680:37: note: place parentheses around the '>=' expression to silence this warning
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3);
                                    ^
                              (    )
/home/brobey/GlobalSums/vectorclass/vectorf128.h:2680:37: note: place parentheses around the | expression to evaluate it first
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3);
                                    ^
                                  (             )
In file included from /home/brobey/GlobalSums/knuth_fog_vector8.cpp:1:
In file included from /home/brobey/GlobalSums/vectorclass/vectorclass.h:46:
/home/brobey/GlobalSums/vectorclass/vectori256.h:4814:37: warning: | has lower precedence than >=; >= will be evaluated first [-Wparentheses]
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3| (i4>=0)<<4| (i5>=0)<<5| (i6>=0)<<6| (i7>=0)<<7);
                              ~~~~~~^
/home/brobey/GlobalSums/vectorclass/vectori256.h:4814:37: note: place parentheses around the '>=' expression to silence this warning
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3| (i4>=0)<<4| (i5>=0)<<5| (i6>=0)<<6| (i7>=0)<<7);
                                    ^
                              (    )
/home/brobey/GlobalSums/vectorclass/vectori256.h:4814:37: note: place parentheses around the | expression to evaluate it first
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3| (i4>=0)<<4| (i5>=0)<<5| (i6>=0)<<6| (i7>=0)<<7);
                                    ^
                                  (             )
/home/brobey/GlobalSums/vectorclass/vectori256.h:4833:37: warning: | has lower precedence than >=; >= will be evaluated first [-Wparentheses]
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3);
                              ~~~~~~^
/home/brobey/GlobalSums/vectorclass/vectori256.h:4833:37: note: place parentheses around the '>=' expression to silence this warning
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3);
                                    ^
                              (    )
/home/brobey/GlobalSums/vectorclass/vectori256.h:4833:37: note: place parentheses around the | expression to evaluate it first
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3);
                                    ^
                                  (             )
In file included from /home/brobey/GlobalSums/knuth_fog_vector8.cpp:1:
In file included from /home/brobey/GlobalSums/vectorclass/vectorclass.h:51:
/home/brobey/GlobalSums/vectorclass/vectorf256.h:3209:37: warning: | has lower precedence than >=; >= will be evaluated first [-Wparentheses]
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3| (i4>=0)<<4| (i5>=0)<<5| (i6>=0)<<6| (i7>=0)<<7);
                              ~~~~~~^
/home/brobey/GlobalSums/vectorclass/vectorf256.h:3209:37: note: place parentheses around the '>=' expression to silence this warning
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3| (i4>=0)<<4| (i5>=0)<<5| (i6>=0)<<6| (i7>=0)<<7);
                                    ^
                              (    )
/home/brobey/GlobalSums/vectorclass/vectorf256.h:3209:37: note: place parentheses around the | expression to evaluate it first
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3| (i4>=0)<<4| (i5>=0)<<5| (i6>=0)<<6| (i7>=0)<<7);
                                    ^
                                  (             )
/home/brobey/GlobalSums/vectorclass/vectorf256.h:3227:37: warning: | has lower precedence than >=; >= will be evaluated first [-Wparentheses]
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3);
                              ~~~~~~^
/home/brobey/GlobalSums/vectorclass/vectorf256.h:3227:37: note: place parentheses around the '>=' expression to silence this warning
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3);
                                    ^
                              (    )
/home/brobey/GlobalSums/vectorclass/vectorf256.h:3227:37: note: place parentheses around the | expression to evaluate it first
    __mmask16 mask = uint16_t(i0>=0 | (i1>=0)<<1 | (i2>=0)<<2 | (i3>=0)<<3);
                                    ^
                                  (             )
knuth_fog_vector8.cpp:15:4: remark: loop not vectorized: loop control flow is not understood by vectorizer [-Rpass-analysis=loop-vectorize]
   for (long i = 0; i < ncells; i+=8) {
   ^
knuth_fog_vector8.cpp:15:4: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
6 warnings generated.
[ 71%] Building C object CMakeFiles/globalsums.dir/kahan_intel_vector.c.o
kahan_intel_vector.c:18:4: remark: loop not vectorized: loop control flow is not understood by vectorizer [-Rpass-analysis=loop-vectorize]
   for (long i = 0; i < ncells; i+=4) {
   ^
kahan_intel_vector.c:18:4: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
[ 75%] Building C object CMakeFiles/globalsums.dir/kahan_intel_vector8.c.o
kahan_intel_vector8.c:18:4: remark: loop not vectorized: loop control flow is not understood by vectorizer [-Rpass-analysis=loop-vectorize]
   for (long i = 0; i < ncells; i+=8) {
   ^
kahan_intel_vector8.c:18:4: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
[ 78%] Building C object CMakeFiles/globalsums.dir/knuth_intel_vector.c.o
knuth_intel_vector.c:17:4: remark: loop not vectorized: loop control flow is not understood by vectorizer [-Rpass-analysis=loop-vectorize]
   for (long i = 0; i < ncells; i+=4) {
   ^
knuth_intel_vector.c:17:4: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
[ 82%] Building C object CMakeFiles/globalsums.dir/knuth_intel_vector8.c.o
knuth_intel_vector8.c:18:4: remark: loop not vectorized: loop control flow is not understood by vectorizer [-Rpass-analysis=loop-vectorize]
   for (long i = 0; i < ncells; i+=8) {
   ^
knuth_intel_vector8.c:18:4: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
[ 85%] Building C object CMakeFiles/globalsums.dir/kahan_gcc_vector.c.o
kahan_gcc_vector.c:11:4: remark: loop not vectorized: loop control flow is not understood by vectorizer [-Rpass-analysis=loop-vectorize]
   for (long i = 0; i < ncells; i+=4) {
   ^
kahan_gcc_vector.c:11:4: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
[ 89%] Building C object CMakeFiles/globalsums.dir/kahan_gcc_vector8.c.o
kahan_gcc_vector8.c:10:4: remark: loop not vectorized: loop control flow is not understood by vectorizer [-Rpass-analysis=loop-vectorize]
   for (long i = 0; i < ncells; i+=8) {
   ^
kahan_gcc_vector8.c:10:4: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
[ 92%] Building C object CMakeFiles/globalsums.dir/knuth_gcc_vector.c.o
knuth_gcc_vector.c:11:4: remark: loop not vectorized: loop control flow is not understood by vectorizer [-Rpass-analysis=loop-vectorize]
   for (long i = 0; i < ncells; i+=4) {
   ^
knuth_gcc_vector.c:11:4: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
[ 96%] Building C object CMakeFiles/globalsums.dir/knuth_gcc_vector8.c.o
knuth_gcc_vector8.c:11:4: remark: loop not vectorized: loop control flow is not understood by vectorizer [-Rpass-analysis=loop-vectorize]
   for (long i = 0; i < ncells; i+=8) {
   ^
knuth_gcc_vector8.c:11:4: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
[100%] Linking CXX executable globalsums
[100%] Built target globalsums
SETTINGS INFO -- ncells 16 log 4 ndigits 3 ndigitsld 0 nbits 8 nbitsld 2
Initializing mesh with Leblanc problem, high values first
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000001   Serial sum
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000001   Serial sum (OpenMP SIMD pragma)
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000011   Serial sum with digit truncation
  accurate sum 0.8000000007999972 sum 0.8000000007999972 diff          0 relative diff          0 runtime 0.000000   Serial sum with bit truncation
  accurate sum 0.8000000008      sum 0.8000000008      diff -1.626e-19 relative diff -2.033e-19 runtime 0.000000   Serial sum with long double accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Serial sum with long double accumulator with ndigit truncation
  accurate sum 0.8000000007999999 sum 0.8000000007999999 diff          0 relative diff          0 runtime 0.000000   Serial sum with long double accumulator with bit truncation
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double kahan sum accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 0.8000000008      sum 0.8000000007999999 diff  -1.11e-16 relative diff -1.388e-16 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 0.8000000008      sum 0.8000000007999999 diff  -1.11e-16 relative diff -1.388e-16 runtime 0.000000   8 wide Fog C++ vector class Kahan sum
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double knuth sum accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   8 wide GCC vector extensions Knuth sum
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   8 wide Fog C++ vector class Knuth sum
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000001   Pair-wise sum


  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   OpenMP sum
  accurate sum 0.8000000007999972 sum 0.8000000007999972 diff          0 relative diff          0 runtime 0.000000   OpenMP sum with bit truncation
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   OpenMP sum with double double kahan sum accumulator
  accurate sum 0.8000000007999999 sum 0.8000000007999999 diff          0 relative diff          0 runtime 0.000000   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 32 log 5 ndigits 4 ndigitsld 1 nbits 9 nbitsld 3
Initializing mesh with Leblanc problem, high values first
  accurate sum 1.6000000016      sum 1.6000000016      diff  4.441e-16 relative diff  2.776e-16 runtime 0.000000   Serial sum
  accurate sum 1.6000000016      sum 1.6000000016      diff   2.22e-16 relative diff  1.388e-16 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Serial sum with digit truncation
  accurate sum 1.600000001599938 sum 1.600000001599938 diff          0 relative diff          0 runtime 0.000000   Serial sum with bit truncation
  accurate sum 1.6000000016      sum 1.6000000016      diff  5.421e-19 relative diff  3.388e-19 runtime 0.000000   Serial sum with long double accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Serial sum with long double accumulator with ndigit truncation
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Serial sum with long double accumulator with bit truncation
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double kahan sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff  -2.22e-16 relative diff -1.388e-16 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 1.6000000016      sum 1.6000000016      diff  -2.22e-16 relative diff -1.388e-16 runtime 0.000000   8 wide Fog C++ vector class Kahan sum
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double knuth sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   8 wide GCC vector extensions Knuth sum
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   8 wide Fog C++ vector class Knuth sum
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Pair-wise sum


  accurate sum 1.6000000016      sum 1.6000000016      diff  4.441e-16 relative diff  2.776e-16 runtime 0.000000   OpenMP sum
  accurate sum 1.600000001599994 sum 1.600000001599994 diff          0 relative diff          0 runtime 0.000000   OpenMP sum with bit truncation
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   OpenMP sum with double double kahan sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 64 log 6 ndigits 4 ndigitsld 1 nbits 9 nbitsld 3
Initializing mesh with Leblanc problem, high values first
  accurate sum 3.2000000032      sum 3.200000003200002 diff  1.776e-15 relative diff  5.551e-16 runtime 0.000000   Serial sum
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Serial sum with digit truncation
  accurate sum 3.200000003199875 sum 3.200000003199875 diff          0 relative diff          0 runtime 0.000000   Serial sum with bit truncation
  accurate sum 3.2000000032      sum 3.2000000032      diff  1.084e-18 relative diff  3.388e-19 runtime 0.000000   Serial sum with long double accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Serial sum with long double accumulator with ndigit truncation
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Serial sum with long double accumulator with bit truncation
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double kahan sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff -4.441e-16 relative diff -1.388e-16 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 3.2000000032      sum 3.2000000032      diff -4.441e-16 relative diff -1.388e-16 runtime 0.000000   8 wide Fog C++ vector class Kahan sum
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double knuth sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   8 wide GCC vector extensions Knuth sum
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   8 wide Fog C++ vector class Knuth sum
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Pair-wise sum


  accurate sum 3.2000000032      sum 3.200000003200002 diff  1.776e-15 relative diff  5.551e-16 runtime 0.000000   OpenMP sum
  accurate sum 3.200000003199989 sum 3.200000003199989 diff          0 relative diff          0 runtime 0.000000   OpenMP sum with bit truncation
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   OpenMP sum with double double kahan sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 128 log 7 ndigits 4 ndigitsld 1 nbits 11 nbitsld 4
Initializing mesh with Leblanc problem, high values first
  accurate sum 6.4000000064      sum 6.400000006399994 diff -6.217e-15 relative diff -9.714e-16 runtime 0.000000   Serial sum
  accurate sum 6.4000000064      sum 6.400000006400001 diff  8.882e-16 relative diff  1.388e-16 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   Serial sum with digit truncation
  accurate sum 6.400000006398841 sum 6.400000006398841 diff          0 relative diff          0 runtime 0.000000   Serial sum with bit truncation
  accurate sum 6.4000000064      sum 6.4000000064      diff  2.168e-18 relative diff  3.388e-19 runtime 0.000000   Serial sum with long double accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   Serial sum with long double accumulator with ndigit truncation
  accurate sum 6.400000006399992 sum 6.400000006399992 diff          0 relative diff          0 runtime 0.000000   Serial sum with long double accumulator with bit truncation
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double kahan sum accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 6.4000000064      sum 6.400000006399999 diff -8.882e-16 relative diff -1.388e-16 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 6.4000000064      sum 6.400000006399999 diff -8.882e-16 relative diff -1.388e-16 runtime 0.000000   8 wide Fog C++ vector class Kahan sum
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000001   Serial sum with double double knuth sum accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   8 wide GCC vector extensions Knuth sum
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   8 wide Fog C++ vector class Knuth sum
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   Pair-wise sum


  accurate sum 6.4000000064      sum 6.400000006399994 diff -6.217e-15 relative diff -9.714e-16 runtime 0.000000   OpenMP sum
  accurate sum 6.400000006399978 sum 6.400000006399978 diff          0 relative diff          0 runtime 0.000000   OpenMP sum with bit truncation
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   OpenMP sum with double double kahan sum accumulator
  accurate sum 6.400000006399999 sum 6.400000006399999 diff          0 relative diff          0 runtime 0.000000   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 256 log 8 ndigits 4 ndigitsld 1 nbits 12 nbitsld 4
Initializing mesh with Leblanc problem, high values first
  accurate sum 12.8000000128     sum 12.80000001279997 diff -2.842e-14 relative diff  -2.22e-15 runtime 0.000000   Serial sum
  accurate sum 12.8000000128     sum 12.8000000128     diff  1.776e-15 relative diff  1.388e-16 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000001   Serial sum with digit truncation
  accurate sum 12.80000001279404 sum 12.80000001279404 diff          0 relative diff          0 runtime 0.000000   Serial sum with bit truncation
  accurate sum 12.8000000128     sum 12.8000000128     diff -5.117e-17 relative diff -3.998e-18 runtime 0.000000   Serial sum with long double accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000001   Serial sum with long double accumulator with ndigit truncation
  accurate sum 12.80000001279998 sum 12.80000001279998 diff          0 relative diff          0 runtime 0.000000   Serial sum with long double accumulator with bit truncation
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000001   Serial sum with double double kahan sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000000   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000000   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff -1.776e-15 relative diff -1.388e-16 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 12.8000000128     sum 12.8000000128     diff -1.776e-15 relative diff -1.388e-16 runtime 0.000000   8 wide Fog C++ vector class Kahan sum
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000002   Serial sum with double double knuth sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000001   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000001   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000001   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000000   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000000   8 wide GCC vector extensions Knuth sum
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000000   8 wide Fog C++ vector class Knuth sum
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000000   Pair-wise sum


  accurate sum 12.8000000128     sum 12.80000001279997 diff -2.842e-14 relative diff  -2.22e-15 runtime 0.000000   OpenMP sum
  accurate sum 12.8000000127995  sum 12.8000000127995  diff          0 relative diff          0 runtime 0.000000   OpenMP sum with bit truncation
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000001   OpenMP sum with double double kahan sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000001   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 512 log 9 ndigits 4 ndigitsld 1 nbits 13 nbitsld 5
Initializing mesh with Leblanc problem, high values first
  accurate sum 25.6000000256     sum 25.60000002559964 diff -3.588e-13 relative diff -1.402e-14 runtime 0.000001   Serial sum
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000001   Serial sum with digit truncation
  accurate sum 25.60000002558809 sum 25.60000002558809 diff          0 relative diff          0 runtime 0.000001   Serial sum with bit truncation
  accurate sum 25.6000000256     sum 25.6000000256     diff -1.023e-16 relative diff -3.998e-18 runtime 0.000001   Serial sum with long double accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000001   Serial sum with long double accumulator with ndigit truncation
  accurate sum 25.60000002559991 sum 25.60000002559991 diff          0 relative diff          0 runtime 0.000001   Serial sum with long double accumulator with bit truncation
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000002   Serial sum with double double kahan sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000001   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000001   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000001   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff -3.553e-15 relative diff -1.388e-16 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 25.6000000256     sum 25.6000000256     diff -3.553e-15 relative diff -1.388e-16 runtime 0.000000   8 wide Fog C++ vector class Kahan sum
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000004   Serial sum with double double knuth sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000001   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000001   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000001   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000001   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000001   8 wide GCC vector extensions Knuth sum
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000001   8 wide Fog C++ vector class Knuth sum
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000002   Pair-wise sum


  accurate sum 25.6000000256     sum 25.60000002559964 diff -3.588e-13 relative diff -1.402e-14 runtime 0.000001   OpenMP sum
  accurate sum 25.600000025599   sum 25.600000025599   diff          0 relative diff          0 runtime 0.000001   OpenMP sum with bit truncation
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000002   OpenMP sum with double double kahan sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000002   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 1024 log 10 ndigits 5 ndigitsld 2 nbits 14 nbitsld 6
Initializing mesh with Leblanc problem, high values first
  accurate sum 51.2000000512     sum 51.20000005120137 diff  1.371e-12 relative diff  2.678e-14 runtime 0.000001   Serial sum
  accurate sum 51.2000000512     sum 51.20000005120001 diff  1.421e-14 relative diff  2.776e-16 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 51.200000051      sum 51.200000051      diff          0 relative diff          0 runtime 0.000002   Serial sum with digit truncation
  accurate sum 51.20000005117618 sum 51.20000005117618 diff          0 relative diff          0 runtime 0.000001   Serial sum with bit truncation
  accurate sum 51.2000000512     sum 51.20000005120001 diff  6.835e-16 relative diff  1.335e-17 runtime 0.000001   Serial sum with long double accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000001   Serial sum with long double accumulator with ndigit truncation
  accurate sum 51.20000005119982 sum 51.20000005119982 diff          0 relative diff          0 runtime 0.000001   Serial sum with long double accumulator with bit truncation
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000004   Serial sum with double double kahan sum accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000001   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000001   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000001   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 51.2000000512     sum 51.20000005119999 diff -7.105e-15 relative diff -1.388e-16 runtime 0.000001   8 wide GCC vector extensions Kahan sum
  accurate sum 51.2000000512     sum 51.20000005119999 diff -7.105e-15 relative diff -1.388e-16 runtime 0.000001   8 wide Fog C++ vector class Kahan sum
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000009   Serial sum with double double knuth sum accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000002   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000002   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000002   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000001   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000001   8 wide GCC vector extensions Knuth sum
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000001   8 wide Fog C++ vector class Knuth sum
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000002   Pair-wise sum


  accurate sum 51.2000000512     sum 51.20000005120137 diff  1.371e-12 relative diff  2.678e-14 runtime 0.000001   OpenMP sum
  accurate sum 51.20000005119073 sum 51.20000005119073 diff          0 relative diff          0 runtime 0.000001   OpenMP sum with bit truncation
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000004   OpenMP sum with double double kahan sum accumulator
  accurate sum 51.20000005119999 sum 51.20000005119999 diff          0 relative diff          0 runtime 0.000004   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 2048 log 11 ndigits 5 ndigitsld 2 nbits 15 nbitsld 6
Initializing mesh with Leblanc problem, high values first
  accurate sum 102.4000001024    sum 102.4000001024003 diff  2.842e-13 relative diff  2.776e-15 runtime 0.000003   Serial sum
  accurate sum 102.4000001024    sum 102.4000001024001 diff  5.684e-14 relative diff  5.551e-16 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 102.4000001       sum 102.4000001       diff          0 relative diff          0 runtime 0.000003   Serial sum with digit truncation
  accurate sum 102.4000001023524 sum 102.4000001023524 diff          0 relative diff          0 runtime 0.000003   Serial sum with bit truncation
  accurate sum 102.4000001024    sum 102.4000001024    diff  1.367e-15 relative diff  1.335e-17 runtime 0.000002   Serial sum with long double accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000002   Serial sum with long double accumulator with ndigit truncation
  accurate sum 102.4000001023996 sum 102.4000001023996 diff          0 relative diff          0 runtime 0.000002   Serial sum with long double accumulator with bit truncation
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000009   Serial sum with double double kahan sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000002   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000002   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000002   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff -1.421e-14 relative diff -1.388e-16 runtime 0.000001   8 wide GCC vector extensions Kahan sum
  accurate sum 102.4000001024    sum 102.4000001024    diff -1.421e-14 relative diff -1.388e-16 runtime 0.000001   8 wide Fog C++ vector class Kahan sum
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000017   Serial sum with double double knuth sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000004   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000004   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000004   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000002   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000002   8 wide GCC vector extensions Knuth sum
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000002   8 wide Fog C++ vector class Knuth sum
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000004   Pair-wise sum


  accurate sum 102.4000001024    sum 102.4000001024003 diff  2.842e-13 relative diff  2.776e-15 runtime 0.000003   OpenMP sum
  accurate sum 102.4000001023524 sum 102.4000001023524 diff          0 relative diff          0 runtime 0.000003   OpenMP sum with bit truncation
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000009   OpenMP sum with double double kahan sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000009   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 4096 log 12 ndigits 5 ndigitsld 2 nbits 15 nbitsld 7
Initializing mesh with Leblanc problem, high values first
  accurate sum 204.8000002048    sum 204.8000002047672 diff  -3.28e-11 relative diff -1.601e-13 runtime 0.000006   Serial sum
  accurate sum 204.8000002048    sum 204.8000002047998 diff  -1.99e-13 relative diff -9.714e-16 runtime 0.000001   Serial sum (OpenMP SIMD pragma)
  accurate sum 204.8000002       sum 204.8000002       diff          0 relative diff          0 runtime 0.000006   Serial sum with digit truncation
  accurate sum 204.8000002047047 sum 204.8000002047047 diff          0 relative diff          0 runtime 0.000006   Serial sum with bit truncation
  accurate sum 204.8000002048    sum 204.8000002048    diff -1.148e-14 relative diff -5.604e-17 runtime 0.000004   Serial sum with long double accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000005   Serial sum with long double accumulator with ndigit truncation
  accurate sum 204.8000002047993 sum 204.8000002047993 diff          0 relative diff          0 runtime 0.000004   Serial sum with long double accumulator with bit truncation
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000017   Serial sum with double double kahan sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000004   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000004   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000004   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff -2.842e-14 relative diff -1.388e-16 runtime 0.000002   8 wide GCC vector extensions Kahan sum
  accurate sum 204.8000002048    sum 204.8000002048    diff -2.842e-14 relative diff -1.388e-16 runtime 0.000002   8 wide Fog C++ vector class Kahan sum
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000034   Serial sum with double double knuth sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000009   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000009   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000009   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000004   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000004   8 wide GCC vector extensions Knuth sum
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000004   8 wide Fog C++ vector class Knuth sum
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000008   Pair-wise sum


  accurate sum 204.8000002048    sum 204.8000002047672 diff  -3.28e-11 relative diff -1.601e-13 runtime 0.000006   OpenMP sum
  accurate sum 204.8000002047047 sum 204.8000002047047 diff          0 relative diff          0 runtime 0.000006   OpenMP sum with bit truncation
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000017   OpenMP sum with double double kahan sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000017   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 8192 log 13 ndigits 5 ndigitsld 2 nbits 17 nbitsld 7
Initializing mesh with Leblanc problem, high values first
  accurate sum 409.6000004096    sum 409.6000004095737 diff -2.626e-11 relative diff -6.412e-14 runtime 0.000011   Serial sum
  accurate sum 409.6000004096    sum 409.6000004095991 diff -9.095e-13 relative diff  -2.22e-15 runtime 0.000001   Serial sum (OpenMP SIMD pragma)
  accurate sum 409.60000041      sum 409.60000041      diff          0 relative diff          0 runtime 0.000011   Serial sum with digit truncation
  accurate sum 409.6000004038215 sum 409.6000004038215 diff          0 relative diff          0 runtime 0.000011   Serial sum with bit truncation
  accurate sum 409.6000004096    sum 409.6000004096001 diff  3.389e-14 relative diff  8.274e-17 runtime 0.000008   Serial sum with long double accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000009   Serial sum with long double accumulator with ndigit truncation
  accurate sum 409.6000004095986 sum 409.6000004095986 diff          0 relative diff          0 runtime 0.000009   Serial sum with long double accumulator with bit truncation
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000034   Serial sum with double double kahan sum accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000009   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000009   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000009   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 409.6000004096    sum 409.6000004095999 diff -5.684e-14 relative diff -1.388e-16 runtime 0.000004   8 wide GCC vector extensions Kahan sum
  accurate sum 409.6000004096    sum 409.6000004095999 diff -5.684e-14 relative diff -1.388e-16 runtime 0.000004   8 wide Fog C++ vector class Kahan sum
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000068   Serial sum with double double knuth sum accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000017   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000022   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000017   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000009   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000009   8 wide GCC vector extensions Knuth sum
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000009   8 wide Fog C++ vector class Knuth sum
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000017   Pair-wise sum


  accurate sum 409.6000004096    sum 409.6000004095737 diff -2.626e-11 relative diff -6.412e-14 runtime 0.000011   OpenMP sum
  accurate sum 409.6000004094094 sum 409.6000004094094 diff          0 relative diff          0 runtime 0.000011   OpenMP sum with bit truncation
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000034   OpenMP sum with double double kahan sum accumulator
  accurate sum 409.6000004095999 sum 409.6000004095999 diff          0 relative diff          0 runtime 0.000034   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 16384 log 14 ndigits 5 ndigitsld 2 nbits 18 nbitsld 8
Initializing mesh with Leblanc problem, high values first
  accurate sum 819.2000008192    sum 819.2000008196816 diff  4.816e-10 relative diff  5.879e-13 runtime 0.000023   Serial sum
  accurate sum 819.2000008192    sum 819.2000008191885 diff -1.148e-11 relative diff -1.402e-14 runtime 0.000002   Serial sum (OpenMP SIMD pragma)
  accurate sum 819.20000082      sum 819.20000082      diff          0 relative diff          0 runtime 0.000023   Serial sum with digit truncation
  accurate sum 819.2000007927418 sum 819.2000007927418 diff          0 relative diff          0 runtime 0.000023   Serial sum with bit truncation
  accurate sum 819.2000008192    sum 819.2000008192    diff -1.749e-14 relative diff -2.135e-17 runtime 0.000017   Serial sum with long double accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000017   Serial sum with long double accumulator with ndigit truncation
  accurate sum 819.2000008191972 sum 819.2000008191972 diff          0 relative diff          0 runtime 0.000017   Serial sum with long double accumulator with bit truncation
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000068   Serial sum with double double kahan sum accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000017   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000017   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000017   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 819.2000008192    sum 819.2000008191999 diff -1.137e-13 relative diff -1.388e-16 runtime 0.000009   8 wide GCC vector extensions Kahan sum
  accurate sum 819.2000008192    sum 819.2000008191999 diff -1.137e-13 relative diff -1.388e-16 runtime 0.000009   8 wide Fog C++ vector class Kahan sum
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000136   Serial sum with double double knuth sum accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000034   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000034   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000034   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000017   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000017   8 wide GCC vector extensions Knuth sum
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000017   8 wide Fog C++ vector class Knuth sum
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000041   Pair-wise sum


  accurate sum 819.2000008192    sum 819.2000008196816 diff  4.816e-10 relative diff  5.879e-13 runtime 0.000023   OpenMP sum
  accurate sum 819.2000008188188 sum 819.2000008188188 diff          0 relative diff          0 runtime 0.000032   OpenMP sum with bit truncation
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000058   OpenMP sum with double double kahan sum accumulator
  accurate sum 819.2000008191999 sum 819.2000008191999 diff          0 relative diff          0 runtime 0.000062   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 32768 log 15 ndigits 6 ndigitsld 3 nbits 19 nbitsld 9
Initializing mesh with Leblanc problem, high values first
  accurate sum 1638.4000016384   sum 1638.400001638733 diff  3.331e-10 relative diff  2.033e-13 runtime 0.000040   Serial sum
  accurate sum 1638.4000016384   sum 1638.400001638444 diff  4.388e-11 relative diff  2.678e-14 runtime 0.000003   Serial sum (OpenMP SIMD pragma)
  accurate sum 1638.400002       sum 1638.400002       diff          0 relative diff          0 runtime 0.000053   Serial sum with digit truncation
  accurate sum 1638.400001525879 sum 1638.400001525879 diff          0 relative diff          0 runtime 0.000045   Serial sum with bit truncation
  accurate sum 1638.4000016384   sum 1638.4000016384   diff -1.771e-13 relative diff -1.081e-16 runtime 0.000034   Serial sum with long double accumulator
  accurate sum 1638.400001638    sum 1638.400001638    diff          0 relative diff          0 runtime 0.000034   Serial sum with long double accumulator with ndigit truncation
  accurate sum 1638.400001638336 sum 1638.400001638336 diff          0 relative diff          0 runtime 0.000034   Serial sum with long double accumulator with bit truncation
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000137   Serial sum with double double kahan sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000034   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000034   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000034   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff -2.274e-13 relative diff -1.388e-16 runtime 0.000017   8 wide GCC vector extensions Kahan sum
  accurate sum 1638.4000016384   sum 1638.4000016384   diff -2.274e-13 relative diff -1.388e-16 runtime 0.000017   8 wide Fog C++ vector class Kahan sum
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000268   Serial sum with double double knuth sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000065   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000058   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000058   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000045   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000030   8 wide GCC vector extensions Knuth sum
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000030   8 wide Fog C++ vector class Knuth sum
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000015   Pair-wise sum


  accurate sum 1638.4000016384   sum 1638.400001638733 diff  3.331e-10 relative diff  2.033e-13 runtime 0.000040   OpenMP sum
  accurate sum 1638.400001630187 sum 1638.400001630187 diff          0 relative diff          0 runtime 0.000040   OpenMP sum with bit truncation
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000120   OpenMP sum with double double kahan sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000120   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 65536 log 16 ndigits 6 ndigitsld 3 nbits 20 nbitsld 9
Initializing mesh with Leblanc problem, high values first
  accurate sum 3276.8000032768   sum 3276.800003276371 diff -4.293e-10 relative diff  -1.31e-13 runtime 0.000079   Serial sum
  accurate sum 3276.8000032768   sum 3276.800003276809 diff  9.095e-12 relative diff  2.776e-15 runtime 0.000011   Serial sum (OpenMP SIMD pragma)
  accurate sum 3276.800003       sum 3276.800003       diff          0 relative diff          0 runtime 0.000100   Serial sum with digit truncation
  accurate sum 3276.800003051758 sum 3276.800003051758 diff          0 relative diff          0 runtime 0.000090   Serial sum with bit truncation
  accurate sum 3276.8000032768   sum 3276.800003276801 diff   8.68e-13 relative diff  2.649e-16 runtime 0.000068   Serial sum with long double accumulator
  accurate sum 3276.800003277    sum 3276.800003277    diff          0 relative diff          0 runtime 0.000068   Serial sum with long double accumulator with ndigit truncation
  accurate sum 3276.800003276672 sum 3276.800003276672 diff          0 relative diff          0 runtime 0.000068   Serial sum with long double accumulator with bit truncation
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000281   Serial sum with double double kahan sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000060   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000058   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000058   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff -4.547e-13 relative diff -1.388e-16 runtime 0.000043   8 wide GCC vector extensions Kahan sum
  accurate sum 3276.8000032768   sum 3276.8000032768   diff -4.547e-13 relative diff -1.388e-16 runtime 0.000030   8 wide Fog C++ vector class Kahan sum
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000481   Serial sum with double double knuth sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000120   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000120   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000120   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000060   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000060   8 wide GCC vector extensions Knuth sum
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000060   8 wide Fog C++ vector class Knuth sum
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000036   Pair-wise sum


  accurate sum 3276.8000032768   sum 3276.800003276371 diff -4.293e-10 relative diff  -1.31e-13 runtime 0.000079   OpenMP sum
  accurate sum 3276.800003260374 sum 3276.800003260374 diff          0 relative diff          0 runtime 0.000079   OpenMP sum with bit truncation
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000239   OpenMP sum with double double kahan sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000239   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 131072 log 17 ndigits 6 ndigitsld 3 nbits 21 nbitsld 10
Initializing mesh with Leblanc problem, high values first
  accurate sum 6553.6000065536   sum 6553.600006562821 diff  9.221e-09 relative diff  1.407e-12 runtime 0.000160   Serial sum
  accurate sum 6553.6000065536   sum 6553.60000655255  diff  -1.05e-09 relative diff -1.601e-13 runtime 0.000034   Serial sum (OpenMP SIMD pragma)
  accurate sum 6553.600007       sum 6553.600007       diff          0 relative diff          0 runtime 0.000182   Serial sum with digit truncation
  accurate sum 6553.600006103516 sum 6553.600006103516 diff          0 relative diff          0 runtime 0.000182   Serial sum with bit truncation
  accurate sum 6553.6000065536   sum 6553.600006553605 diff  3.868e-12 relative diff  5.901e-16 runtime 0.000141   Serial sum with long double accumulator
  accurate sum 6553.600006554    sum 6553.600006554    diff          0 relative diff          0 runtime 0.000136   Serial sum with long double accumulator with ndigit truncation
  accurate sum 6553.600006553344 sum 6553.600006553344 diff          0 relative diff          0 runtime 0.000129   Serial sum with long double accumulator with bit truncation
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000463   Serial sum with double double kahan sum accumulator
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000119   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000116   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000120   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 6553.6000065536   sum 6553.600006553599 diff -9.095e-13 relative diff -1.388e-16 runtime 0.000074   8 wide GCC vector extensions Kahan sum
  accurate sum 6553.6000065536   sum 6553.600006553599 diff -9.095e-13 relative diff -1.388e-16 runtime 0.000061   8 wide Fog C++ vector class Kahan sum
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000962   Serial sum with double double knuth sum accumulator
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000236   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000233   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000233   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000143   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000120   8 wide GCC vector extensions Knuth sum
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000120   8 wide Fog C++ vector class Knuth sum
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000092   Pair-wise sum


  accurate sum 6553.6000065536   sum 6553.600006562821 diff  9.221e-09 relative diff  1.407e-12 runtime 0.000159   OpenMP sum
  accurate sum 6553.600006461143 sum 6553.600006461143 diff          0 relative diff          0 runtime 0.000165   OpenMP sum with bit truncation
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000478   OpenMP sum with double double kahan sum accumulator
  accurate sum 6553.600006553599 sum 6553.600006553599 diff          0 relative diff          0 runtime 0.000477   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 262144 log 18 ndigits 6 ndigitsld 3 nbits 22 nbitsld 10
Initializing mesh with Leblanc problem, high values first
  accurate sum 13107.2000131072  sum 13107.20001314317 diff  3.597e-08 relative diff  2.745e-12 runtime 0.000323   Serial sum
  accurate sum 13107.2000131072  sum 13107.20001310636 diff -8.404e-10 relative diff -6.412e-14 runtime 0.000090   Serial sum (OpenMP SIMD pragma)
  accurate sum 13107.20001       sum 13107.20001       diff          0 relative diff          0 runtime 0.000364   Serial sum with digit truncation
  accurate sum 13107.20001220703 sum 13107.20001220703 diff          0 relative diff          0 runtime 0.000366   Serial sum with bit truncation
  accurate sum 13107.2000131072  sum 13107.20001310719 diff -1.196e-11 relative diff -9.126e-16 runtime 0.000232   Serial sum with long double accumulator
  accurate sum 13107.20001311    sum 13107.20001311    diff          0 relative diff          0 runtime 0.000233   Serial sum with long double accumulator with ndigit truncation
  accurate sum 13107.20001310669 sum 13107.20001310669 diff          0 relative diff          0 runtime 0.000232   Serial sum with long double accumulator with bit truncation
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000930   Serial sum with double double kahan sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000235   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000236   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000233   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff -1.819e-12 relative diff -1.388e-16 runtime 0.000134   8 wide GCC vector extensions Kahan sum
  accurate sum 13107.2000131072  sum 13107.2000131072  diff -1.819e-12 relative diff -1.388e-16 runtime 0.000121   8 wide Fog C++ vector class Kahan sum
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.001903   Serial sum with double double knuth sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000473   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000465   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000469   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000255   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000241   8 wide GCC vector extensions Knuth sum
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000241   8 wide Fog C++ vector class Knuth sum
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000209   Pair-wise sum


  accurate sum 13107.2000131072  sum 13107.20001314317 diff  3.597e-08 relative diff  2.745e-12 runtime 0.000319   OpenMP sum
  accurate sum 13107.20001268387 sum 13107.20001268387 diff          0 relative diff          0 runtime 0.000324   OpenMP sum with bit truncation
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000961   OpenMP sum with double double kahan sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000932   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 524288 log 19 ndigits 6 ndigitsld 3 nbits 23 nbitsld 11
Initializing mesh with Leblanc problem, high values first
  accurate sum 26214.4000262144  sum 26214.40002564823 diff -5.662e-07 relative diff  -2.16e-11 runtime 0.000638   Serial sum
  accurate sum 26214.4000262144  sum 26214.40002622981 diff  1.541e-08 relative diff  5.879e-13 runtime 0.000174   Serial sum (OpenMP SIMD pragma)
  accurate sum 26214.40003       sum 26214.40003       diff          0 relative diff          0 runtime 0.000728   Serial sum with digit truncation
  accurate sum 26214.40002441406 sum 26214.40002441406 diff          0 relative diff          0 runtime 0.000623   Serial sum with bit truncation
  accurate sum 26214.4000262144  sum 26214.40002621434 diff -5.817e-11 relative diff -2.219e-15 runtime 0.000464   Serial sum with long double accumulator
  accurate sum 26214.40002621    sum 26214.40002621    diff          0 relative diff          0 runtime 0.000468   Serial sum with long double accumulator with ndigit truncation
  accurate sum 26214.40002620965 sum 26214.40002620965 diff          0 relative diff          0 runtime 0.000464   Serial sum with long double accumulator with bit truncation
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.001859   Serial sum with double double kahan sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.000470   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.000464   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.000469   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff -3.638e-12 relative diff -1.388e-16 runtime 0.000254   8 wide GCC vector extensions Kahan sum
  accurate sum 26214.4000262144  sum 26214.4000262144  diff -3.638e-12 relative diff -1.388e-16 runtime 0.000243   8 wide Fog C++ vector class Kahan sum
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.003773   Serial sum with double double knuth sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.000937   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.000942   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.000906   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.000480   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.000496   8 wide GCC vector extensions Knuth sum
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.000481   8 wide Fog C++ vector class Knuth sum
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.000449   Pair-wise sum


  accurate sum 26214.4000262144  sum 26214.40002564823 diff -5.662e-07 relative diff  -2.16e-11 runtime 0.000623   OpenMP sum
  accurate sum 26214.40002441406 sum 26214.40002441406 diff          0 relative diff          0 runtime 0.000622   OpenMP sum with bit truncation
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.001838   OpenMP sum with double double kahan sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.001805   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 1048576 log 20 ndigits 7 ndigitsld 4 nbits 24 nbitsld 12
Initializing mesh with Leblanc problem, high values first
  accurate sum 52428.8000524288  sum 52428.80005292332 diff  4.945e-07 relative diff  9.432e-12 runtime 0.001246   Serial sum
  accurate sum 52428.8000524288  sum 52428.80005243946 diff  1.066e-08 relative diff  2.033e-13 runtime 0.000341   Serial sum (OpenMP SIMD pragma)
  accurate sum 52428.8001        sum 52428.8001        diff          0 relative diff          0 runtime 0.001252   Serial sum with digit truncation
  accurate sum 52428.80004882812 sum 52428.80004882812 diff          0 relative diff          0 runtime 0.001205   Serial sum with bit truncation
  accurate sum 52428.8000524288  sum 52428.80005242807 diff -7.327e-10 relative diff -1.397e-14 runtime 0.000905   Serial sum with long double accumulator
  accurate sum 52428.8000524     sum 52428.8000524     diff          0 relative diff          0 runtime 0.000905   Serial sum with long double accumulator with ndigit truncation
  accurate sum 52428.8000524044  sum 52428.8000524044  diff          0 relative diff          0 runtime 0.000903   Serial sum with long double accumulator with bit truncation
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.003610   Serial sum with double double kahan sum accumulator
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.000904   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.000904   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.000906   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 52428.8000524288  sum 52428.80005242879 diff -7.276e-12 relative diff -1.388e-16 runtime 0.000486   8 wide GCC vector extensions Kahan sum
  accurate sum 52428.8000524288  sum 52428.80005242879 diff -7.276e-12 relative diff -1.388e-16 runtime 0.000470   8 wide Fog C++ vector class Kahan sum
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.007277   Serial sum with double double knuth sum accumulator
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.001815   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.001811   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.001814   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.000950   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.000972   8 wide GCC vector extensions Knuth sum
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.000960   8 wide Fog C++ vector class Knuth sum
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.000892   Pair-wise sum


  accurate sum 52428.8000524288  sum 52428.80005292332 diff  4.945e-07 relative diff  9.432e-12 runtime 0.001249   OpenMP sum
  accurate sum 52428.80004882812 sum 52428.80004882812 diff          0 relative diff          0 runtime 0.001205   OpenMP sum with bit truncation
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.003618   OpenMP sum with double double kahan sum accumulator
  accurate sum 52428.80005242879 sum 52428.80005242879 diff          0 relative diff          0 runtime 0.003617   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 2097152 log 21 ndigits 7 ndigitsld 4 nbits 25 nbitsld 12
Initializing mesh with Leblanc problem, high values first
  accurate sum 104857.6001048576 sum 104857.6001084272 diff   3.57e-06 relative diff  3.404e-11 runtime 0.002467   Serial sum
  accurate sum 104857.6001048576 sum 104857.6001048439 diff -1.374e-08 relative diff  -1.31e-13 runtime 0.000692   Serial sum (OpenMP SIMD pragma)
  accurate sum 104857.6          sum 104857.6          diff          0 relative diff          0 runtime 0.002455   Serial sum with digit truncation
  accurate sum 104857.6000976562 sum 104857.6000976562 diff          0 relative diff          0 runtime 0.002411   Serial sum with bit truncation
  accurate sum 104857.6001048576 sum 104857.6001048604 diff  2.808e-09 relative diff  2.678e-14 runtime 0.001804   Serial sum with long double accumulator
  accurate sum 104857.600105     sum 104857.600105     diff          0 relative diff          0 runtime 0.001807   Serial sum with long double accumulator with ndigit truncation
  accurate sum 104857.6001048088 sum 104857.6001048088 diff          0 relative diff          0 runtime 0.001806   Serial sum with long double accumulator with bit truncation
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.007215   Serial sum with double double kahan sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.001811   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.001808   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.001812   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff -1.455e-11 relative diff -1.388e-16 runtime 0.000952   8 wide GCC vector extensions Kahan sum
  accurate sum 104857.6001048576 sum 104857.6001048576 diff -1.455e-11 relative diff -1.388e-16 runtime 0.000939   8 wide Fog C++ vector class Kahan sum
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.014508   Serial sum with double double knuth sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.003626   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.003620   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.003627   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.001955   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.001871   8 wide GCC vector extensions Knuth sum
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.001876   8 wide Fog C++ vector class Knuth sum
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.002089   Pair-wise sum


  accurate sum 104857.6001048576 sum 104857.6001084272 diff   3.57e-06 relative diff  3.404e-11 runtime 0.002445   OpenMP sum
  accurate sum 104857.6000976562 sum 104857.6000976562 diff          0 relative diff          0 runtime 0.002411   OpenMP sum with bit truncation
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.007215   OpenMP sum with double double kahan sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.007215   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 4194304 log 22 ndigits 7 ndigitsld 4 nbits 26 nbitsld 13
Initializing mesh with Leblanc problem, high values first
  accurate sum 209715.2002097152 sum 209715.2001908246 diff -1.889e-05 relative diff -9.008e-11 runtime 0.005002   Serial sum
  accurate sum 209715.2002097152 sum 209715.2002100103 diff  2.951e-07 relative diff  1.407e-12 runtime 0.001603   Serial sum (OpenMP SIMD pragma)
  accurate sum 209715.2          sum 209715.2          diff          0 relative diff          0 runtime 0.004993   Serial sum with digit truncation
  accurate sum 209715.19921875   sum 209715.19921875   diff          0 relative diff          0 runtime 0.004943   Serial sum with bit truncation
  accurate sum 209715.2002097152 sum 209715.2002097158 diff  5.755e-10 relative diff  2.744e-15 runtime 0.003841   Serial sum with long double accumulator
  accurate sum 209715.20021      sum 209715.20021      diff          0 relative diff          0 runtime 0.003843   Serial sum with long double accumulator with ndigit truncation
  accurate sum 209715.2002096176 sum 209715.2002096176 diff          0 relative diff          0 runtime 0.003845   Serial sum with long double accumulator with bit truncation
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.014455   Serial sum with double double kahan sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.003838   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.003817   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.003814   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff  -2.91e-11 relative diff -1.388e-16 runtime 0.002167   8 wide GCC vector extensions Kahan sum
  accurate sum 209715.2002097152 sum 209715.2002097152 diff  -2.91e-11 relative diff -1.388e-16 runtime 0.002162   8 wide Fog C++ vector class Kahan sum
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.029008   Serial sum with double double knuth sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.007323   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.007326   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.007323   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.004011   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.003949   8 wide GCC vector extensions Knuth sum
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.003864   8 wide Fog C++ vector class Knuth sum
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.005596   Pair-wise sum


  accurate sum 209715.2002097152 sum 209715.2001908246 diff -1.889e-05 relative diff -9.008e-11 runtime 0.004744   OpenMP sum
  accurate sum 209715.2001953125 sum 209715.2000732422 diff -0.0001221 relative diff -5.821e-10 runtime 0.004739   OpenMP sum with bit truncation
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.013921   OpenMP sum with double double kahan sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.013907   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 8388608 log 23 ndigits 7 ndigitsld 4 nbits 27 nbitsld 13
Initializing mesh with Leblanc problem, high values first
  accurate sum 419430.4004194304 sum 419430.400462431  diff    4.3e-05 relative diff  1.025e-10 runtime 0.009797   Serial sum
  accurate sum 419430.4004194304 sum 419430.4004205816 diff  1.151e-06 relative diff  2.745e-12 runtime 0.003927   Serial sum (OpenMP SIMD pragma)
  accurate sum 419430.4          sum 419430.4          diff          0 relative diff          0 runtime 0.010026   Serial sum with digit truncation
  accurate sum 419430.3984375    sum 419430.3984375    diff          0 relative diff          0 runtime 0.009623   Serial sum with bit truncation
  accurate sum 419430.4004194304 sum 419430.4004193632 diff -6.722e-08 relative diff -1.603e-13 runtime 0.007725   Serial sum with long double accumulator
  accurate sum 419430.400419     sum 419430.400419     diff          0 relative diff          0 runtime 0.007722   Serial sum with long double accumulator with ndigit truncation
  accurate sum 419430.4004192352 sum 419430.4004192352 diff          0 relative diff          0 runtime 0.007726   Serial sum with long double accumulator with bit truncation
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.027517   Serial sum with double double kahan sum accumulator
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.007701   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.007698   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.007705   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 419430.4004194304 sum 419430.4004194303 diff -5.821e-11 relative diff -1.388e-16 runtime 0.004863   8 wide GCC vector extensions Kahan sum
  accurate sum 419430.4004194304 sum 419430.4004194303 diff -5.821e-11 relative diff -1.388e-16 runtime 0.004845   8 wide Fog C++ vector class Kahan sum
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.054840   Serial sum with double double knuth sum accumulator
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.014179   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.014098   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.014208   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.008298   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.007997   8 wide GCC vector extensions Knuth sum
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.007906   8 wide Fog C++ vector class Knuth sum
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.017862   Pair-wise sum


  accurate sum 419430.4004194304 sum 419430.400462431  diff    4.3e-05 relative diff  1.025e-10 runtime 0.009686   OpenMP sum
  accurate sum 419430.400390625  sum 419430.400390625  diff          0 relative diff          0 runtime 0.009603   OpenMP sum with bit truncation
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.027440   OpenMP sum with double double kahan sum accumulator
  accurate sum 419430.4004194303 sum 419430.4004194303 diff          0 relative diff          0 runtime 0.027873   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 16777216 log 24 ndigits 7 ndigitsld 4 nbits 27 nbitsld 14
Initializing mesh with Leblanc problem, high values first
  accurate sum 838860.8008388608 sum 838860.800853056  diff   1.42e-05 relative diff  1.692e-11 runtime 0.019799   Serial sum
  accurate sum 838860.8008388608 sum 838860.8008207433 diff -1.812e-05 relative diff  -2.16e-11 runtime 0.009116   Serial sum (OpenMP SIMD pragma)
  accurate sum 838860.801        sum 838860.801        diff          0 relative diff          0 runtime 0.019479   Serial sum with digit truncation
  accurate sum 838860.796875     sum 838860.796875     diff          0 relative diff          0 runtime 0.019433   Serial sum with bit truncation
  accurate sum 838860.8008388608 sum 838860.800838807  diff  -5.38e-08 relative diff -6.413e-14 runtime 0.015847   Serial sum with long double accumulator
  accurate sum 838860.800839     sum 838860.800839     diff          0 relative diff          0 runtime 0.015757   Serial sum with long double accumulator with ndigit truncation
  accurate sum 838860.8008384705 sum 838860.8008384705 diff          0 relative diff          0 runtime 0.015768   Serial sum with long double accumulator with bit truncation
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.055614   Serial sum with double double kahan sum accumulator
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.015798   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.015696   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.015713   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 838860.8008388608 sum 838860.8008388607 diff -1.164e-10 relative diff -1.388e-16 runtime 0.010244   8 wide GCC vector extensions Kahan sum
  accurate sum 838860.8008388608 sum 838860.8008388607 diff -1.164e-10 relative diff -1.388e-16 runtime 0.010299   8 wide Fog C++ vector class Kahan sum
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.109673   Serial sum with double double knuth sum accumulator
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.028391   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.028407   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.028580   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.015883   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.015868   8 wide GCC vector extensions Knuth sum
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.015876   8 wide Fog C++ vector class Knuth sum
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.037159   Pair-wise sum


  accurate sum 838860.8008388608 sum 838860.800853056  diff   1.42e-05 relative diff  1.692e-11 runtime 0.020253   OpenMP sum
  accurate sum 838860.80078125   sum 838860.80078125   diff          0 relative diff          0 runtime 0.019904   OpenMP sum with bit truncation
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.055029   OpenMP sum with double double kahan sum accumulator
  accurate sum 838860.8008388607 sum 838860.8008388607 diff          0 relative diff          0 runtime 0.055341   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 33554432 log 25 ndigits 8 ndigitsld 5 nbits 29 nbitsld 15
Initializing mesh with Leblanc problem, high values first
  accurate sum 1677721.601677722 sum 1677721.600413603 diff  -0.001264 relative diff -7.535e-10 runtime 0.039331   Serial sum
  accurate sum 1677721.601677722 sum 1677721.601693546 diff  1.582e-05 relative diff  9.432e-12 runtime 0.019381   Serial sum (OpenMP SIMD pragma)
  accurate sum 1677721.6         sum 1677721.6         diff          0 relative diff          0 runtime 0.039165   Serial sum with digit truncation
  accurate sum 1677721.5         sum 1677721.5         diff          0 relative diff          0 runtime 0.039320   Serial sum with bit truncation
  accurate sum 1677721.601677722 sum 1677721.601678708 diff  9.863e-07 relative diff  5.879e-13 runtime 0.031907   Serial sum with long double accumulator
  accurate sum 1677721.6017      sum 1677721.6017      diff          0 relative diff          0 runtime 0.032022   Serial sum with long double accumulator with ndigit truncation
  accurate sum 1677721.601676941 sum 1677721.601676941 diff          0 relative diff          0 runtime 0.032483   Serial sum with long double accumulator with bit truncation
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.110746   Serial sum with double double kahan sum accumulator
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.031836   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.031853   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.031829   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 1677721.601677722 sum 1677721.601677721 diff -2.328e-10 relative diff -1.388e-16 runtime 0.020923   8 wide GCC vector extensions Kahan sum
  accurate sum 1677721.601677722 sum 1677721.601677721 diff -2.328e-10 relative diff -1.388e-16 runtime 0.020935   8 wide Fog C++ vector class Kahan sum
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.221008   Serial sum with double double knuth sum accumulator
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.057339   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.057110   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.057232   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.032134   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.032070   8 wide GCC vector extensions Knuth sum
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.032179   8 wide Fog C++ vector class Knuth sum
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.076296   Pair-wise sum


  accurate sum 1677721.601677722 sum 1677721.600413603 diff  -0.001264 relative diff -7.535e-10 runtime 0.040812   OpenMP sum
  accurate sum 1677721.6015625   sum 1677721.59375     diff  -0.007812 relative diff -4.657e-09 runtime 0.040356   OpenMP sum with bit truncation
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.110103   OpenMP sum with double double kahan sum accumulator
  accurate sum 1677721.601677721 sum 1677721.601677721 diff          0 relative diff          0 runtime 0.110453   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 67108864 log 26 ndigits 8 ndigitsld 5 nbits 30 nbitsld 15
Initializing mesh with Leblanc problem, high values first
  accurate sum 3355443.203355443 sum 3355443.201976103 diff  -0.001379 relative diff -4.111e-10 runtime 0.080660   Serial sum
  accurate sum 3355443.203355443 sum 3355443.203469669 diff  0.0001142 relative diff  3.404e-11 runtime 0.040080   Serial sum (OpenMP SIMD pragma)
  accurate sum 3355443.2         sum 3355443.2         diff          0 relative diff          0 runtime 0.079263   Serial sum with digit truncation
  accurate sum 3355443           sum 3355443           diff          0 relative diff          0 runtime 0.079172   Serial sum with bit truncation
  accurate sum 3355443.203355443 sum 3355443.203356126 diff  6.824e-07 relative diff  2.034e-13 runtime 0.064214   Serial sum with long double accumulator
  accurate sum 3355443.2034      sum 3355443.2034      diff          0 relative diff          0 runtime 0.064109   Serial sum with long double accumulator with ndigit truncation
  accurate sum 3355443.203353882 sum 3355443.203353882 diff          0 relative diff          0 runtime 0.064142   Serial sum with long double accumulator with bit truncation
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.221128   Serial sum with double double kahan sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.064491   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.063962   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.064652   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff -4.657e-10 relative diff -1.388e-16 runtime 0.042366   8 wide GCC vector extensions Kahan sum
  accurate sum 3355443.203355443 sum 3355443.203355443 diff -4.657e-10 relative diff -1.388e-16 runtime 0.042657   8 wide Fog C++ vector class Kahan sum
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.439267   Serial sum with double double knuth sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.114433   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.114296   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.114974   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.064976   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.064382   8 wide GCC vector extensions Knuth sum
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.064451   8 wide Fog C++ vector class Knuth sum
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.155862   Pair-wise sum


  accurate sum 3355443.203355443 sum 3355443.201976103 diff  -0.001379 relative diff -4.111e-10 runtime 0.080760   OpenMP sum
  accurate sum 3355443.1875      sum 3355443.1875      diff          0 relative diff          0 runtime 0.080553   OpenMP sum with bit truncation
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.220238   OpenMP sum with double double kahan sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.220549   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 134217728 log 27 ndigits 8 ndigitsld 5 nbits 31 nbitsld 16
Initializing mesh with Leblanc problem, high values first
  accurate sum 6710886.406710886 sum 6710886.393382353 diff   -0.01333 relative diff -1.986e-09 runtime 0.160923   Serial sum
  accurate sum 6710886.406710886 sum 6710886.406106387 diff -0.0006045 relative diff -9.008e-11 runtime 0.081549   Serial sum (OpenMP SIMD pragma)
  accurate sum 6710886.4         sum 6710886.4         diff          0 relative diff          0 runtime 0.157081   Serial sum with digit truncation
  accurate sum 6710886           sum 6710886           diff          0 relative diff          0 runtime 0.157050   Serial sum with bit truncation
  accurate sum 6710886.406710886 sum 6710886.406710007 diff -8.792e-07 relative diff  -1.31e-13 runtime 0.128919   Serial sum with long double accumulator
  accurate sum 6710886.4067      sum 6710886.4067      diff          0 relative diff          0 runtime 0.128633   Serial sum with long double accumulator with ndigit truncation
  accurate sum 6710886.406677246 sum 6710886.406677246 diff          0 relative diff          0 runtime 0.128603   Serial sum with long double accumulator with bit truncation
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.440669   Serial sum with double double kahan sum accumulator
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.128606   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.128188   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.128239   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 6710886.406710886 sum 6710886.406710885 diff -9.313e-10 relative diff -1.388e-16 runtime 0.085253   8 wide GCC vector extensions Kahan sum
  accurate sum 6710886.406710886 sum 6710886.406710885 diff -9.313e-10 relative diff -1.388e-16 runtime 0.085271   8 wide Fog C++ vector class Kahan sum
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.877536   Serial sum with double double knuth sum accumulator
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.228766   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.228991   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.228477   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.132805   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.132788   8 wide GCC vector extensions Knuth sum
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.132735   8 wide Fog C++ vector class Knuth sum
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.316480   Pair-wise sum


  accurate sum 6710886.406710886 sum 6710886.393382353 diff   -0.01333 relative diff -1.986e-09 runtime 0.161584   OpenMP sum
  accurate sum 6710886.375       sum 6710886.375       diff          0 relative diff          0 runtime 0.159908   OpenMP sum with bit truncation
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.440642   OpenMP sum with double double kahan sum accumulator
  accurate sum 6710886.406710885 sum 6710886.406710885 diff          0 relative diff          0 runtime 0.440610   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 268435456 log 28 ndigits 8 ndigitsld 5 nbits 32 nbitsld 16
Initializing mesh with Leblanc problem, high values first
  accurate sum 13421772.81342177 sum 13421772.76838235 diff   -0.04504 relative diff -3.356e-09 runtime 0.314431   Serial sum
  accurate sum 13421772.81342177 sum 13421772.81479779 diff   0.001376 relative diff  1.025e-10 runtime 0.164386   Serial sum (OpenMP SIMD pragma)
  accurate sum 13421773          sum 13421773          diff          0 relative diff          0 runtime 0.314386   Serial sum with digit truncation
  accurate sum 13421768          sum 13421768          diff          0 relative diff          0 runtime 0.314117   Serial sum with bit truncation
  accurate sum 13421772.81342177 sum 13421772.81344066 diff  1.889e-05 relative diff  1.407e-12 runtime 0.257723   Serial sum with long double accumulator
  accurate sum 13421772.813      sum 13421772.813      diff          0 relative diff          0 runtime 0.257489   Serial sum with long double accumulator with ndigit truncation
  accurate sum 13421772.81335449 sum 13421772.81335449 diff          0 relative diff          0 runtime 0.257836   Serial sum with long double accumulator with bit truncation
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.885161   Serial sum with double double kahan sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.256995   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.256611   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.256561   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff -1.863e-09 relative diff -1.388e-16 runtime 0.171220   8 wide GCC vector extensions Kahan sum
  accurate sum 13421772.81342177 sum 13421772.81342177 diff -1.863e-09 relative diff -1.388e-16 runtime 0.171095   8 wide Fog C++ vector class Kahan sum
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 1.755478   Serial sum with double double knuth sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.456750   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.457219   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.456813   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.260334   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.264638   8 wide GCC vector extensions Knuth sum
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.264616   8 wide Fog C++ vector class Knuth sum
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.638810   Pair-wise sum


  accurate sum 13421772.81342177 sum 13421772.76838235 diff   -0.04504 relative diff -3.356e-09 runtime 0.318542   OpenMP sum
  accurate sum 13421772.5        sum 13421772.5        diff          0 relative diff          0 runtime 0.316790   OpenMP sum with bit truncation
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.881831   OpenMP sum with double double kahan sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.885231   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 536870912 log 29 ndigits 8 ndigitsld 5 nbits 33 nbitsld 17
Initializing mesh with Leblanc problem, high values first
  accurate sum 26843545.62684355 sum 26843545.70588235 diff    0.07904 relative diff  2.944e-09 runtime 0.634797   Serial sum
  accurate sum 26843545.62684355 sum 26843545.62729779 diff  0.0004542 relative diff  1.692e-11 runtime 0.330113   Serial sum (OpenMP SIMD pragma)
  accurate sum 26843546          sum 26843546          diff          0 relative diff          0 runtime 0.634711   Serial sum with digit truncation
  accurate sum 26843520          sum 26843520          diff          0 relative diff          0 runtime 0.632173   Serial sum with bit truncation
  accurate sum 26843545.62684355 sum 26843545.62691722 diff  7.367e-05 relative diff  2.745e-12 runtime 0.515576   Serial sum with long double accumulator
  accurate sum 26843545.627      sum 26843545.627      diff          0 relative diff          0 runtime 0.516741   Serial sum with long double accumulator with ndigit truncation
  accurate sum 26843545.62646484 sum 26843545.62646484 diff          0 relative diff          0 runtime 0.515711   Serial sum with long double accumulator with bit truncation
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 1.765571   Serial sum with double double kahan sum accumulator
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 0.514475   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 0.514122   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 0.513992   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 26843545.62684355 sum 26843545.62684354 diff -3.725e-09 relative diff -1.388e-16 runtime 0.343057   8 wide GCC vector extensions Kahan sum
  accurate sum 26843545.62684355 sum 26843545.62684354 diff -3.725e-09 relative diff -1.388e-16 runtime 0.343153   8 wide Fog C++ vector class Kahan sum
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 3.509949   Serial sum with double double knuth sum accumulator
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 0.915429   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 0.914212   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 0.913870   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 0.518718   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 0.517445   8 wide GCC vector extensions Knuth sum
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 0.517201   8 wide Fog C++ vector class Knuth sum
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 1.285929   Pair-wise sum


  accurate sum 26843545.62684355 sum 26843545.70588235 diff    0.07904 relative diff  2.944e-09 runtime 0.638561   OpenMP sum
  accurate sum 26843544          sum 26843544          diff          0 relative diff          0 runtime 0.628914   OpenMP sum with bit truncation
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 1.766322   OpenMP sum with double double kahan sum accumulator
  accurate sum 26843545.62684354 sum 26843545.62684354 diff          0 relative diff          0 runtime 1.767544   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 1073741824 log 30 ndigits 9 ndigitsld 6 nbits 34 nbitsld 18
Initializing mesh with Leblanc problem, high values first
  accurate sum 53687091.25368709 sum 53687091.70588235 diff     0.4522 relative diff  8.423e-09 runtime 1.289353   Serial sum
  accurate sum 53687091.25368709 sum 53687091.21323529 diff   -0.04045 relative diff -7.535e-10 runtime 0.660084   Serial sum (OpenMP SIMD pragma)
  accurate sum 53687090          sum 53687090          diff          0 relative diff          0 runtime 1.271835   Serial sum with digit truncation
  accurate sum 53687040          sum 53687040          diff          0 relative diff          0 runtime 1.264112   Serial sum with bit truncation
  accurate sum 53687091.25368709 sum 53687091.25252757 diff   -0.00116 relative diff  -2.16e-11 runtime 1.032939   Serial sum with long double accumulator
  accurate sum 53687091.25       sum 53687091.25       diff          0 relative diff          0 runtime 1.034036   Serial sum with long double accumulator with ndigit truncation
  accurate sum 53687091.25195312 sum 53687091.25195312 diff          0 relative diff          0 runtime 1.033461   Serial sum with long double accumulator with bit truncation
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 3.536772   Serial sum with double double kahan sum accumulator
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 1.028642   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 1.028289   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 1.028480   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 53687091.25368709 sum 53687091.25368708 diff -7.451e-09 relative diff -1.388e-16 runtime 0.686445   8 wide GCC vector extensions Kahan sum
  accurate sum 53687091.25368709 sum 53687091.25368708 diff -7.451e-09 relative diff -1.388e-16 runtime 0.686911   8 wide Fog C++ vector class Kahan sum
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 7.020148   Serial sum with double double knuth sum accumulator
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 1.829306   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 1.829491   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 1.829847   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 1.034396   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 1.035308   8 wide GCC vector extensions Knuth sum
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 1.035189   8 wide Fog C++ vector class Knuth sum
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 2.582273   Pair-wise sum


  accurate sum 53687091.25368709 sum 53687091.70588235 diff     0.4522 relative diff  8.423e-09 runtime 1.272805   OpenMP sum
  accurate sum 53687088          sum 53687088          diff          0 relative diff          0 runtime 1.268585   OpenMP sum with bit truncation
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 3.535423   OpenMP sum with double double kahan sum accumulator
  accurate sum 53687091.25368708 sum 53687091.25368708 diff          0 relative diff          0 runtime 3.540169   OpenMP sum with double double kahan sum accumulator with bit truncation

Scanning dependencies of target distclean
Built target distclean
/usr/bin/modulecmd bash $*
MANPATH=/usr/share/man:/usr/local/share/man ;export MANPATH;PATH=/home/brobey/bin:/home/brobey/parsplice-install/bin:/home/brobey/bin:/home/brobey/parsplice-install/bin:/home/brobey/spack/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin ;export PATH;unset CC;unset CLANGROOT;unset CLANGVER;unset CPP;unset CXX;unset LD_LIBRARY_PATH;unset LLVMROOT;unset LOADEDMODULES;unset PYTHONPATH;unset _LMFILES_;
/usr/bin/modulecmd bash $*
/usr/bin/modulecmd bash $*
CC=gcc ;export CC;CPP=cpp ;export CPP;CXX=g++ ;export CXX;F77=gfortran ;export F77;F90=gfortran ;export F90;FC=gfortran ;export FC;LD_LIBRARY_PATH=/projects/opt/centos7/gcc/9.1.0/lib64:/projects/opt/centos7/gcc/9.1.0/lib ;export LD_LIBRARY_PATH;LOADEDMODULES=cmake/3.12.4:gcc/9.1.0 ;export LOADEDMODULES;MANPATH=/projects/opt/centos7/gcc/9.1.0/share/man:/usr/share/man:/usr/local/share/man ;export MANPATH;PATH=/projects/opt/centos7/gcc/9.1.0/bin:/projects/opt/centos7/cmake/3.12.4/bin:/home/brobey/bin:/home/brobey/parsplice-install/bin:/home/brobey/bin:/home/brobey/parsplice-install/bin:/home/brobey/spack/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin ;export PATH;_LMFILES_=/projects/darwin/modulefiles/centos7/cmake/3.12.4:/projects/darwin/modulefiles/centos7/gcc/9.1.0 ;export _LMFILES_;
-- The C compiler identification is GNU 9.1.0
-- The CXX compiler identification is GNU 9.1.0
-- Check for working C compiler: /projects/opt/centos7/gcc/9.1.0/bin/gcc
-- Check for working C compiler: /projects/opt/centos7/gcc/9.1.0/bin/gcc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /projects/opt/centos7/gcc/9.1.0/bin/g++
-- Check for working CXX compiler: /projects/opt/centos7/gcc/9.1.0/bin/g++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Found OpenMP_C: -fopenmp (found version "4.5") 
-- Found OpenMP_CXX: -fopenmp (found version "4.5") 
-- Found OpenMP: TRUE (found version "4.5")  
-- Trying Fog Vector Class -- works
-- Trying X86_64 intrinsics -- works
-- Detecting AVX512 hardware -- found
-- Trying GCC Vector Extensions -- works
-- Trying Quad math library -- works
-- Configuring done
-- Generating done
-- Build files have been written to: /home/brobey/GlobalSums
Scanning dependencies of target globalsums
[  3%] Building C object CMakeFiles/globalsums.dir/globalsums.c.o
/home/brobey/GlobalSums/globalsums.c:542:10: optimized: loop vectorized using 64 byte vectors
/home/brobey/GlobalSums/globalsums.c:542:10: optimized: loop vectorized using 64 byte vectors
/home/brobey/GlobalSums/globalsums.c:540:9: optimized: loop with 6 iterations completely unrolled (header execution count 52095590)
/home/brobey/GlobalSums/globalsums.c:540:9: optimized: loop with 6 iterations completely unrolled (header execution count 52095590)
/home/brobey/GlobalSums/globalsums.c:100:7: missed: statement clobbers memory: printf ("--- num openmp threads in parallel region: %d\n", _2);
/home/brobey/GlobalSums/globalsums.c:104:3: missed: couldn't vectorize loop
/home/brobey/GlobalSums/globalsums.c:104:3: missed: not vectorized: loop nest containing two or more consecutive inner loops cannot be vectorized
/home/brobey/GlobalSums/globalsums.c:488:7: missed: couldn't vectorize loop
/home/brobey/GlobalSums/globalsums.c:489:21: missed: not vectorized: no vectype for stmt: *_705 = 1.0000000000000000000000000000000000445733797301757921829e-10;
 scalar_type: _Float128
/home/brobey/GlobalSums/globalsums.c:488:7: missed: couldn't vectorize loop
/home/brobey/GlobalSums/globalsums.c:489:21: missed: not vectorized: no vectype for stmt: *_96 = 1.0000000000000000000000000000000000481482486096808963264e-1;
 scalar_type: _Float128
/home/brobey/GlobalSums/globalsums.c:137:7: optimized: loop vectorized using 64 byte vectors
/home/brobey/GlobalSums/globalsums.c:137:7: optimized: loop vectorized using 64 byte vectors
/home/brobey/GlobalSums/globalsums.c:137:7: optimized: loop with 6 iterations completely unrolled (header execution count 46365075)
/home/brobey/GlobalSums/globalsums.c:137:7: optimized: loop with 6 iterations completely unrolled (header execution count 46365075)
/home/brobey/GlobalSums/globalsums.c:89:9: missed: statement clobbers memory: nt_118 = omp_get_max_threads ();
/home/brobey/GlobalSums/globalsums.c:90:10: missed: statement clobbers memory: tid_120 = omp_get_thread_num ();
/home/brobey/GlobalSums/globalsums.c:92:9: missed: statement clobbers memory: printf ("--- max num openmp threads: %d\n", nt_118);
/home/brobey/GlobalSums/globalsums.c:82:5: missed: statement clobbers memory: __builtin_GOMP_parallel (main._omp_fn.0, &.omp_data_o.12, 0, 0);
/home/brobey/GlobalSums/globalsums.c:82:5: missed: statement clobbers memory: __builtin_GOMP_parallel (main._omp_fn.0, &.omp_data_o.12, 0, 0);
/home/brobey/GlobalSums/globalsums.c:82:5: missed: statement clobbers memory: __builtin_GOMP_parallel (main._omp_fn.0, &.omp_data_o.12, 0, 0);
/home/brobey/GlobalSums/globalsums.c:105:27: missed: statement clobbers memory: _2 = pow (2.0e+0, _1);
/home/brobey/GlobalSums/globalsums.c:108:37: missed: statement clobbers memory: _4 = log (_3);
/home/brobey/GlobalSums/globalsums.c:109:37: missed: statement clobbers memory: _8 = log (_3);
/home/brobey/GlobalSums/globalsums.c:110:40: missed: statement clobbers memory: _11 = log (_3);
/home/brobey/GlobalSums/globalsums.c:113:36: missed: statement clobbers memory: _15 = log (_3);
/home/brobey/GlobalSums/globalsums.c:114:36: missed: statement clobbers memory: _19 = log (_3);
/home/brobey/GlobalSums/globalsums.c:116:109: missed: statement clobbers memory: _22 = log2 (_3);
/home/brobey/GlobalSums/globalsums.c:116:7: missed: statement clobbers memory: printf ("SETTINGS INFO -- ncells %ld log %d ndigits %d ndigitsld %d nbits %d nbitsld %d\n", ncells_127, _23, ndigits_136, ndigitsld_138, nbits_130, nbitsld_132);
/home/brobey/GlobalSums/globalsums.c:133:34: missed: statement clobbers memory: energy_145 = malloc (_34);
/home/brobey/GlobalSums/globalsums.c:136:7: missed: statement clobbers memory: __builtin_puts (&"Initializing mesh with Leblanc problem, high values first"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:156:18: missed: statement clobbers memory: test_sum_148 = do_sum_novec (energy_145, ncells_127);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:160:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", accurate_sum_141, test_sum_148, _38, _39, result_652);
/home/brobey/GlobalSums/globalsums.c:162:7: missed: statement clobbers memory: __builtin_puts (&"   Serial sum"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:168:18: missed: statement clobbers memory: test_sum_154 = do_sum (energy_145, ncells_127);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:171:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", accurate_sum_141, test_sum_154, _40, _41, result_642);
/home/brobey/GlobalSums/globalsums.c:173:7: missed: statement clobbers memory: __builtin_puts (&"   Serial sum (OpenMP SIMD pragma)"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:179:18: missed: statement clobbers memory: test_sum_160 = do_sum_wdigittrunc (energy_145, ncells_127, ndigits_136);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:617:17: missed: statement clobbers memory: _607 = log10 (accurate_sum_141);
/home/brobey/GlobalSums/globalsums.c:620:21: missed: statement clobbers memory: mult_612 = pow (1.0e+1, _611);
/home/brobey/GlobalSums/globalsums.c:623:20: missed: statement clobbers memory: div_618 = pow (1.0e+1, _617);
/home/brobey/GlobalSums/globalsums.c:183:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", _622, test_sum_160, _42, _43, result_632);
/home/brobey/GlobalSums/globalsums.c:185:7: missed: statement clobbers memory: __builtin_puts (&"   Serial sum with digit truncation"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:191:18: missed: statement clobbers memory: test_sum_168 = do_sum_wbittrunc (energy_145, ncells_127, nbits_130);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:630:23: missed: not vectorized: more than one data ref in stmt: bitmask = *.LC0;
/home/brobey/GlobalSums/globalsums.c:196:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", var_360, test_sum_168, _44, _45, result_606);
/home/brobey/GlobalSums/globalsums.c:198:7: missed: statement clobbers memory: __builtin_puts (&"   Serial sum with bit truncation"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:204:20: missed: statement clobbers memory: test_ldsum_175 = do_ldsum (energy_145, ncells_127);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:207:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", _51, _50, _49, _48, result_596);
/home/brobey/GlobalSums/globalsums.c:209:7: missed: statement clobbers memory: __builtin_puts (&"   Serial sum with long double accumulator"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:215:20: missed: statement clobbers memory: test_ldsum_181 = do_ldsum_wdigittrunc (energy_145, ncells_127, ndigitsld_138);
/home/brobey/GlobalSums/globalsums.c:617:17: missed: statement clobbers memory: _571 = log10 (_51);
/home/brobey/GlobalSums/globalsums.c:620:21: missed: statement clobbers memory: mult_576 = pow (1.0e+1, _575);
/home/brobey/GlobalSums/globalsums.c:623:20: missed: statement clobbers memory: div_582 = pow (1.0e+1, _581);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:220:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", _586, _57, _56, _55, result_570);
/home/brobey/GlobalSums/globalsums.c:222:7: missed: statement clobbers memory: __builtin_puts (&"   Serial sum with long double accumulator with ndigit truncation"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:228:20: missed: statement clobbers memory: test_ldsum_189 = do_ldsum_wbittrunc (energy_145, ncells_127, nbitsld_132);
/home/brobey/GlobalSums/globalsums.c:630:23: missed: not vectorized: more than one data ref in stmt: bitmask = *.LC0;
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:233:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", var_354, _62, _61, _60, result_560);
/home/brobey/GlobalSums/globalsums.c:235:7: missed: statement clobbers memory: __builtin_puts (&"   Serial sum with long double accumulator with bit truncation"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:241:18: missed: statement clobbers memory: test_sum_197 = do_kahan_sum (energy_145, ncells_127);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:244:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", accurate_sum_141, test_sum_197, _63, _64, result_550);
/home/brobey/GlobalSums/globalsums.c:246:7: missed: statement clobbers memory: __builtin_puts (&"   Serial sum with double double kahan sum accumulator"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:253:18: missed: statement clobbers memory: test_sum_203 = do_kahan_sum_v (energy_145, ncells_127);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:256:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", accurate_sum_141, test_sum_203, _65, _66, result_540);
/home/brobey/GlobalSums/globalsums.c:258:7: missed: statement clobbers memory: __builtin_puts (&"   Intel Vectorized sum with double double kahan sum accumulator"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:266:18: missed: statement clobbers memory: test_sum_209 = do_kahan_sum_gcc_v (energy_145, ncells_127);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:269:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", accurate_sum_141, test_sum_209, _67, _68, result_530);
/home/brobey/GlobalSums/globalsums.c:271:7: missed: statement clobbers memory: __builtin_puts (&"   GCC Extensions Vectorized sum with double double kahan sum accumulator"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:279:18: missed: statement clobbers memory: test_sum_215 = do_kahan_sum_agner_v (energy_145, ncells_127);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:283:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", accurate_sum_141, test_sum_215, _69, _70, result_520);
/home/brobey/GlobalSums/globalsums.c:285:7: missed: statement clobbers memory: __builtin_puts (&"   Agner C++ vector class sum with double double kahan sum accumulator"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:309:18: missed: statement clobbers memory: test_sum_221 = do_kahan_sum_gcc_v8 (energy_145, ncells_127);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:313:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", accurate_sum_141, test_sum_221, _71, _72, result_510);
/home/brobey/GlobalSums/globalsums.c:315:7: missed: statement clobbers memory: __builtin_puts (&"   8 wide GCC vector extensions Kahan sum"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:323:18: missed: statement clobbers memory: test_sum_227 = do_kahan_sum_agner_v8 (energy_145, ncells_127);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:327:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", accurate_sum_141, test_sum_227, _73, _74, result_500);
/home/brobey/GlobalSums/globalsums.c:329:7: missed: statement clobbers memory: __builtin_puts (&"   8 wide Fog C++ vector class Kahan sum"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:336:18: missed: statement clobbers memory: test_sum_233 = do_knuth_sum (energy_145, ncells_127);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:339:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", accurate_sum_141, test_sum_233, _75, _76, result_490);
/home/brobey/GlobalSums/globalsums.c:341:7: missed: statement clobbers memory: __builtin_puts (&"   Serial sum with double double knuth sum accumulator"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:348:18: missed: statement clobbers memory: test_sum_239 = do_knuth_sum_v (energy_145, ncells_127);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:351:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", accurate_sum_141, test_sum_239, _77, _78, result_480);
/home/brobey/GlobalSums/globalsums.c:353:7: missed: statement clobbers memory: __builtin_puts (&"   Intel Vectorized sum with double double knuth sum accumulator"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:361:18: missed: statement clobbers memory: test_sum_245 = do_knuth_sum_gcc_v (energy_145, ncells_127);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:364:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", accurate_sum_141, test_sum_245, _79, _80, result_470);
/home/brobey/GlobalSums/globalsums.c:366:7: missed: statement clobbers memory: __builtin_puts (&"   GCC Extensions Vectorized sum with double double knuth sum accumulator"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:374:18: missed: statement clobbers memory: test_sum_251 = do_knuth_sum_agner_v (energy_145, ncells_127);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:377:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", accurate_sum_141, test_sum_251, _81, _82, result_460);
/home/brobey/GlobalSums/globalsums.c:379:7: missed: statement clobbers memory: __builtin_puts (&"   Agner C++ vector class sum with double double knuth sum accumulator"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:388:18: missed: statement clobbers memory: test_sum_257 = do_knuth_sum_intel_v8 (energy_145, ncells_127);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:392:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", accurate_sum_141, test_sum_257, _83, _84, result_450);
/home/brobey/GlobalSums/globalsums.c:394:7: missed: statement clobbers memory: __builtin_puts (&"   8 wide Intel Vector intrinsics Knuth sum"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:403:18: missed: statement clobbers memory: test_sum_263 = do_knuth_sum_gcc_v8 (energy_145, ncells_127);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:407:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", accurate_sum_141, test_sum_263, _85, _86, result_440);
/home/brobey/GlobalSums/globalsums.c:409:7: missed: statement clobbers memory: __builtin_puts (&"   8 wide GCC vector extensions Knuth sum"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:417:18: missed: statement clobbers memory: test_sum_269 = do_knuth_sum_agner_v8 (energy_145, ncells_127);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:421:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", accurate_sum_141, test_sum_269, _87, _88, result_430);
/home/brobey/GlobalSums/globalsums.c:423:7: missed: statement clobbers memory: __builtin_puts (&"   8 wide Fog C++ vector class Knuth sum"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:430:18: missed: statement clobbers memory: test_sum_275 = do_pair_sum (energy_145, ncells_127);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:433:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", accurate_sum_141, test_sum_275, _89, _90, result_420);
/home/brobey/GlobalSums/globalsums.c:435:7: missed: statement clobbers memory: __builtin_puts (&"   Pair-wise sum"[0]);
/home/brobey/GlobalSums/globalsums.c:439:7: missed: statement clobbers memory: __builtin_putchar (10);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:446:20: missed: statement clobbers memory: test_qdsum_282 = do_qdsum (energy_145, ncells_127);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:450:7: missed: statement clobbers memory: quadmath_snprintf (&quadstring1, 24, "%-25.24Qg", accurate_qdsum_143);
/home/brobey/GlobalSums/globalsums.c:451:7: missed: statement clobbers memory: quadmath_snprintf (&quadstring2, 24, "%-25.24Qg", test_qdsum_282);
/home/brobey/GlobalSums/globalsums.c:452:7: missed: statement clobbers memory: quadmath_snprintf (&quadstring3, 24, "%-20.14Qg", _91);
/home/brobey/GlobalSums/globalsums.c:453:7: missed: statement clobbers memory: quadmath_snprintf (&quadstring4, 24, "%-20.14Qg", _92);
/home/brobey/GlobalSums/globalsums.c:454:7: missed: statement clobbers memory: printf ("  accurate sum %-24s sum %-24s diff %-20s relative diff %-20s runtime %lf", &quadstring1, &quadstring2, &quadstring3, &quadstring4, result_410);
/home/brobey/GlobalSums/globalsums.c:456:7: missed: statement clobbers memory: __builtin_puts (&"   Serial sum with quad double accumulator"[0]);
/home/brobey/GlobalSums/globalsums.c:483:7: missed: statement clobbers memory: free (energy_145);
/home/brobey/GlobalSums/globalsums.c:486:43: missed: statement clobbers memory: energyq_293 = malloc (_93);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:496:20: missed: statement clobbers memory: test_qdsum_295 = do_full_qdsum (energyq_293, ncells_127);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:500:7: missed: statement clobbers memory: quadmath_snprintf (&quadstring1, 24, "%-25.24Qg", accurate_qdsum_143);
/home/brobey/GlobalSums/globalsums.c:501:7: missed: statement clobbers memory: quadmath_snprintf (&quadstring2, 24, "%-25.24Qg", test_qdsum_295);
/home/brobey/GlobalSums/globalsums.c:502:7: missed: statement clobbers memory: quadmath_snprintf (&quadstring3, 24, "%-20.14Qg", _97);
/home/brobey/GlobalSums/globalsums.c:503:7: missed: statement clobbers memory: quadmath_snprintf (&quadstring4, 24, "%-20.14Qg", _98);
/home/brobey/GlobalSums/globalsums.c:504:7: missed: statement clobbers memory: printf ("  accurate sum %-24s sum %-24s diff %-20s relative diff %-20s runtime %lf", &quadstring1, &quadstring2, &quadstring3, &quadstring4, result_702);
/home/brobey/GlobalSums/globalsums.c:506:7: missed: statement clobbers memory: __builtin_puts (&"   Serial sum with quad double accumulator and quad terms"[0]);
/home/brobey/GlobalSums/globalsums.c:532:7: missed: statement clobbers memory: free (energyq_293);
/home/brobey/GlobalSums/globalsums.c:535:7: missed: statement clobbers memory: __builtin_putchar (10);
/home/brobey/GlobalSums/globalsums.c:537:26: missed: statement clobbers memory: energy_307 = malloc (_34);
/home/brobey/GlobalSums/globalsums.c:82:5: missed: statement clobbers memory: __builtin_GOMP_parallel (main._omp_fn.1, &.omp_data_o.14, 0, 0);
/home/brobey/GlobalSums/globalsums.c:82:5: missed: statement clobbers memory: __builtin_GOMP_parallel (main._omp_fn.1, &.omp_data_o.14, 0, 0);
/home/brobey/GlobalSums/globalsums.c:82:5: missed: statement clobbers memory: __builtin_GOMP_parallel (main._omp_fn.1, &.omp_data_o.14, 0, 0);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:549:18: missed: statement clobbers memory: test_sum_316 = do_sum_omp (energy_307, ncells_127);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:552:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", accurate_sum_141, test_sum_316, _99, _100, result_692);
/home/brobey/GlobalSums/globalsums.c:554:7: missed: statement clobbers memory: __builtin_puts (&"   OpenMP sum"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:560:18: missed: statement clobbers memory: test_sum_322 = do_sum_omp_wbittrunc (energy_307, ncells_127, nbitsomp_134);
/home/brobey/GlobalSums/globalsums.c:630:23: missed: not vectorized: more than one data ref in stmt: bitmask = *.LC0;
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:566:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", var_367, test_sum_322, _101, _102, result_682);
/home/brobey/GlobalSums/globalsums.c:568:7: missed: statement clobbers memory: __builtin_puts (&"   OpenMP sum with bit truncation"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:574:18: missed: statement clobbers memory: test_sum_329 = do_kahan_sum_omp (energy_307, ncells_127);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:577:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", accurate_sum_141, test_sum_329, _103, _104, result_672);
/home/brobey/GlobalSums/globalsums.c:579:7: missed: statement clobbers memory: __builtin_puts (&"   OpenMP sum with double double kahan sum accumulator"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:585:18: missed: statement clobbers memory: test_sum_335 = do_kahan_sum_omp_wbittrunc (energy_307, ncells_127, 2);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:590:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", var_362, test_sum_335, _105, _106, result_662);
/home/brobey/GlobalSums/globalsums.c:592:7: missed: statement clobbers memory: __builtin_puts (&"   OpenMP sum with double double kahan sum accumulator with bit truncation"[0]);
/home/brobey/GlobalSums/globalsums.c:595:7: missed: statement clobbers memory: free (energy_307);
/home/brobey/GlobalSums/globalsums.c:597:7: missed: statement clobbers memory: __builtin_putchar (10);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, tstart_cpu_2(D));
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:617:17: missed: statement clobbers memory: _1 = log10 (var_13(D));
/home/brobey/GlobalSums/globalsums.c:620:21: missed: statement clobbers memory: mult_22 = pow (1.0e+1, _3);
/home/brobey/GlobalSums/globalsums.c:623:20: missed: statement clobbers memory: div_19 = pow (1.0e+1, _7);
/home/brobey/GlobalSums/globalsums.c:630:23: missed: not vectorized: more than one data ref in stmt: bitmask = *.LC0;
[  6%] Building C object CMakeFiles/globalsums.dir/do_kahan_sum.c.o
/home/brobey/GlobalSums/do_kahan_sum.c:10:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_kahan_sum.c:13:59: missed: not vectorized: unsupported use in stmt.
[  9%] Building C object CMakeFiles/globalsums.dir/serial_sum_novec.c.o
[ 12%] Building C object CMakeFiles/globalsums.dir/do_kahan_sum_omp.c.o
/home/brobey/GlobalSums/do_kahan_sum_omp.c:10:31: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_kahan_sum_omp.c:10:9: missed: not vectorized: number of iterations cannot be computed.
/home/brobey/GlobalSums/do_kahan_sum_omp.c:19:10: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_kahan_sum_omp.c:21:62: missed: not vectorized: unsupported use in stmt.
/home/brobey/GlobalSums/do_kahan_sum_omp.c:10:9: missed: statement clobbers memory: _46 = __sync_val_compare_and_swap_8 (_39, _4, _44);
/home/brobey/GlobalSums/do_kahan_sum_omp.c:10:9: missed: statement clobbers memory: __builtin_GOMP_barrier ();
/home/brobey/GlobalSums/do_kahan_sum_omp.c:26:9: missed: statement clobbers memory: __builtin_GOMP_barrier ();
/home/brobey/GlobalSums/do_kahan_sum_omp.c:10:9: missed: statement clobbers memory: _41 = __atomic_load_8 (_39, 0);
/home/brobey/GlobalSums/do_kahan_sum_omp.c:10:9: missed: statement clobbers memory: _46 = __sync_val_compare_and_swap_8 (_39, _4, _44);
/home/brobey/GlobalSums/do_kahan_sum_omp.c:1:8: missed: statement clobbers memory: __builtin_GOMP_parallel (do_kahan_sum_omp._omp_fn.0, &.omp_data_o.3, 0, 0);
[ 15%] Building C object CMakeFiles/globalsums.dir/do_kahan_sum_omp_wbittrunc.c.o
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:23:10: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:25:62: missed: not vectorized: unsupported use in stmt.
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:14:9: missed: statement clobbers memory: __builtin_GOMP_barrier ();
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:37:9: missed: statement clobbers memory: __builtin_GOMP_barrier ();
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:14:9: missed: statement clobbers memory: __builtin_GOMP_atomic_start ();
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:14:9: missed: statement clobbers memory: __builtin_GOMP_atomic_end ();
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:14:9: missed: statement clobbers memory: __builtin_GOMP_atomic_end ();
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:14:9: missed: statement clobbers memory: __builtin_GOMP_atomic_end ();
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:14:9: optimized: basic block part vectorized using 16 byte vectors
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:4:8: missed: statement clobbers memory: __builtin_GOMP_parallel (do_kahan_sum_omp_wbittrunc._omp_fn.0, &.omp_data_o.3, 0, 0);
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:4:8: missed: statement clobbers memory: __builtin_GOMP_parallel (do_kahan_sum_omp_wbittrunc._omp_fn.0, &.omp_data_o.3, 0, 0);
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:4:8: missed: statement clobbers memory: __builtin_GOMP_parallel (do_kahan_sum_omp_wbittrunc._omp_fn.0, &.omp_data_o.3, 0, 0);
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:14:9: optimized: basic block part vectorized using 16 byte vectors
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:46:10: missed: statement clobbers memory: sum_13 = bittruncate (sum_9, nbits_11(D));
[ 18%] Building C object CMakeFiles/globalsums.dir/do_knuth_sum.c.o
/home/brobey/GlobalSums/do_knuth_sum.c:13:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_knuth_sum.c:15:9: missed: not vectorized: unsupported use in stmt.
[ 21%] Building C object CMakeFiles/globalsums.dir/do_ldsum.c.o
/home/brobey/GlobalSums/do_ldsum.c:5:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_ldsum.c:1:13: missed: not vectorized: unsupported data-type long double
[ 25%] Building C object CMakeFiles/globalsums.dir/do_ldsum_wbittrunc.c.o
/home/brobey/GlobalSums/do_ldsum_wbittrunc.c:8:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_ldsum_wbittrunc.c:4:13: missed: not vectorized: unsupported data-type long double
/home/brobey/GlobalSums/do_ldsum_wbittrunc.c:12:12: missed: statement clobbers memory: _7 = bittruncate (prephitmp_37, nbits_13(D));
[ 28%] Building C object CMakeFiles/globalsums.dir/do_ldsum_wdigittrunc.c.o
/home/brobey/GlobalSums/do_ldsum_wdigittrunc.c:7:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_ldsum_wdigittrunc.c:3:13: missed: not vectorized: unsupported data-type long double
/home/brobey/GlobalSums/do_ldsum_wdigittrunc.c:11:12: missed: statement clobbers memory: _7 = digitround (prephitmp_37, ndigits_13(D));
[ 31%] Building C object CMakeFiles/globalsums.dir/do_pair_sum.c.o
/home/brobey/GlobalSums/do_pair_sum.c:14:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_pair_sum.c:14:4: missed: not vectorized: control flow in loop.
/home/brobey/GlobalSums/do_pair_sum.c:16:7: optimized: loop vectorized using 64 byte vectors
/home/brobey/GlobalSums/do_pair_sum.c:16:7: optimized:  loop versioned for vectorization because of possible aliasing
/home/brobey/GlobalSums/do_pair_sum.c:10:4: optimized: loop vectorized using 64 byte vectors
/home/brobey/GlobalSums/do_pair_sum.c:16:7: optimized: loop with 6 iterations completely unrolled (header execution count 36569637)
/home/brobey/GlobalSums/do_pair_sum.c:10:4: optimized: loop with 6 iterations completely unrolled (header execution count 5730515)
/home/brobey/GlobalSums/do_pair_sum.c:7:30: missed: statement clobbers memory: pwsum_37 = malloc (_3);
/home/brobey/GlobalSums/do_pair_sum.c:14:23: missed: statement clobbers memory: _26 = log2 (_86);
/home/brobey/GlobalSums/do_pair_sum.c:22:4: missed: statement clobbers memory: free (pwsum_37);
[ 34%] Building C object CMakeFiles/globalsums.dir/do_sum.c.o
/home/brobey/GlobalSums/do_sum.c:5:9: optimized: Loop 1 distributed: split to 0 loops and 1 library calls.
/home/brobey/GlobalSums/do_sum.c:5:9: optimized: loop vectorized using 64 byte vectors
/home/brobey/GlobalSums/do_sum.c:7:7: optimized: loop vectorized using 64 byte vectors
/home/brobey/GlobalSums/do_sum.c:1:8: optimized: loop with 6 iterations completely unrolled (header execution count 46365075)
/home/brobey/GlobalSums/do_sum.c:1:8: optimized: loop with 7 iterations completely unrolled (header execution count 29336874)
/home/brobey/GlobalSums/do_sum.c:1:8: optimized: loop with 6 iterations completely unrolled (header execution count 41163973)
/home/brobey/GlobalSums/do_sum.c:1:8: missed: statement clobbers memory: __builtin_memset (&D.4091, 0, _32);
[ 37%] Building C object CMakeFiles/globalsums.dir/do_sum_omp.c.o
/home/brobey/GlobalSums/do_sum_omp.c:5:35: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_sum_omp.c:5:9: missed: not vectorized: number of iterations cannot be computed.
/home/brobey/GlobalSums/do_sum_omp.c:7:7: optimized: loop vectorized using 64 byte vectors
/home/brobey/GlobalSums/do_sum_omp.c:5:9: missed: statement clobbers memory: _35 = __sync_val_compare_and_swap_8 (_28, _6, _33);
/home/brobey/GlobalSums/do_sum_omp.c:5:9: optimized: loop with 6 iterations completely unrolled (header execution count 52095590)
/home/brobey/GlobalSums/do_sum_omp.c:5:9: missed: statement clobbers memory: _30 = __atomic_load_8 (_28, 0);
/home/brobey/GlobalSums/do_sum_omp.c:5:9: missed: statement clobbers memory: _35 = __sync_val_compare_and_swap_8 (_28, _6, _33);
/home/brobey/GlobalSums/do_sum_omp.c:1:8: missed: statement clobbers memory: __builtin_GOMP_parallel (do_sum_omp._omp_fn.0, &.omp_data_o.3, 0, 0);
[ 40%] Building C object CMakeFiles/globalsums.dir/do_sum_omp_wbittrunc.c.o
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:8:35: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:8:9: missed: not vectorized: number of iterations cannot be computed.
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:10:7: optimized: loop vectorized using 64 byte vectors
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:8:9: missed: statement clobbers memory: _35 = __sync_val_compare_and_swap_8 (_28, _6, _33);
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:8:9: optimized: loop with 6 iterations completely unrolled (header execution count 52095590)
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:8:9: missed: statement clobbers memory: _30 = __atomic_load_8 (_28, 0);
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:8:9: missed: statement clobbers memory: _35 = __sync_val_compare_and_swap_8 (_28, _6, _33);
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:4:8: missed: statement clobbers memory: __builtin_GOMP_parallel (do_sum_omp_wbittrunc._omp_fn.0, &.omp_data_o.3, 0, 0);
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:13:10: missed: statement clobbers memory: sum_12 = bittruncate (sum_8, nbits_10(D));
[ 43%] Building C object CMakeFiles/globalsums.dir/do_sum_wbittrunc.c.o
/home/brobey/GlobalSums/do_sum_wbittrunc.c:8:4: optimized: loop vectorized using 64 byte vectors
/home/brobey/GlobalSums/do_sum_wbittrunc.c:8:4: optimized: loop with 6 iterations completely unrolled (header execution count 46365075)
/home/brobey/GlobalSums/do_sum_wbittrunc.c:12:10: missed: statement clobbers memory: sum_12 = bittruncate (sum_18, nbits_10(D));
[ 46%] Building C object CMakeFiles/globalsums.dir/do_sum_wdigittrunc.c.o
/home/brobey/GlobalSums/do_sum_wdigittrunc.c:7:4: optimized: loop vectorized using 64 byte vectors
/home/brobey/GlobalSums/do_sum_wdigittrunc.c:7:4: optimized: loop with 6 iterations completely unrolled (header execution count 46365075)
/home/brobey/GlobalSums/do_sum_wdigittrunc.c:11:10: missed: statement clobbers memory: sum_12 = digitround (sum_18, ndigits_10(D));
[ 50%] Building CXX object CMakeFiles/globalsums.dir/kahan_fog_vector.cpp.o
/home/brobey/GlobalSums/kahan_fog_vector.cpp:34:23: missed: couldn't vectorize loop
/home/brobey/GlobalSums/kahan_fog_vector.cpp:37:63: missed: not vectorized: unsupported use in stmt.
/home/brobey/GlobalSums/kahan_fog_vector.cpp:15:23: missed: couldn't vectorize loop
/projects/opt/centos7/gcc/9.1.0/lib/gcc/x86_64-pc-linux-gnu/9.1.0/include/avxintrin.h:885:24: missed: not vectorized: no vectype for stmt: _31 = MEM[(__m256d_u * {ref-all})_3];
 scalar_type: __m256d_u
/home/brobey/GlobalSums/kahan_fog_vector.cpp:34:23: optimized: loop with 3 iterations completely unrolled (header execution count 118111601)
[ 53%] Building CXX object CMakeFiles/globalsums.dir/kahan_fog_vector8.cpp.o
/home/brobey/GlobalSums/kahan_fog_vector8.cpp:34:23: missed: couldn't vectorize loop
/home/brobey/GlobalSums/kahan_fog_vector8.cpp:37:63: missed: not vectorized: unsupported use in stmt.
/home/brobey/GlobalSums/kahan_fog_vector8.cpp:14:23: missed: couldn't vectorize loop
/projects/opt/centos7/gcc/9.1.0/lib/gcc/x86_64-pc-linux-gnu/9.1.0/include/avx512fintrin.h:6198:24: missed: not vectorized: no vectype for stmt: _35 = MEM[(__m512d_u * {ref-all})_3];
 scalar_type: __m512d_u
/home/brobey/GlobalSums/kahan_fog_vector8.cpp:34:23: optimized: loop with 7 iterations completely unrolled (header execution count 118111604)
[ 56%] Building CXX object CMakeFiles/globalsums.dir/knuth_fog_vector.cpp.o
/home/brobey/GlobalSums/knuth_fog_vector.cpp:34:23: missed: couldn't vectorize loop
/projects/opt/centos7/gcc/9.1.0/lib/gcc/x86_64-pc-linux-gnu/9.1.0/include/avxintrin.h:891:21: missed: not vectorized: no vectype for stmt: MEM[(__m256d_u * {ref-all})&x] = prephitmp_74;
 scalar_type: __m256d_u
/home/brobey/GlobalSums/knuth_fog_vector.cpp:15:23: missed: couldn't vectorize loop
/projects/opt/centos7/gcc/9.1.0/lib/gcc/x86_64-pc-linux-gnu/9.1.0/include/avxintrin.h:885:24: missed: not vectorized: no vectype for stmt: _36 = MEM[(__m256d_u * {ref-all})_3];
 scalar_type: __m256d_u
/home/brobey/GlobalSums/knuth_fog_vector.cpp:34:23: optimized: loop with 3 iterations completely unrolled (header execution count 118111601)
[ 59%] Building CXX object CMakeFiles/globalsums.dir/knuth_fog_vector8.cpp.o
/home/brobey/GlobalSums/knuth_fog_vector8.cpp:34:23: missed: couldn't vectorize loop
/projects/opt/centos7/gcc/9.1.0/lib/gcc/x86_64-pc-linux-gnu/9.1.0/include/avx512fintrin.h:6224:21: missed: not vectorized: no vectype for stmt: MEM[(__m512d_u * {ref-all})&a] = _41;
 scalar_type: __m512d_u
/home/brobey/GlobalSums/knuth_fog_vector8.cpp:15:23: missed: couldn't vectorize loop
/projects/opt/centos7/gcc/9.1.0/lib/gcc/x86_64-pc-linux-gnu/9.1.0/include/avx512fintrin.h:6198:24: missed: not vectorized: no vectype for stmt: _40 = MEM[(__m512d_u * {ref-all})_3];
 scalar_type: __m512d_u
/home/brobey/GlobalSums/knuth_fog_vector8.cpp:34:23: optimized: loop with 7 iterations completely unrolled (header execution count 118111604)
[ 62%] Building C object CMakeFiles/globalsums.dir/kahan_intel_vector.c.o
/home/brobey/GlobalSums/kahan_intel_vector.c:37:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/kahan_intel_vector.c:40:63: missed: not vectorized: unsupported use in stmt.
/home/brobey/GlobalSums/kahan_intel_vector.c:18:4: missed: couldn't vectorize loop
/projects/opt/centos7/gcc/9.1.0/lib/gcc/x86_64-pc-linux-gnu/9.1.0/include/avxintrin.h:861:10: missed: not vectorized: no vectype for stmt: _34 = MEM[(__m256d * {ref-all})_3];
 scalar_type: __m256d
/home/brobey/GlobalSums/kahan_intel_vector.c:37:4: optimized: loop with 3 iterations completely unrolled (header execution count 118111601)
/projects/opt/centos7/gcc/9.1.0/lib/gcc/x86_64-pc-linux-gnu/9.1.0/include/avxintrin.h:728:20: missed: statement clobbers memory: _33 = __builtin_ia32_vbroadcastsd256 (&zero);
/projects/opt/centos7/gcc/9.1.0/lib/gcc/x86_64-pc-linux-gnu/9.1.0/include/avxintrin.h:728:20: missed: statement clobbers memory: _28 = __builtin_ia32_vbroadcastsd256 (&zero);
[ 65%] Building C object CMakeFiles/globalsums.dir/kahan_intel_vector8.c.o
/home/brobey/GlobalSums/kahan_intel_vector8.c:37:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/kahan_intel_vector8.c:40:63: missed: not vectorized: unsupported use in stmt.
/home/brobey/GlobalSums/kahan_intel_vector8.c:18:4: missed: couldn't vectorize loop
/projects/opt/centos7/gcc/9.1.0/lib/gcc/x86_64-pc-linux-gnu/9.1.0/include/avx512fintrin.h:386:10: missed: not vectorized: no vectype for stmt: _15 = MEM[(__m512d * {ref-all})_3];
 scalar_type: __m512d
/home/brobey/GlobalSums/kahan_intel_vector8.c:37:4: optimized: loop with 7 iterations completely unrolled (header execution count 118111604)
[ 68%] Building C object CMakeFiles/globalsums.dir/knuth_intel_vector.c.o
/home/brobey/GlobalSums/knuth_intel_vector.c:35:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/knuth_intel_vector.c:38:12: missed: not vectorized: unsupported use in stmt.
/home/brobey/GlobalSums/knuth_intel_vector.c:17:4: missed: couldn't vectorize loop
/projects/opt/centos7/gcc/9.1.0/lib/gcc/x86_64-pc-linux-gnu/9.1.0/include/avxintrin.h:861:10: missed: not vectorized: no vectype for stmt: _40 = MEM[(__m256d * {ref-all})_3];
 scalar_type: __m256d
/home/brobey/GlobalSums/knuth_intel_vector.c:35:4: optimized: loop with 3 iterations completely unrolled (header execution count 118111601)
/projects/opt/centos7/gcc/9.1.0/lib/gcc/x86_64-pc-linux-gnu/9.1.0/include/avxintrin.h:728:20: missed: statement clobbers memory: _39 = __builtin_ia32_vbroadcastsd256 (&zero);
/projects/opt/centos7/gcc/9.1.0/lib/gcc/x86_64-pc-linux-gnu/9.1.0/include/avxintrin.h:728:20: missed: statement clobbers memory: _32 = __builtin_ia32_vbroadcastsd256 (&zero);
[ 71%] Building C object CMakeFiles/globalsums.dir/knuth_intel_vector8.c.o
/home/brobey/GlobalSums/knuth_intel_vector8.c:36:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/knuth_intel_vector8.c:39:12: missed: not vectorized: unsupported use in stmt.
/home/brobey/GlobalSums/knuth_intel_vector8.c:18:4: missed: couldn't vectorize loop
/projects/opt/centos7/gcc/9.1.0/lib/gcc/x86_64-pc-linux-gnu/9.1.0/include/avx512fintrin.h:386:10: missed: not vectorized: no vectype for stmt: _18 = MEM[(__m512d * {ref-all})_3];
 scalar_type: __m512d
/home/brobey/GlobalSums/knuth_intel_vector8.c:36:4: optimized: loop with 7 iterations completely unrolled (header execution count 118111604)
[ 75%] Building C object CMakeFiles/globalsums.dir/kahan_gcc_vector.c.o
/home/brobey/GlobalSums/kahan_gcc_vector.c:30:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/kahan_gcc_vector.c:33:63: missed: not vectorized: unsupported use in stmt.
/home/brobey/GlobalSums/kahan_gcc_vector.c:11:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/kahan_gcc_vector.c:12:14: missed: not vectorized: no vectype for stmt: var_v_28 = MEM[(vec4d *)_3];
 scalar_type: vec4d
/home/brobey/GlobalSums/kahan_gcc_vector.c:30:4: optimized: loop with 3 iterations completely unrolled (header execution count 118111601)
[ 78%] Building C object CMakeFiles/globalsums.dir/kahan_gcc_vector8.c.o
/home/brobey/GlobalSums/kahan_gcc_vector8.c:29:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/kahan_gcc_vector8.c:32:63: missed: not vectorized: unsupported use in stmt.
/home/brobey/GlobalSums/kahan_gcc_vector8.c:10:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/kahan_gcc_vector8.c:11:14: missed: not vectorized: no vectype for stmt: var_v_28 = MEM[(vec8d *)_3];
 scalar_type: vec8d
/home/brobey/GlobalSums/kahan_gcc_vector8.c:29:4: optimized: loop with 7 iterations completely unrolled (header execution count 118111604)
[ 81%] Building C object CMakeFiles/globalsums.dir/knuth_gcc_vector.c.o
/home/brobey/GlobalSums/knuth_gcc_vector.c:30:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/knuth_gcc_vector.c:33:12: missed: not vectorized: unsupported use in stmt.
/home/brobey/GlobalSums/knuth_gcc_vector.c:11:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/knuth_gcc_vector.c:12:13: missed: not vectorized: no vectype for stmt: var_v_28 = MEM[(vec4d *)_3];
 scalar_type: vec4d
/home/brobey/GlobalSums/knuth_gcc_vector.c:30:4: optimized: loop with 3 iterations completely unrolled (header execution count 118111601)
[ 84%] Building C object CMakeFiles/globalsums.dir/knuth_gcc_vector8.c.o
/home/brobey/GlobalSums/knuth_gcc_vector8.c:30:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/knuth_gcc_vector8.c:33:12: missed: not vectorized: unsupported use in stmt.
/home/brobey/GlobalSums/knuth_gcc_vector8.c:11:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/knuth_gcc_vector8.c:12:13: missed: not vectorized: no vectype for stmt: var_v_28 = MEM[(vec8d *)_3];
 scalar_type: vec8d
/home/brobey/GlobalSums/knuth_gcc_vector8.c:30:4: optimized: loop with 7 iterations completely unrolled (header execution count 118111604)
[ 87%] Building C object CMakeFiles/globalsums.dir/do_full_qdsum.c.o
/home/brobey/GlobalSums/do_full_qdsum.c:7:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_full_qdsum.c:8:32: missed: not vectorized: no vectype for stmt: _4 = *_3;
 scalar_type: _Float128
[ 90%] Building C object CMakeFiles/globalsums.dir/do_full_qdsum_wtrunc.c.o
/home/brobey/GlobalSums/do_full_qdsum_wtrunc.c:8:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_full_qdsum_wtrunc.c:9:32: missed: not vectorized: no vectype for stmt: _4 = *_3;
 scalar_type: _Float128
/home/brobey/GlobalSums/do_full_qdsum_wtrunc.c:12:17: missed: statement clobbers memory: _6 = log10 (prephitmp_43);
/home/brobey/GlobalSums/do_full_qdsum_wtrunc.c:13:22: missed: statement clobbers memory: _9 = pow (1.0e+1, _8);
[ 93%] Building C object CMakeFiles/globalsums.dir/do_qdsum.c.o
/home/brobey/GlobalSums/do_qdsum.c:7:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_qdsum.c:3:12: missed: not vectorized: unsupported data-type _Float128
[ 96%] Building C object CMakeFiles/globalsums.dir/do_qdsum_wtrunc.c.o
/home/brobey/GlobalSums/do_qdsum_wtrunc.c:8:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_qdsum_wtrunc.c:4:12: missed: not vectorized: unsupported data-type _Float128
/home/brobey/GlobalSums/do_qdsum_wtrunc.c:12:17: missed: statement clobbers memory: _7 = log10 (prephitmp_47);
/home/brobey/GlobalSums/do_qdsum_wtrunc.c:13:22: missed: statement clobbers memory: _10 = pow (1.0e+1, _9);
[100%] Linking CXX executable globalsums
[100%] Built target globalsums
--- max num openmp threads: 88
--- num openmp threads in parallel region: 88
SETTINGS INFO -- ncells 16 log 4 ndigits 3 ndigitsld 0 nbits 8 nbitsld 2
Initializing mesh with Leblanc problem, high values first
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Serial sum
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000002   Serial sum (OpenMP SIMD pragma)
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000006   Serial sum with digit truncation
  accurate sum 0.8000000007999972 sum 0.8000000007999972 diff          0 relative diff          0 runtime 0.000000   Serial sum with bit truncation
  accurate sum 0.8000000008      sum 0.8000000008      diff -1.626e-19 relative diff -2.033e-19 runtime 0.000000   Serial sum with long double accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000002   Serial sum with long double accumulator with ndigit truncation
  accurate sum 0.8000000007999999 sum 0.8000000007999999 diff          0 relative diff          0 runtime 0.000000   Serial sum with long double accumulator with bit truncation
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double kahan sum accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 0.8000000008      sum 0.8000000007999999 diff  -1.11e-16 relative diff -1.388e-16 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 0.8000000008      sum 0.8000000007999999 diff  -1.11e-16 relative diff -1.388e-16 runtime 0.000000   8 wide Fog C++ vector class Kahan sum
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double knuth sum accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   8 wide GCC vector extensions Knuth sum
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   8 wide Fog C++ vector class Knuth sum
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000002   Pair-wise sum

  accurate sum 0.8000000008             sum 0.800000000800000044408  diff 4.4408921014152e-17  relative diff 5.5511151212179e-17  runtime 0.000004   Serial sum with quad double accumulator
  accurate sum 0.8000000008             sum 0.8000000008             diff -2.8888949165809e-34 relative diff -3.6111186421149e-34 runtime 0.000001   Serial sum with quad double accumulator and quad terms

  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.025997   OpenMP sum
  accurate sum 0.8000000007999972 sum 0.8000000007999972 diff          0 relative diff          0 runtime 0.025990   OpenMP sum with bit truncation
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.050999   OpenMP sum with double double kahan sum accumulator
  accurate sum 0.8000000007999999 sum 0.8000000007999999 diff          0 relative diff          0 runtime 0.054994   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 32 log 5 ndigits 4 ndigitsld 1 nbits 9 nbitsld 3
Initializing mesh with Leblanc problem, high values first
  accurate sum 1.6000000016      sum 1.6000000016      diff  4.441e-16 relative diff  2.776e-16 runtime 0.000000   Serial sum
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000001   Serial sum with digit truncation
  accurate sum 1.600000001599938 sum 1.600000001599938 diff          0 relative diff          0 runtime 0.000000   Serial sum with bit truncation
  accurate sum 1.6000000016      sum 1.6000000016      diff  5.421e-19 relative diff  3.388e-19 runtime 0.000000   Serial sum with long double accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000001   Serial sum with long double accumulator with ndigit truncation
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Serial sum with long double accumulator with bit truncation
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double kahan sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff  -2.22e-16 relative diff -1.388e-16 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 1.6000000016      sum 1.6000000016      diff  -2.22e-16 relative diff -1.388e-16 runtime 0.000000   8 wide Fog C++ vector class Kahan sum
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double knuth sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   8 wide GCC vector extensions Knuth sum
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   8 wide Fog C++ vector class Knuth sum
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Pair-wise sum

  accurate sum 1.6000000016             sum 1.600000001600000088817  diff 8.8817842028304e-17  relative diff 5.5511151212179e-17  runtime 0.000001   Serial sum with quad double accumulator
  accurate sum 1.6000000016             sum 1.6000000016             diff 1.3481509610711e-33  relative diff 8.4259434982682e-34  runtime 0.000001   Serial sum with quad double accumulator and quad terms

  accurate sum 1.6000000016      sum 1.600000001600001 diff  6.661e-16 relative diff  4.163e-16 runtime 0.025996   OpenMP sum
  accurate sum 1.600000001599994 sum 1.600000001599994 diff          0 relative diff          0 runtime 0.029003   OpenMP sum with bit truncation
  accurate sum 1.6000000016      sum 1.600000001600001 diff  6.661e-16 relative diff  4.163e-16 runtime 0.048989   OpenMP sum with double double kahan sum accumulator
  accurate sum 1.6000000016      sum 1.600000001600001 diff  8.882e-16 relative diff  5.551e-16 runtime 0.041998   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 64 log 6 ndigits 4 ndigitsld 1 nbits 9 nbitsld 3
Initializing mesh with Leblanc problem, high values first
  accurate sum 3.2000000032      sum 3.200000003200002 diff  1.776e-15 relative diff  5.551e-16 runtime 0.000000   Serial sum
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Serial sum with digit truncation
  accurate sum 3.200000003199875 sum 3.200000003199875 diff          0 relative diff          0 runtime 0.000000   Serial sum with bit truncation
  accurate sum 3.2000000032      sum 3.2000000032      diff  1.084e-18 relative diff  3.388e-19 runtime 0.000000   Serial sum with long double accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Serial sum with long double accumulator with ndigit truncation
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Serial sum with long double accumulator with bit truncation
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double kahan sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff -4.441e-16 relative diff -1.388e-16 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 3.2000000032      sum 3.2000000032      diff -4.441e-16 relative diff -1.388e-16 runtime 0.000000   8 wide Fog C++ vector class Kahan sum
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000001   Serial sum with double double knuth sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   8 wide GCC vector extensions Knuth sum
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   8 wide Fog C++ vector class Knuth sum
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Pair-wise sum

  accurate sum 3.2000000032             sum 3.200000003200000177635  diff 1.7763568405661e-16  relative diff 5.5511151212179e-17  runtime 0.000003   Serial sum with quad double accumulator
  accurate sum 3.2000000032             sum 3.2000000032             diff 3.466673899897e-33   relative diff 1.0833355926345e-33  runtime 0.000002   Serial sum with quad double accumulator and quad terms

  accurate sum 3.2000000032      sum 3.200000003200002 diff  1.776e-15 relative diff  5.551e-16 runtime 0.000041   OpenMP sum
  accurate sum 3.200000003199989 sum 3.200000003199989 diff          0 relative diff          0 runtime 0.000059   OpenMP sum with bit truncation
  accurate sum 3.2000000032      sum 3.200000003200002 diff  1.776e-15 relative diff  5.551e-16 runtime 0.000064   OpenMP sum with double double kahan sum accumulator
  accurate sum 3.2000000032      sum 3.200000003200001 diff  1.776e-15 relative diff  5.551e-16 runtime 0.000210   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 128 log 7 ndigits 4 ndigitsld 1 nbits 11 nbitsld 4
Initializing mesh with Leblanc problem, high values first
  accurate sum 6.4000000064      sum 6.400000006399994 diff -6.217e-15 relative diff -9.714e-16 runtime 0.000000   Serial sum
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   Serial sum with digit truncation
  accurate sum 6.400000006398841 sum 6.400000006398841 diff          0 relative diff          0 runtime 0.000000   Serial sum with bit truncation
  accurate sum 6.4000000064      sum 6.4000000064      diff  2.168e-18 relative diff  3.388e-19 runtime 0.000000   Serial sum with long double accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000001   Serial sum with long double accumulator with ndigit truncation
  accurate sum 6.400000006399992 sum 6.400000006399992 diff          0 relative diff          0 runtime 0.000000   Serial sum with long double accumulator with bit truncation
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000001   Serial sum with double double kahan sum accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 6.4000000064      sum 6.400000006399999 diff -8.882e-16 relative diff -1.388e-16 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 6.4000000064      sum 6.400000006399999 diff -8.882e-16 relative diff -1.388e-16 runtime 0.000000   8 wide Fog C++ vector class Kahan sum
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000001   Serial sum with double double knuth sum accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   8 wide GCC vector extensions Knuth sum
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   8 wide Fog C++ vector class Knuth sum
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   Pair-wise sum

  accurate sum 6.4000000064             sum 6.400000006400000355271  diff 3.5527136811322e-16  relative diff 5.5511151212179e-17  runtime 0.000005   Serial sum with quad double accumulator
  accurate sum 6.4000000064             sum 6.4000000064             diff -2.6192647243666e-32 relative diff -4.0926011277303e-33 runtime 0.000004   Serial sum with quad double accumulator and quad terms

  accurate sum 6.4000000064      sum 6.400000006400004 diff  4.441e-15 relative diff  6.939e-16 runtime 0.000058   OpenMP sum
  accurate sum 6.400000006399978 sum 6.400000006399978 diff          0 relative diff          0 runtime 0.000058   OpenMP sum with bit truncation
  accurate sum 6.4000000064      sum 6.400000006400004 diff  4.441e-15 relative diff  6.939e-16 runtime 0.000067   OpenMP sum with double double kahan sum accumulator
  accurate sum 6.400000006399999 sum 6.400000006400003 diff  3.553e-15 relative diff  5.551e-16 runtime 0.000207   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 256 log 8 ndigits 4 ndigitsld 1 nbits 12 nbitsld 4
Initializing mesh with Leblanc problem, high values first
  accurate sum 12.8000000128     sum 12.80000001279997 diff -2.842e-14 relative diff  -2.22e-15 runtime 0.000001   Serial sum
  accurate sum 12.8000000128     sum 12.8000000128     diff  1.776e-15 relative diff  1.388e-16 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000001   Serial sum with digit truncation
  accurate sum 12.80000001279404 sum 12.80000001279404 diff          0 relative diff          0 runtime 0.000001   Serial sum with bit truncation
  accurate sum 12.8000000128     sum 12.8000000128     diff -5.117e-17 relative diff -3.998e-18 runtime 0.000000   Serial sum with long double accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000001   Serial sum with long double accumulator with ndigit truncation
  accurate sum 12.80000001279998 sum 12.80000001279998 diff          0 relative diff          0 runtime 0.000000   Serial sum with long double accumulator with bit truncation
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000001   Serial sum with double double kahan sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000000   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000000   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff -1.776e-15 relative diff -1.388e-16 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 12.8000000128     sum 12.8000000128     diff -1.776e-15 relative diff -1.388e-16 runtime 0.000000   8 wide Fog C++ vector class Kahan sum
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000003   Serial sum with double double knuth sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000001   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000001   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000001   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000000   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000000   8 wide GCC vector extensions Knuth sum
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000000   8 wide Fog C++ vector class Knuth sum
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000001   Pair-wise sum

  accurate sum 12.8000000128            sum 12.80000001280000071054  diff 7.1054273622643e-16  relative diff 5.5511151212179e-17  runtime 0.000009   Serial sum with quad double accumulator
  accurate sum 12.8000000128            sum 12.8000000128            diff -6.6251990086921e-32 relative diff -5.1759367203648e-33 runtime 0.000007   Serial sum with quad double accumulator and quad terms

  accurate sum 12.8000000128     sum 12.80000001280001 diff  1.066e-14 relative diff  8.327e-16 runtime 0.000039   OpenMP sum
  accurate sum 12.8000000127995  sum 12.8000000127995  diff          0 relative diff          0 runtime 0.000035   OpenMP sum with bit truncation
  accurate sum 12.8000000128     sum 12.80000001280001 diff  1.066e-14 relative diff  8.327e-16 runtime 0.000060   OpenMP sum with double double kahan sum accumulator
  accurate sum 12.8000000128     sum 12.80000001280001 diff  7.105e-15 relative diff  5.551e-16 runtime 0.000221   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 512 log 9 ndigits 4 ndigitsld 1 nbits 13 nbitsld 5
Initializing mesh with Leblanc problem, high values first
  accurate sum 25.6000000256     sum 25.60000002559964 diff -3.588e-13 relative diff -1.402e-14 runtime 0.000001   Serial sum
  accurate sum 25.6000000256     sum 25.60000002560002 diff  1.776e-14 relative diff  6.939e-16 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000001   Serial sum with digit truncation
  accurate sum 25.60000002558809 sum 25.60000002558809 diff          0 relative diff          0 runtime 0.000001   Serial sum with bit truncation
  accurate sum 25.6000000256     sum 25.6000000256     diff -1.023e-16 relative diff -3.998e-18 runtime 0.000001   Serial sum with long double accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000001   Serial sum with long double accumulator with ndigit truncation
  accurate sum 25.60000002559991 sum 25.60000002559991 diff          0 relative diff          0 runtime 0.000001   Serial sum with long double accumulator with bit truncation
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000003   Serial sum with double double kahan sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000001   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000001   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000001   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff -3.553e-15 relative diff -1.388e-16 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 25.6000000256     sum 25.6000000256     diff -3.553e-15 relative diff -1.388e-16 runtime 0.000000   8 wide Fog C++ vector class Kahan sum
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000005   Serial sum with double double knuth sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000001   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000001   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000001   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000001   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000001   8 wide GCC vector extensions Knuth sum
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000001   8 wide Fog C++ vector class Knuth sum
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000004   Pair-wise sum

  accurate sum 25.6000000256            sum 25.60000002560000142108  diff 1.4210854724529e-15  relative diff 5.5511151212179e-17  runtime 0.000018   Serial sum with quad double accumulator
  accurate sum 25.6000000256            sum 25.6000000256            diff 3.9443045261051e-31  relative diff 1.540743953969e-32   runtime 0.000015   Serial sum with quad double accumulator and quad terms

  accurate sum 25.6000000256     sum 25.60000002560001 diff  1.066e-14 relative diff  4.163e-16 runtime 0.000043   OpenMP sum
  accurate sum 25.600000025599   sum 25.600000025599   diff          0 relative diff          0 runtime 0.000038   OpenMP sum with bit truncation
  accurate sum 25.6000000256     sum 25.60000002560001 diff  1.066e-14 relative diff  4.163e-16 runtime 0.000062   OpenMP sum with double double kahan sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000182   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 1024 log 10 ndigits 5 ndigitsld 2 nbits 14 nbitsld 6
Initializing mesh with Leblanc problem, high values first
  accurate sum 51.2000000512     sum 51.20000005120137 diff  1.371e-12 relative diff  2.678e-14 runtime 0.000002   Serial sum
  accurate sum 51.2000000512     sum 51.20000005119994 diff -5.684e-14 relative diff  -1.11e-15 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 51.200000051      sum 51.200000051      diff          0 relative diff          0 runtime 0.000002   Serial sum with digit truncation
  accurate sum 51.20000005117618 sum 51.20000005117618 diff          0 relative diff          0 runtime 0.000002   Serial sum with bit truncation
  accurate sum 51.2000000512     sum 51.20000005120001 diff  6.835e-16 relative diff  1.335e-17 runtime 0.000001   Serial sum with long double accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000002   Serial sum with long double accumulator with ndigit truncation
  accurate sum 51.20000005119982 sum 51.20000005119982 diff          0 relative diff          0 runtime 0.000001   Serial sum with long double accumulator with bit truncation
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000005   Serial sum with double double kahan sum accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000001   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000001   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000001   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 51.2000000512     sum 51.20000005119999 diff -7.105e-15 relative diff -1.388e-16 runtime 0.000001   8 wide GCC vector extensions Kahan sum
  accurate sum 51.2000000512     sum 51.20000005119999 diff -7.105e-15 relative diff -1.388e-16 runtime 0.000001   8 wide Fog C++ vector class Kahan sum
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000010   Serial sum with double double knuth sum accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000003   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000003   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000003   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000001   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000001   8 wide GCC vector extensions Knuth sum
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000001   8 wide Fog C++ vector class Knuth sum
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000005   Pair-wise sum

  accurate sum 51.2000000512            sum 51.20000005120000284217  diff 2.8421709449057e-15  relative diff 5.5511151212179e-17  runtime 0.000036   Serial sum with quad double accumulator
  accurate sum 51.2000000512            sum 51.2000000512            diff 1.0230539864585e-30  relative diff 1.9981523153036e-32  runtime 0.000029   Serial sum with quad double accumulator and quad terms

  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000047   OpenMP sum
  accurate sum 51.20000005119073 sum 51.20000005119073 diff          0 relative diff          0 runtime 0.000054   OpenMP sum with bit truncation
  accurate sum 51.2000000512     sum 51.20000005120001 diff  7.105e-15 relative diff  1.388e-16 runtime 0.000065   OpenMP sum with double double kahan sum accumulator
  accurate sum 51.20000005119999 sum 51.20000005119999 diff          0 relative diff          0 runtime 0.000167   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 2048 log 11 ndigits 5 ndigitsld 2 nbits 15 nbitsld 6
Initializing mesh with Leblanc problem, high values first
  accurate sum 102.4000001024    sum 102.4000001024003 diff  2.842e-13 relative diff  2.776e-15 runtime 0.000003   Serial sum
  accurate sum 102.4000001024    sum 102.4000001023998 diff -2.274e-13 relative diff  -2.22e-15 runtime 0.000001   Serial sum (OpenMP SIMD pragma)
  accurate sum 102.4000001       sum 102.4000001       diff          0 relative diff          0 runtime 0.000004   Serial sum with digit truncation
  accurate sum 102.4000001023524 sum 102.4000001023524 diff          0 relative diff          0 runtime 0.000004   Serial sum with bit truncation
  accurate sum 102.4000001024    sum 102.4000001024    diff  1.367e-15 relative diff  1.335e-17 runtime 0.000003   Serial sum with long double accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000003   Serial sum with long double accumulator with ndigit truncation
  accurate sum 102.4000001023996 sum 102.4000001023996 diff          0 relative diff          0 runtime 0.000003   Serial sum with long double accumulator with bit truncation
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000010   Serial sum with double double kahan sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000003   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000003   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000003   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff -1.421e-14 relative diff -1.388e-16 runtime 0.000001   8 wide GCC vector extensions Kahan sum
  accurate sum 102.4000001024    sum 102.4000001024    diff -1.421e-14 relative diff -1.388e-16 runtime 0.000001   8 wide Fog C++ vector class Kahan sum
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000021   Serial sum with double double knuth sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000005   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000005   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000005   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000003   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000003   8 wide GCC vector extensions Knuth sum
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000003   8 wide Fog C++ vector class Knuth sum
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000008   Pair-wise sum

  accurate sum 102.4000001024           sum 102.4000001024000056843  diff 5.6843418898115e-15  relative diff 5.5511151212179e-17  runtime 0.000073   Serial sum with quad double accumulator
  accurate sum 102.4000001024           sum 102.4000001024           diff -8.6281661508548e-32 relative diff -8.4259434982682e-34 runtime 0.000058   Serial sum with quad double accumulator and quad terms

  accurate sum 102.4000001024    sum 102.4000001024    diff -4.263e-14 relative diff -4.163e-16 runtime 0.000042   OpenMP sum
  accurate sum 102.4000001023524 sum 102.4000001023524 diff          0 relative diff          0 runtime 0.000040   OpenMP sum with bit truncation
  accurate sum 102.4000001024    sum 102.4000001024    diff -4.263e-14 relative diff -4.163e-16 runtime 0.000059   OpenMP sum with double double kahan sum accumulator
  accurate sum 102.4000001024    sum 102.4000001023999 diff -5.684e-14 relative diff -5.551e-16 runtime 0.000154   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 4096 log 12 ndigits 5 ndigitsld 2 nbits 15 nbitsld 7
Initializing mesh with Leblanc problem, high values first
  accurate sum 204.8000002048    sum 204.8000002047672 diff  -3.28e-11 relative diff -1.601e-13 runtime 0.000007   Serial sum
  accurate sum 204.8000002048    sum 204.8000002047971 diff -2.927e-12 relative diff -1.429e-14 runtime 0.000001   Serial sum (OpenMP SIMD pragma)
  accurate sum 204.8000002       sum 204.8000002       diff          0 relative diff          0 runtime 0.000007   Serial sum with digit truncation
  accurate sum 204.8000002047047 sum 204.8000002047047 diff          0 relative diff          0 runtime 0.000007   Serial sum with bit truncation
  accurate sum 204.8000002048    sum 204.8000002048    diff -1.148e-14 relative diff -5.604e-17 runtime 0.000005   Serial sum with long double accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000006   Serial sum with long double accumulator with ndigit truncation
  accurate sum 204.8000002047993 sum 204.8000002047993 diff          0 relative diff          0 runtime 0.000005   Serial sum with long double accumulator with bit truncation
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000021   Serial sum with double double kahan sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000005   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000005   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000005   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff -2.842e-14 relative diff -1.388e-16 runtime 0.000003   8 wide GCC vector extensions Kahan sum
  accurate sum 204.8000002048    sum 204.8000002048    diff -2.842e-14 relative diff -1.388e-16 runtime 0.000003   8 wide Fog C++ vector class Kahan sum
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000041   Serial sum with double double knuth sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000010   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000010   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000010   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000005   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000005   8 wide GCC vector extensions Knuth sum
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000005   8 wide Fog C++ vector class Knuth sum
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000028   Pair-wise sum

  accurate sum 204.8000002048           sum 204.8000002048000113686  diff 1.1368683779623e-14  relative diff 5.5511151212179e-17  runtime 0.000146   Serial sum with quad double accumulator
  accurate sum 204.8000002048           sum 204.8000002048           diff -2.9113897783313e-29 relative diff -1.4215770387793e-31 runtime 0.000115   Serial sum with quad double accumulator and quad terms

  accurate sum 204.8000002048    sum 204.8000002047998 diff  -1.99e-13 relative diff -9.714e-16 runtime 0.000040   OpenMP sum
  accurate sum 204.8000002047047 sum 204.8000002047047 diff          0 relative diff          0 runtime 0.000041   OpenMP sum with bit truncation
  accurate sum 204.8000002048    sum 204.8000002047998 diff -2.274e-13 relative diff  -1.11e-15 runtime 0.000058   OpenMP sum with double double kahan sum accumulator
  accurate sum 204.8000002048    sum 204.8000002047997 diff -2.274e-13 relative diff  -1.11e-15 runtime 0.000154   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 8192 log 13 ndigits 5 ndigitsld 2 nbits 17 nbitsld 7
Initializing mesh with Leblanc problem, high values first
  accurate sum 409.6000004096    sum 409.6000004095737 diff -2.626e-11 relative diff -6.412e-14 runtime 0.000014   Serial sum
  accurate sum 409.6000004096    sum 409.6000004096109 diff  1.091e-11 relative diff  2.665e-14 runtime 0.000002   Serial sum (OpenMP SIMD pragma)
  accurate sum 409.60000041      sum 409.60000041      diff          0 relative diff          0 runtime 0.000014   Serial sum with digit truncation
  accurate sum 409.6000004038215 sum 409.6000004038215 diff          0 relative diff          0 runtime 0.000014   Serial sum with bit truncation
  accurate sum 409.6000004096    sum 409.6000004096001 diff  3.389e-14 relative diff  8.274e-17 runtime 0.000010   Serial sum with long double accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000011   Serial sum with long double accumulator with ndigit truncation
  accurate sum 409.6000004095986 sum 409.6000004095986 diff          0 relative diff          0 runtime 0.000011   Serial sum with long double accumulator with bit truncation
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000041   Serial sum with double double kahan sum accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000010   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000010   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000010   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 409.6000004096    sum 409.6000004095999 diff -5.684e-14 relative diff -1.388e-16 runtime 0.000005   8 wide GCC vector extensions Kahan sum
  accurate sum 409.6000004096    sum 409.6000004095999 diff -5.684e-14 relative diff -1.388e-16 runtime 0.000005   8 wide Fog C++ vector class Kahan sum
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000082   Serial sum with double double knuth sum accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000021   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000021   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000021   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000010   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000010   8 wide GCC vector extensions Knuth sum
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000010   8 wide Fog C++ vector class Knuth sum
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000029   Pair-wise sum

  accurate sum 409.6000004096           sum 409.6000004096000227373  diff 2.2737367559246e-14  relative diff 5.5511151212179e-17  runtime 0.000291   Serial sum with quad double accumulator
  accurate sum 409.6000004096           sum 409.6000004096           diff 7.6864634452472e-29  relative diff 1.8765779876857e-31  runtime 0.000233   Serial sum with quad double accumulator and quad terms

  accurate sum 409.6000004096    sum 409.600000409599  diff -9.663e-13 relative diff -2.359e-15 runtime 0.000066   OpenMP sum
  accurate sum 409.6000004094094 sum 409.6000004094094 diff          0 relative diff          0 runtime 0.000253   OpenMP sum with bit truncation
  accurate sum 409.6000004096    sum 409.6000004096001 diff  5.684e-14 relative diff  1.388e-16 runtime 0.000059   OpenMP sum with double double kahan sum accumulator
  accurate sum 409.6000004095999 sum 409.6000004095999 diff          0 relative diff          0 runtime 0.000161   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 16384 log 14 ndigits 5 ndigitsld 2 nbits 18 nbitsld 8
Initializing mesh with Leblanc problem, high values first
  accurate sum 819.2000008192    sum 819.2000008196816 diff  4.816e-10 relative diff  5.879e-13 runtime 0.000027   Serial sum
  accurate sum 819.2000008192    sum 819.2000008192024 diff  2.387e-12 relative diff  2.914e-15 runtime 0.000004   Serial sum (OpenMP SIMD pragma)
  accurate sum 819.20000082      sum 819.20000082      diff          0 relative diff          0 runtime 0.000028   Serial sum with digit truncation
  accurate sum 819.2000007927418 sum 819.2000007927418 diff          0 relative diff          0 runtime 0.000028   Serial sum with bit truncation
  accurate sum 819.2000008192    sum 819.2000008192    diff -1.749e-14 relative diff -2.135e-17 runtime 0.000021   Serial sum with long double accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000021   Serial sum with long double accumulator with ndigit truncation
  accurate sum 819.2000008191972 sum 819.2000008191972 diff          0 relative diff          0 runtime 0.000021   Serial sum with long double accumulator with bit truncation
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000082   Serial sum with double double kahan sum accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000021   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000021   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000021   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 819.2000008192    sum 819.2000008191999 diff -1.137e-13 relative diff -1.388e-16 runtime 0.000011   8 wide GCC vector extensions Kahan sum
  accurate sum 819.2000008192    sum 819.2000008191999 diff -1.137e-13 relative diff -1.388e-16 runtime 0.000011   8 wide Fog C++ vector class Kahan sum
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000164   Serial sum with double double knuth sum accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000056   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000041   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000041   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000021   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000021   8 wide GCC vector extensions Knuth sum
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000021   8 wide Fog C++ vector class Knuth sum
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000044   Pair-wise sum

  accurate sum 819.2000008192           sum 819.2000008192000454747  diff 4.5474735118492e-14  relative diff 5.5511151212179e-17  runtime 0.000582   Serial sum with quad double accumulator
  accurate sum 819.2000008192           sum 819.2000008192           diff -1.9080573145033e-28 relative diff -2.3291715241641e-31 runtime 0.000478   Serial sum with quad double accumulator and quad terms

  accurate sum 819.2000008192    sum 819.2000008191998 diff -2.274e-13 relative diff -2.776e-16 runtime 0.000055   OpenMP sum
  accurate sum 819.2000008188188 sum 819.2000008188188 diff          0 relative diff          0 runtime 0.000038   OpenMP sum with bit truncation
  accurate sum 819.2000008192    sum 819.2000008192005 diff  4.547e-13 relative diff  5.551e-16 runtime 0.000060   OpenMP sum with double double kahan sum accumulator
  accurate sum 819.2000008191999 sum 819.2000008192003 diff  4.547e-13 relative diff  5.551e-16 runtime 0.000161   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 32768 log 15 ndigits 6 ndigitsld 3 nbits 19 nbitsld 9
Initializing mesh with Leblanc problem, high values first
  accurate sum 1638.4000016384   sum 1638.400001638733 diff  3.331e-10 relative diff  2.033e-13 runtime 0.000055   Serial sum
  accurate sum 1638.4000016384   sum 1638.400001638138 diff -2.624e-10 relative diff -1.601e-13 runtime 0.000007   Serial sum (OpenMP SIMD pragma)
  accurate sum 1638.400002       sum 1638.400002       diff          0 relative diff          0 runtime 0.000056   Serial sum with digit truncation
  accurate sum 1638.400001525879 sum 1638.400001525879 diff          0 relative diff          0 runtime 0.000055   Serial sum with bit truncation
  accurate sum 1638.4000016384   sum 1638.4000016384   diff -1.771e-13 relative diff -1.081e-16 runtime 0.000041   Serial sum with long double accumulator
  accurate sum 1638.400001638    sum 1638.400001638    diff          0 relative diff          0 runtime 0.000058   Serial sum with long double accumulator with ndigit truncation
  accurate sum 1638.400001638336 sum 1638.400001638336 diff          0 relative diff          0 runtime 0.000042   Serial sum with long double accumulator with bit truncation
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000164   Serial sum with double double kahan sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000041   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000041   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000042   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff -2.274e-13 relative diff -1.388e-16 runtime 0.000021   8 wide GCC vector extensions Kahan sum
  accurate sum 1638.4000016384   sum 1638.4000016384   diff -2.274e-13 relative diff -1.388e-16 runtime 0.000021   8 wide Fog C++ vector class Kahan sum
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000328   Serial sum with double double knuth sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000082   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000082   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000091   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000041   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000041   8 wide GCC vector extensions Knuth sum
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000041   8 wide Fog C++ vector class Knuth sum
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000121   Pair-wise sum

  accurate sum 1638.4000016384          sum 1638.400001638400090949  diff 9.0949470236983e-14  relative diff 5.5511151212179e-17  runtime 0.001114   Serial sum with quad double accumulator
  accurate sum 1638.4000016384          sum 1638.4000016384          diff 6.8749227890011e-28  relative diff 4.1961198621376e-31  runtime 0.000806   Serial sum with quad double accumulator and quad terms

  accurate sum 1638.4000016384   sum 1638.40000163841  diff      1e-11 relative diff  6.106e-15 runtime 0.000037   OpenMP sum
  accurate sum 1638.400001630187 sum 1638.400001630187 diff          0 relative diff          0 runtime 0.000040   OpenMP sum with bit truncation
  accurate sum 1638.4000016384   sum 1638.400001638399 diff -9.095e-13 relative diff -5.551e-16 runtime 0.000061   OpenMP sum with double double kahan sum accumulator
  accurate sum 1638.4000016384   sum 1638.400001638399 diff -9.095e-13 relative diff -5.551e-16 runtime 0.000154   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 65536 log 16 ndigits 6 ndigitsld 3 nbits 20 nbitsld 9
Initializing mesh with Leblanc problem, high values first
  accurate sum 3276.8000032768   sum 3276.800003276371 diff -4.293e-10 relative diff  -1.31e-13 runtime 0.000111   Serial sum
  accurate sum 3276.8000032768   sum 3276.800003276589 diff -2.105e-10 relative diff -6.425e-14 runtime 0.000014   Serial sum (OpenMP SIMD pragma)
  accurate sum 3276.800003       sum 3276.800003       diff          0 relative diff          0 runtime 0.000111   Serial sum with digit truncation
  accurate sum 3276.800003051758 sum 3276.800003051758 diff          0 relative diff          0 runtime 0.000110   Serial sum with bit truncation
  accurate sum 3276.8000032768   sum 3276.800003276801 diff   8.68e-13 relative diff  2.649e-16 runtime 0.000082   Serial sum with long double accumulator
  accurate sum 3276.800003277    sum 3276.800003277    diff          0 relative diff          0 runtime 0.000083   Serial sum with long double accumulator with ndigit truncation
  accurate sum 3276.800003276672 sum 3276.800003276672 diff          0 relative diff          0 runtime 0.000083   Serial sum with long double accumulator with bit truncation
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000338   Serial sum with double double kahan sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000083   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000082   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000082   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff -4.547e-13 relative diff -1.388e-16 runtime 0.000041   8 wide GCC vector extensions Kahan sum
  accurate sum 3276.8000032768   sum 3276.8000032768   diff -4.547e-13 relative diff -1.388e-16 runtime 0.000041   8 wide Fog C++ vector class Kahan sum
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000670   Serial sum with double double knuth sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000164   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000164   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000164   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000082   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000082   8 wide GCC vector extensions Knuth sum
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000082   8 wide Fog C++ vector class Knuth sum
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000184   Pair-wise sum

  accurate sum 3276.8000032768          sum 3276.800003276800181898  diff 1.8189894047397e-13  relative diff 5.5511151212179e-17  runtime 0.002125   Serial sum with quad double accumulator
  accurate sum 3276.8000032768          sum 3276.8000032768          diff -6.037546938109e-27  relative diff -1.8425131018285e-30 runtime 0.001637   Serial sum with quad double accumulator and quad terms

  accurate sum 3276.8000032768   sum 3276.800003276798 diff -2.274e-12 relative diff -6.939e-16 runtime 0.000065   OpenMP sum
  accurate sum 3276.800003260374 sum 3276.800003260374 diff          0 relative diff          0 runtime 0.000037   OpenMP sum with bit truncation
  accurate sum 3276.8000032768   sum 3276.800003276798 diff -2.274e-12 relative diff -6.939e-16 runtime 0.000068   OpenMP sum with double double kahan sum accumulator
  accurate sum 3276.8000032768   sum 3276.800003276796 diff -3.638e-12 relative diff  -1.11e-15 runtime 0.000193   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 131072 log 17 ndigits 6 ndigitsld 3 nbits 21 nbitsld 10
Initializing mesh with Leblanc problem, high values first
  accurate sum 6553.6000065536   sum 6553.600006562821 diff  9.221e-09 relative diff  1.407e-12 runtime 0.000221   Serial sum
  accurate sum 6553.6000065536   sum 6553.600006557454 diff  3.854e-09 relative diff   5.88e-13 runtime 0.000032   Serial sum (OpenMP SIMD pragma)
  accurate sum 6553.600007       sum 6553.600007       diff          0 relative diff          0 runtime 0.000221   Serial sum with digit truncation
  accurate sum 6553.600006103516 sum 6553.600006103516 diff          0 relative diff          0 runtime 0.000234   Serial sum with bit truncation
  accurate sum 6553.6000065536   sum 6553.600006553605 diff  3.868e-12 relative diff  5.901e-16 runtime 0.000164   Serial sum with long double accumulator
  accurate sum 6553.600006554    sum 6553.600006554    diff          0 relative diff          0 runtime 0.000165   Serial sum with long double accumulator with ndigit truncation
  accurate sum 6553.600006553344 sum 6553.600006553344 diff          0 relative diff          0 runtime 0.000166   Serial sum with long double accumulator with bit truncation
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000612   Serial sum with double double kahan sum accumulator
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000148   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000142   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000141   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 6553.6000065536   sum 6553.600006553599 diff -9.095e-13 relative diff -1.388e-16 runtime 0.000097   8 wide GCC vector extensions Kahan sum
  accurate sum 6553.6000065536   sum 6553.600006553599 diff -9.095e-13 relative diff -1.388e-16 runtime 0.000084   8 wide Fog C++ vector class Kahan sum
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.001287   Serial sum with double double knuth sum accumulator
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000285   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000282   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000282   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000194   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000165   8 wide GCC vector extensions Knuth sum
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000164   8 wide Fog C++ vector class Knuth sum
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000388   Pair-wise sum

  accurate sum 6553.6000065536          sum 6553.600006553600363797  diff 3.6379788094793e-13  relative diff 5.5511151212179e-17  runtime 0.004209   Serial sum with quad double accumulator
  accurate sum 6553.6000065536          sum 6553.6000065536          diff 2.2517245678629e-26  relative diff 3.435859017351e-30   runtime 0.003242   Serial sum with quad double accumulator and quad terms

  accurate sum 6553.6000065536   sum 6553.600006553413 diff -1.874e-10 relative diff -2.859e-14 runtime 0.000050   OpenMP sum
  accurate sum 6553.600006461143 sum 6553.600006461143 diff          0 relative diff          0 runtime 0.000040   OpenMP sum with bit truncation
  accurate sum 6553.6000065536   sum 6553.600006553597 diff -2.728e-12 relative diff -4.163e-16 runtime 0.000068   OpenMP sum with double double kahan sum accumulator
  accurate sum 6553.600006553599 sum 6553.600006553595 diff -3.638e-12 relative diff -5.551e-16 runtime 0.000204   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 262144 log 18 ndigits 6 ndigitsld 3 nbits 22 nbitsld 10
Initializing mesh with Leblanc problem, high values first
  accurate sum 13107.2000131072  sum 13107.20001314317 diff  3.597e-08 relative diff  2.745e-12 runtime 0.000453   Serial sum
  accurate sum 13107.2000131072  sum 13107.20001310986 diff  2.663e-09 relative diff  2.032e-13 runtime 0.000085   Serial sum (OpenMP SIMD pragma)
  accurate sum 13107.20001       sum 13107.20001       diff          0 relative diff          0 runtime 0.000442   Serial sum with digit truncation
  accurate sum 13107.20001220703 sum 13107.20001220703 diff          0 relative diff          0 runtime 0.000456   Serial sum with bit truncation
  accurate sum 13107.2000131072  sum 13107.20001310719 diff -1.196e-11 relative diff -9.126e-16 runtime 0.000328   Serial sum with long double accumulator
  accurate sum 13107.20001311    sum 13107.20001311    diff          0 relative diff          0 runtime 0.000329   Serial sum with long double accumulator with ndigit truncation
  accurate sum 13107.20001310669 sum 13107.20001310669 diff          0 relative diff          0 runtime 0.000294   Serial sum with long double accumulator with bit truncation
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.001139   Serial sum with double double kahan sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000291   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000286   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000302   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff -1.819e-12 relative diff -1.388e-16 runtime 0.000182   8 wide GCC vector extensions Kahan sum
  accurate sum 13107.2000131072  sum 13107.2000131072  diff -1.819e-12 relative diff -1.388e-16 runtime 0.000169   8 wide Fog C++ vector class Kahan sum
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.002473   Serial sum with double double knuth sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000583   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000582   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000564   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000344   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000345   8 wide GCC vector extensions Knuth sum
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000331   8 wide Fog C++ vector class Knuth sum
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000810   Pair-wise sum

  accurate sum 13107.2000131072         sum 13107.20001310720072759  diff 7.2759576189587e-13  relative diff 5.5511151212179e-17  runtime 0.007682   Serial sum with quad double accumulator
  accurate sum 13107.2000131072         sum 13107.2000131072         diff 6.0240574166297e-26  relative diff 4.5959910664411e-30  runtime 0.004556   Serial sum with quad double accumulator and quad terms

  accurate sum 13107.2000131072  sum 13107.20001310718 diff -2.001e-11 relative diff -1.527e-15 runtime 0.000067   OpenMP sum
  accurate sum 13107.20001268387 sum 13107.20001268387 diff          0 relative diff          0 runtime 0.000048   OpenMP sum with bit truncation
  accurate sum 13107.2000131072  sum 13107.20001310719 diff -1.091e-11 relative diff -8.327e-16 runtime 0.000079   OpenMP sum with double double kahan sum accumulator
  accurate sum 13107.2000131072  sum 13107.20001310718 diff -1.455e-11 relative diff  -1.11e-15 runtime 0.000200   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 524288 log 19 ndigits 6 ndigitsld 3 nbits 23 nbitsld 11
Initializing mesh with Leblanc problem, high values first
  accurate sum 26214.4000262144  sum 26214.40002564823 diff -5.662e-07 relative diff  -2.16e-11 runtime 0.000873   Serial sum
  accurate sum 26214.4000262144  sum 26214.40002621097 diff -3.434e-09 relative diff  -1.31e-13 runtime 0.000181   Serial sum (OpenMP SIMD pragma)
  accurate sum 26214.40003       sum 26214.40003       diff          0 relative diff          0 runtime 0.000898   Serial sum with digit truncation
  accurate sum 26214.40002441406 sum 26214.40002441406 diff          0 relative diff          0 runtime 0.000897   Serial sum with bit truncation
  accurate sum 26214.4000262144  sum 26214.40002621434 diff -5.817e-11 relative diff -2.219e-15 runtime 0.000656   Serial sum with long double accumulator
  accurate sum 26214.40002621    sum 26214.40002621    diff          0 relative diff          0 runtime 0.000590   Serial sum with long double accumulator with ndigit truncation
  accurate sum 26214.40002620965 sum 26214.40002620965 diff          0 relative diff          0 runtime 0.000591   Serial sum with long double accumulator with bit truncation
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.002279   Serial sum with double double kahan sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.000578   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.000591   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.000584   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff -3.638e-12 relative diff -1.388e-16 runtime 0.000348   8 wide GCC vector extensions Kahan sum
  accurate sum 26214.4000262144  sum 26214.4000262144  diff -3.638e-12 relative diff -1.388e-16 runtime 0.000336   8 wide Fog C++ vector class Kahan sum
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.004718   Serial sum with double double knuth sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.001147   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.001161   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.000859   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.000457   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.000439   8 wide GCC vector extensions Knuth sum
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.000443   8 wide Fog C++ vector class Knuth sum
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.000536   Pair-wise sum

  accurate sum 26214.4000262144         sum 26214.40002621440145519  diff 1.4551915237917e-12  relative diff 5.5511151212179e-17  runtime 0.011573   Serial sum with quad double accumulator
  accurate sum 26214.4000262144         sum 26214.4000262144         diff -4.3299943998857e-25 relative diff -1.6517617780898e-29 runtime 0.009112   Serial sum with quad double accumulator and quad terms

  accurate sum 26214.4000262144  sum 26214.40002621737 diff  2.969e-09 relative diff  1.132e-13 runtime 0.000081   OpenMP sum
  accurate sum 26214.40002441406 sum 26214.40002441406 diff          0 relative diff          0 runtime 0.000067   OpenMP sum with bit truncation
  accurate sum 26214.4000262144  sum 26214.40002621439 diff -7.276e-12 relative diff -2.776e-16 runtime 0.000100   OpenMP sum with double double kahan sum accumulator
  accurate sum 26214.4000262144  sum 26214.40002621438 diff -1.455e-11 relative diff -5.551e-16 runtime 0.000258   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 1048576 log 20 ndigits 7 ndigitsld 4 nbits 24 nbitsld 12
Initializing mesh with Leblanc problem, high values first
  accurate sum 52428.8000524288  sum 52428.80005292332 diff  4.945e-07 relative diff  9.432e-12 runtime 0.001623   Serial sum
  accurate sum 52428.8000524288  sum 52428.80005250256 diff  7.376e-08 relative diff  1.407e-12 runtime 0.000373   Serial sum (OpenMP SIMD pragma)
  accurate sum 52428.8001        sum 52428.8001        diff          0 relative diff          0 runtime 0.001781   Serial sum with digit truncation
  accurate sum 52428.80004882812 sum 52428.80004882812 diff          0 relative diff          0 runtime 0.001808   Serial sum with bit truncation
  accurate sum 52428.8000524288  sum 52428.80005242807 diff -7.327e-10 relative diff -1.397e-14 runtime 0.001295   Serial sum with long double accumulator
  accurate sum 52428.8000524     sum 52428.8000524     diff          0 relative diff          0 runtime 0.001164   Serial sum with long double accumulator with ndigit truncation
  accurate sum 52428.8000524044  sum 52428.8000524044  diff          0 relative diff          0 runtime 0.001152   Serial sum with long double accumulator with bit truncation
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.004573   Serial sum with double double kahan sum accumulator
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.001189   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.001149   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.001013   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 52428.8000524288  sum 52428.80005242879 diff -7.276e-12 relative diff -1.388e-16 runtime 0.000462   8 wide GCC vector extensions Kahan sum
  accurate sum 52428.8000524288  sum 52428.80005242879 diff -7.276e-12 relative diff -1.388e-16 runtime 0.000449   8 wide Fog C++ vector class Kahan sum
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.006852   Serial sum with double double knuth sum accumulator
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.001717   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.001709   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.001716   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.000896   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.000879   8 wide GCC vector extensions Knuth sum
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.000882   8 wide Fog C++ vector class Knuth sum
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.001075   Pair-wise sum

  accurate sum 52428.8000524288         sum 52428.80005242880291038  diff 2.9103830475835e-12  relative diff 5.5511151212179e-17  runtime 0.023089   Serial sum with quad double accumulator
  accurate sum 52428.8000524288         sum 52428.8000524288         diff 5.4507764195875e-25  relative diff 1.039653094127e-29   runtime 0.018223   Serial sum with quad double accumulator and quad terms

  accurate sum 52428.8000524288  sum 52428.80005242942 diff  6.185e-10 relative diff   1.18e-14 runtime 0.000094   OpenMP sum
  accurate sum 52428.80004882812 sum 52428.80004882812 diff          0 relative diff          0 runtime 0.000059   OpenMP sum with bit truncation
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.000126   OpenMP sum with double double kahan sum accumulator
  accurate sum 52428.80005242879 sum 52428.80005242879 diff          0 relative diff          0 runtime 0.000259   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 2097152 log 21 ndigits 7 ndigitsld 4 nbits 25 nbitsld 12
Initializing mesh with Leblanc problem, high values first
  accurate sum 104857.6001048576 sum 104857.6001084272 diff   3.57e-06 relative diff  3.404e-11 runtime 0.003283   Serial sum
  accurate sum 104857.6001048576 sum 104857.6001051454 diff  2.878e-07 relative diff  2.744e-12 runtime 0.000806   Serial sum (OpenMP SIMD pragma)
  accurate sum 104857.6          sum 104857.6          diff          0 relative diff          0 runtime 0.003602   Serial sum with digit truncation
  accurate sum 104857.6000976562 sum 104857.6000976562 diff          0 relative diff          0 runtime 0.003601   Serial sum with bit truncation
  accurate sum 104857.6001048576 sum 104857.6001048604 diff  2.808e-09 relative diff  2.678e-14 runtime 0.002385   Serial sum with long double accumulator
  accurate sum 104857.600105     sum 104857.600105     diff          0 relative diff          0 runtime 0.002111   Serial sum with long double accumulator with ndigit truncation
  accurate sum 104857.6001048088 sum 104857.6001048088 diff          0 relative diff          0 runtime 0.001714   Serial sum with long double accumulator with bit truncation
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.006828   Serial sum with double double kahan sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.001753   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.001725   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.001750   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff -1.455e-11 relative diff -1.388e-16 runtime 0.000919   8 wide GCC vector extensions Kahan sum
  accurate sum 104857.6001048576 sum 104857.6001048576 diff -1.455e-11 relative diff -1.388e-16 runtime 0.000902   8 wide Fog C++ vector class Kahan sum
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.013696   Serial sum with double double knuth sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.003433   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.003418   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.003431   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.001777   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.001763   8 wide GCC vector extensions Knuth sum
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.001770   8 wide Fog C++ vector class Knuth sum
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.002712   Pair-wise sum

  accurate sum 104857.6001048576        sum 104857.6001048576058207  diff 5.8207660951669e-12  relative diff 5.5511151212179e-17  runtime 0.046145   Serial sum with quad double accumulator
  accurate sum 104857.6001048576        sum 104857.6001048576        diff -3.2890451037923e-24 relative diff -3.1366778378517e-29 runtime 0.036467   Serial sum with quad double accumulator and quad terms

  accurate sum 104857.6001048576 sum 104857.6001048104 diff -4.719e-08 relative diff -4.501e-13 runtime 0.000198   OpenMP sum
  accurate sum 104857.6000976562 sum 104857.6000976562 diff          0 relative diff          0 runtime 0.000081   OpenMP sum with bit truncation
  accurate sum 104857.6001048576 sum 104857.6001048575 diff -7.276e-11 relative diff -6.939e-16 runtime 0.000182   OpenMP sum with double double kahan sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048575 diff -1.164e-10 relative diff  -1.11e-15 runtime 0.000340   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 4194304 log 22 ndigits 7 ndigitsld 4 nbits 26 nbitsld 13
Initializing mesh with Leblanc problem, high values first
  accurate sum 209715.2002097152 sum 209715.2001908246 diff -1.889e-05 relative diff -9.008e-11 runtime 0.006334   Serial sum
  accurate sum 209715.2002097152 sum 209715.2002051859 diff -4.529e-06 relative diff  -2.16e-11 runtime 0.001718   Serial sum (OpenMP SIMD pragma)
  accurate sum 209715.2          sum 209715.2          diff          0 relative diff          0 runtime 0.005702   Serial sum with digit truncation
  accurate sum 209715.19921875   sum 209715.19921875   diff          0 relative diff          0 runtime 0.005073   Serial sum with bit truncation
  accurate sum 209715.2002097152 sum 209715.2002097158 diff  5.755e-10 relative diff  2.744e-15 runtime 0.003704   Serial sum with long double accumulator
  accurate sum 209715.20021      sum 209715.20021      diff          0 relative diff          0 runtime 0.003640   Serial sum with long double accumulator with ndigit truncation
  accurate sum 209715.2002096176 sum 209715.2002096176 diff          0 relative diff          0 runtime 0.003642   Serial sum with long double accumulator with bit truncation
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.013680   Serial sum with double double kahan sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.003720   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.003701   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.003708   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff  -2.91e-11 relative diff -1.388e-16 runtime 0.002185   8 wide GCC vector extensions Kahan sum
  accurate sum 209715.2002097152 sum 209715.2002097152 diff  -2.91e-11 relative diff -1.388e-16 runtime 0.002156   8 wide Fog C++ vector class Kahan sum
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.027360   Serial sum with double double knuth sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.006943   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.006917   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.006935   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.003742   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.003721   8 wide GCC vector extensions Knuth sum
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.003726   8 wide Fog C++ vector class Knuth sum
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.006012   Pair-wise sum

  accurate sum 209715.2002097152        sum 209715.2002097152116415  diff 1.1641532190334e-11  relative diff 5.5511151212179e-17  runtime 0.092286   Serial sum with quad double accumulator
  accurate sum 209715.2002097152        sum 209715.2002097152        diff 2.3784295131933e-23  relative diff 1.1341235689234e-28  runtime 0.072956   Serial sum with quad double accumulator and quad terms

  accurate sum 209715.2002097152 sum 209715.2002097069 diff -8.324e-09 relative diff -3.969e-14 runtime 0.000249   OpenMP sum
  accurate sum 209715.2001953125 sum 209715.2001953125 diff          0 relative diff          0 runtime 0.000119   OpenMP sum with bit truncation
  accurate sum 209715.2002097152 sum 209715.2002097149 diff -3.201e-10 relative diff -1.527e-15 runtime 0.000310   OpenMP sum with double double kahan sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097149 diff -2.328e-10 relative diff  -1.11e-15 runtime 0.000442   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 8388608 log 23 ndigits 7 ndigitsld 4 nbits 27 nbitsld 13
Initializing mesh with Leblanc problem, high values first
  accurate sum 419430.4004194304 sum 419430.400462431  diff    4.3e-05 relative diff  1.025e-10 runtime 0.009918   Serial sum
  accurate sum 419430.4004194304 sum 419430.4004233865 diff  3.956e-06 relative diff  9.432e-12 runtime 0.004013   Serial sum (OpenMP SIMD pragma)
  accurate sum 419430.4          sum 419430.4          diff          0 relative diff          0 runtime 0.010293   Serial sum with digit truncation
  accurate sum 419430.3984375    sum 419430.3984375    diff          0 relative diff          0 runtime 0.010294   Serial sum with bit truncation
  accurate sum 419430.4004194304 sum 419430.4004193632 diff -6.722e-08 relative diff -1.603e-13 runtime 0.007707   Serial sum with long double accumulator
  accurate sum 419430.400419     sum 419430.400419     diff          0 relative diff          0 runtime 0.007679   Serial sum with long double accumulator with ndigit truncation
  accurate sum 419430.4004192352 sum 419430.4004192352 diff          0 relative diff          0 runtime 0.007674   Serial sum with long double accumulator with bit truncation
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.027426   Serial sum with double double kahan sum accumulator
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.007793   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.007774   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.007764   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 419430.4004194304 sum 419430.4004194303 diff -5.821e-11 relative diff -1.388e-16 runtime 0.004894   8 wide GCC vector extensions Kahan sum
  accurate sum 419430.4004194304 sum 419430.4004194303 diff -5.821e-11 relative diff -1.388e-16 runtime 0.004893   8 wide Fog C++ vector class Kahan sum
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.054712   Serial sum with double double knuth sum accumulator
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.014128   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.014093   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.014125   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.007938   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.007914   8 wide GCC vector extensions Knuth sum
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.007911   8 wide Fog C++ vector class Knuth sum
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.017806   Pair-wise sum

  accurate sum 419430.4004194304        sum 419430.4004194304232830  diff 2.3283064380668e-11  relative diff 5.5511151212179e-17  runtime 0.184533   Serial sum with quad double accumulator
  accurate sum 419430.4004194304        sum 419430.4004194304        diff 1.1756526599141e-23  relative diff 2.8029743641339e-29  runtime 0.145823   Serial sum with quad double accumulator and quad terms

  accurate sum 419430.4004194304 sum 419430.4004201849 diff  7.545e-07 relative diff  1.799e-12 runtime 0.000460   OpenMP sum
  accurate sum 419430.400390625  sum 419430.400390625  diff          0 relative diff          0 runtime 0.000224   OpenMP sum with bit truncation
  accurate sum 419430.4004194304 sum 419430.4004194301 diff  -2.91e-10 relative diff -6.939e-16 runtime 0.000540   OpenMP sum with double double kahan sum accumulator
  accurate sum 419430.4004194303 sum 419430.4004194301 diff -2.328e-10 relative diff -5.551e-16 runtime 0.000691   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 16777216 log 24 ndigits 7 ndigitsld 4 nbits 27 nbitsld 14
Initializing mesh with Leblanc problem, high values first
  accurate sum 838860.8008388608 sum 838860.800853056  diff   1.42e-05 relative diff  1.692e-11 runtime 0.020309   Serial sum
  accurate sum 838860.8008388608 sum 838860.8008674171 diff  2.856e-05 relative diff  3.404e-11 runtime 0.009194   Serial sum (OpenMP SIMD pragma)
  accurate sum 838860.801        sum 838860.801        diff          0 relative diff          0 runtime 0.020969   Serial sum with digit truncation
  accurate sum 838860.796875     sum 838860.796875     diff          0 relative diff          0 runtime 0.020956   Serial sum with bit truncation
  accurate sum 838860.8008388608 sum 838860.800838807  diff  -5.38e-08 relative diff -6.413e-14 runtime 0.015700   Serial sum with long double accumulator
  accurate sum 838860.800839     sum 838860.800839     diff          0 relative diff          0 runtime 0.015728   Serial sum with long double accumulator with ndigit truncation
  accurate sum 838860.8008384705 sum 838860.8008384705 diff          0 relative diff          0 runtime 0.015685   Serial sum with long double accumulator with bit truncation
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.054909   Serial sum with double double kahan sum accumulator
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.015889   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.015824   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.015839   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 838860.8008388608 sum 838860.8008388607 diff -1.164e-10 relative diff -1.388e-16 runtime 0.010264   8 wide GCC vector extensions Kahan sum
  accurate sum 838860.8008388608 sum 838860.8008388607 diff -1.164e-10 relative diff -1.388e-16 runtime 0.010267   8 wide Fog C++ vector class Kahan sum
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.109704   Serial sum with double double knuth sum accumulator
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.028840   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.028392   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.028410   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.016251   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.016335   8 wide GCC vector extensions Knuth sum
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.016326   8 wide Fog C++ vector class Knuth sum
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.037049   Pair-wise sum

  accurate sum 838860.8008388608        sum 838860.8008388608465661  diff 4.6566128761335e-11  relative diff 5.5511151212179e-17  runtime 0.368987   Serial sum with quad double accumulator
  accurate sum 838860.8008388608        sum 838860.8008388608        diff -3.8768739581042e-23 relative diff -4.6215938976137e-29 runtime 0.291585   Serial sum with quad double accumulator and quad terms

  accurate sum 838860.8008388608 sum 838860.8008389944 diff  1.336e-07 relative diff  1.593e-13 runtime 0.027166   OpenMP sum
  accurate sum 838860.80078125   sum 838860.80078125   diff          0 relative diff          0 runtime 0.025992   OpenMP sum with bit truncation
  accurate sum 838860.8008388608 sum 838860.80083886   diff -8.149e-10 relative diff -9.714e-16 runtime 0.023489   OpenMP sum with double double kahan sum accumulator
  accurate sum 838860.8008388607 sum 838860.8008388598 diff -9.313e-10 relative diff  -1.11e-15 runtime 0.001078   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 33554432 log 25 ndigits 8 ndigitsld 5 nbits 29 nbitsld 15
Initializing mesh with Leblanc problem, high values first
  accurate sum 1677721.601677722 sum 1677721.600413603 diff  -0.001264 relative diff -7.535e-10 runtime 0.041286   Serial sum
  accurate sum 1677721.601677722 sum 1677721.601526597 diff -0.0001511 relative diff -9.008e-11 runtime 0.019664   Serial sum (OpenMP SIMD pragma)
  accurate sum 1677721.6         sum 1677721.6         diff          0 relative diff          0 runtime 0.042390   Serial sum with digit truncation
  accurate sum 1677721.5         sum 1677721.5         diff          0 relative diff          0 runtime 0.042369   Serial sum with bit truncation
  accurate sum 1677721.601677722 sum 1677721.601678708 diff  9.863e-07 relative diff  5.879e-13 runtime 0.031836   Serial sum with long double accumulator
  accurate sum 1677721.6017      sum 1677721.6017      diff          0 relative diff          0 runtime 0.031797   Serial sum with long double accumulator with ndigit truncation
  accurate sum 1677721.601676941 sum 1677721.601676941 diff          0 relative diff          0 runtime 0.031762   Serial sum with long double accumulator with bit truncation
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.109861   Serial sum with double double kahan sum accumulator
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.032085   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.032048   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.032044   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 1677721.601677722 sum 1677721.601677721 diff -2.328e-10 relative diff -1.388e-16 runtime 0.021003   8 wide GCC vector extensions Kahan sum
  accurate sum 1677721.601677722 sum 1677721.601677721 diff -2.328e-10 relative diff -1.388e-16 runtime 0.021004   8 wide Fog C++ vector class Kahan sum
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.218711   Serial sum with double double knuth sum accumulator
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.056990   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.056912   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.056997   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.032137   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.032818   8 wide GCC vector extensions Knuth sum
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.032857   8 wide Fog C++ vector class Knuth sum
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.074847   Pair-wise sum

  accurate sum 1677721.6016777216       sum 1677721.601677721693132  diff 9.3132257522671e-11  relative diff 5.5511151212179e-17  runtime 0.737933   Serial sum with quad double accumulator
  accurate sum 1677721.6016777216       sum 1677721.6016777216       diff 4.9545533752512e-22  relative diff 2.9531439365725e-28  runtime 0.583126   Serial sum with quad double accumulator and quad terms

  accurate sum 1677721.601677722 sum 1677721.601665648 diff -1.207e-05 relative diff -7.196e-12 runtime 0.001752   OpenMP sum
  accurate sum 1677721.6015625   sum 1677721.6015625   diff          0 relative diff          0 runtime 0.001420   OpenMP sum with bit truncation
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.001906   OpenMP sum with double double kahan sum accumulator
  accurate sum 1677721.601677721 sum 1677721.601677721 diff          0 relative diff          0 runtime 0.001879   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 67108864 log 26 ndigits 8 ndigitsld 5 nbits 30 nbitsld 15
Initializing mesh with Leblanc problem, high values first
  accurate sum 3355443.203355443 sum 3355443.201976103 diff  -0.001379 relative diff -4.111e-10 runtime 0.083317   Serial sum
  accurate sum 3355443.203355443 sum 3355443.203699448 diff   0.000344 relative diff  1.025e-10 runtime 0.040845   Serial sum (OpenMP SIMD pragma)
  accurate sum 3355443.2         sum 3355443.2         diff          0 relative diff          0 runtime 0.085267   Serial sum with digit truncation
  accurate sum 3355443           sum 3355443           diff          0 relative diff          0 runtime 0.085302   Serial sum with bit truncation
  accurate sum 3355443.203355443 sum 3355443.203356126 diff  6.824e-07 relative diff  2.034e-13 runtime 0.063965   Serial sum with long double accumulator
  accurate sum 3355443.2034      sum 3355443.2034      diff          0 relative diff          0 runtime 0.063954   Serial sum with long double accumulator with ndigit truncation
  accurate sum 3355443.203353882 sum 3355443.203353882 diff          0 relative diff          0 runtime 0.063937   Serial sum with long double accumulator with bit truncation
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.220001   Serial sum with double double kahan sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.064946   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.064370   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.064353   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff -4.657e-10 relative diff -1.388e-16 runtime 0.042355   8 wide GCC vector extensions Kahan sum
  accurate sum 3355443.203355443 sum 3355443.203355443 diff -4.657e-10 relative diff -1.388e-16 runtime 0.042404   8 wide Fog C++ vector class Kahan sum
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.437487   Serial sum with double double knuth sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.114225   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.114149   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.114218   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.066104   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.066038   8 wide GCC vector extensions Knuth sum
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.066014   8 wide Fog C++ vector class Knuth sum
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.152757   Pair-wise sum

  accurate sum 3355443.2033554432       sum 3355443.203355443386264  diff 1.8626451504534e-10  relative diff 5.5511151212179e-17  runtime 1.477253   Serial sum with quad double accumulator
  accurate sum 3355443.2033554432       sum 3355443.2033554432       diff 1.987420167313e-21   relative diff 5.9229736486839e-28  runtime 1.167045   Serial sum with quad double accumulator and quad terms

  accurate sum 3355443.203355443 sum 3355443.203353289 diff -2.154e-06 relative diff  -6.42e-13 runtime 0.003365   OpenMP sum
  accurate sum 3355443.1875      sum 3355443.1875      diff          0 relative diff          0 runtime 0.002636   OpenMP sum with bit truncation
  accurate sum 3355443.203355443 sum 3355443.203355444 diff  9.313e-10 relative diff  2.776e-16 runtime 0.003606   OpenMP sum with double double kahan sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355445 diff  1.863e-09 relative diff  5.551e-16 runtime 0.003639   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 134217728 log 27 ndigits 8 ndigitsld 5 nbits 31 nbitsld 16
Initializing mesh with Leblanc problem, high values first
  accurate sum 6710886.406710886 sum 6710886.393382353 diff   -0.01333 relative diff -1.986e-09 runtime 0.167414   Serial sum
  accurate sum 6710886.406710886 sum 6710886.406824448 diff  0.0001136 relative diff  1.692e-11 runtime 0.082939   Serial sum (OpenMP SIMD pragma)
  accurate sum 6710886.4         sum 6710886.4         diff          0 relative diff          0 runtime 0.170970   Serial sum with digit truncation
  accurate sum 6710886           sum 6710886           diff          0 relative diff          0 runtime 0.170959   Serial sum with bit truncation
  accurate sum 6710886.406710886 sum 6710886.406710007 diff -8.792e-07 relative diff  -1.31e-13 runtime 0.128316   Serial sum with long double accumulator
  accurate sum 6710886.4067      sum 6710886.4067      diff          0 relative diff          0 runtime 0.128376   Serial sum with long double accumulator with ndigit truncation
  accurate sum 6710886.406677246 sum 6710886.406677246 diff          0 relative diff          0 runtime 0.128348   Serial sum with long double accumulator with bit truncation
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.439651   Serial sum with double double kahan sum accumulator
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.130849   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.130726   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.130736   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 6710886.406710886 sum 6710886.406710885 diff -9.313e-10 relative diff -1.388e-16 runtime 0.085202   8 wide GCC vector extensions Kahan sum
  accurate sum 6710886.406710886 sum 6710886.406710885 diff -9.313e-10 relative diff -1.388e-16 runtime 0.085291   8 wide Fog C++ vector class Kahan sum
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.875080   Serial sum with double double knuth sum accumulator
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.228495   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.228304   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.228244   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.131593   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.133794   8 wide GCC vector extensions Knuth sum
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.134142   8 wide Fog C++ vector class Knuth sum
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.310934   Pair-wise sum

  accurate sum 6710886.4067108864       sum 6710886.406710886772529  diff 3.7252903009068e-10  relative diff 5.5511151212179e-17  runtime 2.951940   Serial sum with quad double accumulator
  accurate sum 6710886.4067108864       sum 6710886.4067108864       diff -3.22980998523e-20   relative diff -4.8127919167284e-27 runtime 2.332644   Serial sum with quad double accumulator and quad terms

  accurate sum 6710886.406710886 sum 6710886.406904032 diff  0.0001931 relative diff  2.878e-11 runtime 0.006017   OpenMP sum
  accurate sum 6710886.375       sum 6710886.375       diff          0 relative diff          0 runtime 0.005303   OpenMP sum with bit truncation
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.007009   OpenMP sum with double double kahan sum accumulator
  accurate sum 6710886.406710885 sum 6710886.406710882 diff -3.725e-09 relative diff -5.551e-16 runtime 0.007018   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 268435456 log 28 ndigits 8 ndigitsld 5 nbits 32 nbitsld 16
Initializing mesh with Leblanc problem, high values first
  accurate sum 13421772.81342177 sum 13421772.76838235 diff   -0.04504 relative diff -3.356e-09 runtime 0.336476   Serial sum
  accurate sum 13421772.81342177 sum 13421772.80330882 diff   -0.01011 relative diff -7.535e-10 runtime 0.167467   Serial sum (OpenMP SIMD pragma)
  accurate sum 13421773          sum 13421773          diff          0 relative diff          0 runtime 0.342562   Serial sum with digit truncation
  accurate sum 13421768          sum 13421768          diff          0 relative diff          0 runtime 0.342471   Serial sum with bit truncation
  accurate sum 13421772.81342177 sum 13421772.81344066 diff  1.889e-05 relative diff  1.407e-12 runtime 0.256992   Serial sum with long double accumulator
  accurate sum 13421772.813      sum 13421772.813      diff          0 relative diff          0 runtime 0.256935   Serial sum with long double accumulator with ndigit truncation
  accurate sum 13421772.81335449 sum 13421772.81335449 diff          0 relative diff          0 runtime 0.256893   Serial sum with long double accumulator with bit truncation
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.879792   Serial sum with double double kahan sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.258804   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.258609   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.258604   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff -1.863e-09 relative diff -1.388e-16 runtime 0.170944   8 wide GCC vector extensions Kahan sum
  accurate sum 13421772.81342177 sum 13421772.81342177 diff -1.863e-09 relative diff -1.388e-16 runtime 0.171009   8 wide Fog C++ vector class Kahan sum
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 1.749503   Serial sum with double double knuth sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.457657   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.456818   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.457110   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.264392   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.265795   8 wide GCC vector extensions Knuth sum
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.262867   8 wide Fog C++ vector class Knuth sum
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.628190   Pair-wise sum

  accurate sum 13421772.8134217728      sum 13421772.81342177354505  diff 7.4505806018137e-10  relative diff 5.5511151212179e-17  runtime 5.903792   Serial sum with quad double accumulator
  accurate sum 13421772.8134217728      sum 13421772.8134217728      diff 2.787986889892e-20   relative diff 2.0772121005535e-27  runtime 4.665845   Serial sum with quad double accumulator and quad terms

  accurate sum 13421772.81342177 sum 13421772.81345622 diff  3.445e-05 relative diff  2.567e-12 runtime 0.011308   OpenMP sum
  accurate sum 13421772.5        sum 13421772.5        diff          0 relative diff          0 runtime 0.010199   OpenMP sum with bit truncation
  accurate sum 13421772.81342177 sum 13421772.81342177 diff  1.863e-09 relative diff  1.388e-16 runtime 0.013814   OpenMP sum with double double kahan sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.013806   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 536870912 log 29 ndigits 8 ndigitsld 5 nbits 33 nbitsld 17
Initializing mesh with Leblanc problem, high values first
  accurate sum 26843545.62684355 sum 26843545.70588235 diff    0.07904 relative diff  2.944e-09 runtime 0.672287   Serial sum
  accurate sum 26843545.62684355 sum 26843545.61580882 diff   -0.01103 relative diff -4.111e-10 runtime 0.336066   Serial sum (OpenMP SIMD pragma)
  accurate sum 26843546          sum 26843546          diff          0 relative diff          0 runtime 0.686068   Serial sum with digit truncation
  accurate sum 26843520          sum 26843520          diff          0 relative diff          0 runtime 0.684984   Serial sum with bit truncation
  accurate sum 26843545.62684355 sum 26843545.62691722 diff  7.367e-05 relative diff  2.745e-12 runtime 0.514914   Serial sum with long double accumulator
  accurate sum 26843545.627      sum 26843545.627      diff          0 relative diff          0 runtime 0.514797   Serial sum with long double accumulator with ndigit truncation
  accurate sum 26843545.62646484 sum 26843545.62646484 diff          0 relative diff          0 runtime 0.514730   Serial sum with long double accumulator with bit truncation
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 1.759253   Serial sum with double double kahan sum accumulator
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 0.518886   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 0.518430   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 0.518664   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 26843545.62684355 sum 26843545.62684354 diff -3.725e-09 relative diff -1.388e-16 runtime 0.342692   8 wide GCC vector extensions Kahan sum
  accurate sum 26843545.62684355 sum 26843545.62684354 diff -3.725e-09 relative diff -1.388e-16 runtime 0.342618   8 wide Fog C++ vector class Kahan sum
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 3.499484   Serial sum with double double knuth sum accumulator
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 0.914590   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 0.914241   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 0.914531   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 0.519587   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 0.533310   8 wide GCC vector extensions Knuth sum
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 0.533718   8 wide Fog C++ vector class Knuth sum
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 1.268429   Pair-wise sum

  accurate sum 26843545.6268435456      sum 26843545.62684354709011  diff 1.4901161203627e-09  relative diff 5.5511151212179e-17  runtime 11.813569   Serial sum with quad double accumulator
  accurate sum 26843545.6268435456      sum 26843545.6268435456      diff 2.0244591179446e-19  relative diff 7.5416979041701e-27  runtime 9.331697   Serial sum with quad double accumulator and quad terms

  accurate sum 26843545.62684355 sum 26843545.62375301 diff  -0.003091 relative diff -1.151e-10 runtime 0.021043   OpenMP sum
  accurate sum 26843544          sum 26843544          diff          0 relative diff          0 runtime 0.019963   OpenMP sum with bit truncation
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 0.027293   OpenMP sum with double double kahan sum accumulator
  accurate sum 26843545.62684354 sum 26843545.62684354 diff          0 relative diff          0 runtime 0.027241   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 1073741824 log 30 ndigits 9 ndigitsld 6 nbits 34 nbitsld 18
Initializing mesh with Leblanc problem, high values first
  accurate sum 53687091.25368709 sum 53687091.70588235 diff     0.4522 relative diff  8.423e-09 runtime 1.349394   Serial sum
  accurate sum 53687091.25368709 sum 53687091.14705883 diff    -0.1066 relative diff -1.986e-09 runtime 0.673741   Serial sum (OpenMP SIMD pragma)
  accurate sum 53687090          sum 53687090          diff          0 relative diff          0 runtime 1.371309   Serial sum with digit truncation
  accurate sum 53687040          sum 53687040          diff          0 relative diff          0 runtime 1.371761   Serial sum with bit truncation
  accurate sum 53687091.25368709 sum 53687091.25252757 diff   -0.00116 relative diff  -2.16e-11 runtime 1.028592   Serial sum with long double accumulator
  accurate sum 53687091.25       sum 53687091.25       diff          0 relative diff          0 runtime 1.029264   Serial sum with long double accumulator with ndigit truncation
  accurate sum 53687091.25195312 sum 53687091.25195312 diff          0 relative diff          0 runtime 1.029652   Serial sum with long double accumulator with bit truncation
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 3.517589   Serial sum with double double kahan sum accumulator
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 1.037348   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 1.036143   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 1.035848   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 53687091.25368709 sum 53687091.25368708 diff -7.451e-09 relative diff -1.388e-16 runtime 0.685667   8 wide GCC vector extensions Kahan sum
  accurate sum 53687091.25368709 sum 53687091.25368708 diff -7.451e-09 relative diff -1.388e-16 runtime 0.685470   8 wide Fog C++ vector class Kahan sum
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 6.998537   Serial sum with double double knuth sum accumulator
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 1.827696   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 1.828258   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 1.826897   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 1.062414   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 1.069759   8 wide GCC vector extensions Knuth sum
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 1.069331   8 wide Fog C++ vector class Knuth sum
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 2.542745   Pair-wise sum

  accurate sum 53687091.2536870912      sum 53687091.25368709418023  diff 2.9802322407255e-09  relative diff 5.5511151212179e-17  runtime 23.613290   Serial sum with quad double accumulator
  accurate sum 53687091.2536870912      sum 53687091.2536870912      diff -1.0747252611427e-18 relative diff -2.0018317924216e-26 runtime 18.663108   Serial sum with quad double accumulator and quad terms

  accurate sum 53687091.25368709 sum 53687091.25313558 diff -0.0005515 relative diff -1.027e-11 runtime 0.041025   OpenMP sum
  accurate sum 53687088          sum 53687088          diff          0 relative diff          0 runtime 0.039702   OpenMP sum with bit truncation
  accurate sum 53687091.25368709 sum 53687091.25368713 diff  3.725e-08 relative diff  6.939e-16 runtime 0.054357   OpenMP sum with double double kahan sum accumulator
  accurate sum 53687091.25368708 sum 53687091.25368711 diff   2.98e-08 relative diff  5.551e-16 runtime 0.054374   OpenMP sum with double double kahan sum accumulator with bit truncation

Scanning dependencies of target distclean
Built target distclean
/usr/bin/modulecmd bash $*
MANPATH=/usr/share/man:/usr/local/share/man ;export MANPATH;PATH=/home/brobey/bin:/home/brobey/parsplice-install/bin:/home/brobey/bin:/home/brobey/parsplice-install/bin:/home/brobey/spack/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin ;export PATH;unset CC;unset CPP;unset CXX;unset F77;unset F90;unset FC;unset LD_LIBRARY_PATH;unset LOADEDMODULES;unset _LMFILES_;
/usr/bin/modulecmd bash $*
/usr/bin/modulecmd bash $*
ADVISOR_2019_DIR=/projects/opt/intel/advisor_2019.4.0.597843 ;export ADVISOR_2019_DIR;CC=icc ;export CC;CLASSPATH=/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/mpi/intel64/lib/mpi.jar:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/daal/lib/daal.jar ;export CLASSPATH;CLCK_ROOT=/projects/opt/intel/clck/2019.4.0 ;export CLCK_ROOT;CONDA_DEFAULT_ENV=root ;export CONDA_DEFAULT_ENV;CONDA_PATH_BACKUP=/projects/opt/intel/advisor_2019.4.0.597843/bin64:/projects/opt/intel/vtune_amplifier_2019.4.0.597835/bin64:/projects/opt/intel/inspector_2019.4.0.597413/bin64:/projects/opt/intel/itac/2019.4.036/intel64/bin:/projects/opt/intel/itac/2019.4.036/intel64/bin:/projects/opt/intel/clck/2019.4.0/bin/intel64:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/bin/intel64:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/mpi/intel64/libfabric/bin:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/mpi/intel64/bin:/projects/opt/intel/debugger_2019/gdb/intel64/bin:/root/perl5/bin:/usr/local/sbin:/sbin:/bin:/usr/sbin:/usr/bin ;export CONDA_PATH_BACKUP;CONDA_PREFIX=/projects/opt/intel/intelpython3 ;export CONDA_PREFIX;CONDA_PS1_BACKUP= ;export CONDA_PS1_BACKUP;CPATH=/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/ipp/include:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/mkl/include:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/pstl/include:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/tbb/include:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/tbb/include:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/daal/include ;export CPATH;CPLUS_INCLUDE_PATH=/projects/opt/intel/clck/2019.4.0/include ;export CPLUS_INCLUDE_PATH;CXX=icpc ;export CXX;DAALROOT=/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/daal ;export DAALROOT;F77=ifort ;export F77;F90=ifort ;export F90;FC=ifort ;export FC;FI_PROVIDER_PATH=/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/mpi/intel64/libfabric/lib/prov ;export FI_PROVIDER_PATH;INFOPATH=/projects/opt/intel/documentation_2019/en/debugger/gdb-ia/info/ ;export INFOPATH;INSPECTOR_2019_DIR=/projects/opt/intel/inspector_2019.4.0.597413 ;export INSPECTOR_2019_DIR;INTEL_LICENSE_FILE=/projects/opt/intel/licenses:/opt/intel/licenses:/root/intel/licenses:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/licenses:/opt/intel/licenses:/root/intel/licenses:/projects/opt/intel/clck/2019.4.0/licenses:/opt/intel/licenses:/root/intel/licenses:/Users/Shared/Library/Application\ Support/Intel/Licenses ;export INTEL_LICENSE_FILE;INTEL_PYTHONHOME=/projects/opt/intel/debugger_2019/python/intel64/ ;export INTEL_PYTHONHOME;IPPROOT=/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/ipp ;export IPPROOT;I_MPI_ROOT=/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/mpi ;export I_MPI_ROOT;LD_LIBRARY_PATH=/projects/opt/intel/itac/2019.4.036/intel64/slib:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/compiler/lib/intel64_lin:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/mpi/intel64/libfabric/lib:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/mpi/intel64/lib/release:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/mpi/intel64/lib:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/ipp/lib/intel64:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/compiler/lib/intel64_lin:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/mkl/lib/intel64_lin:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64/gcc4.7:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64/gcc4.7:/projects/opt/intel/debugger_2019/libipt/intel64/lib:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/daal/lib/intel64_lin:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/daal/../tbb/lib/intel64_lin/gcc4.4 ;export LD_LIBRARY_PATH;LIBRARY_PATH=/projects/opt/intel/clck/2019.4.0/lib/intel64:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/mpi/intel64/libfabric/lib:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/ipp/lib/intel64:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/compiler/lib/intel64_lin:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/mkl/lib/intel64_lin:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64/gcc4.7:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/tbb/lib/intel64/gcc4.7:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/daal/lib/intel64_lin:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/daal/../tbb/lib/intel64_lin/gcc4.4 ;export LIBRARY_PATH;LOADEDMODULES=cmake/3.12.4:intel/19.0.4 ;export LOADEDMODULES;MANPATH=/projects/opt/intel/itac/2019.4.036/man:/projects/opt/intel/clck/2019.4.0/man:/projects/opt/intel/man/common:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/mpi/man:/projects/opt/intel/documentation_2019/en/debugger/gdb-ia/man/:/root/perl5/man:/usr/local/man:/usr/local/share/man:/usr/share/man/overrides:/usr/share/man ;export MANPATH;MKLROOT=/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/mkl ;export MKLROOT;NLSPATH=/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/compiler/lib/intel64/locale/%l_%t/%N:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/mkl/lib/intel64_lin/locale/%l_%t/%N:/projects/opt/intel/debugger_2019/gdb/intel64/share/locale/%l_%t/%N ;export NLSPATH;PATH=/projects/opt/intel/intelpython3/bin:/projects/opt/intel/advisor_2019.4.0.597843/bin64:/projects/opt/intel/vtune_amplifier_2019.4.0.597835/bin64:/projects/opt/intel/inspector_2019.4.0.597413/bin64:/projects/opt/intel/itac/2019.4.036/intel64/bin:/projects/opt/intel/clck/2019.4.0/bin/intel64:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/bin/intel64:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/mpi/intel64/libfabric/bin:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/mpi/intel64/bin:/projects/opt/intel/debugger_2019/gdb/intel64/bin:/projects/opt/centos7/cmake/3.12.4/bin:/home/brobey/bin:/home/brobey/parsplice-install/bin:/home/brobey/bin:/home/brobey/parsplice-install/bin:/home/brobey/spack/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/projects/opt/intel/parallel_studio_xe_2019.4.070/bin ;export PATH;PKG_CONFIG_PATH=/projects/opt/intel/advisor_2019.4.0.597843/include/pkgconfig/lib64:/projects/opt/intel/vtune_amplifier_2019.4.0.597835/include/pkgconfig/lib64:/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/mkl/bin/pkgconfig ;export PKG_CONFIG_PATH;PSTLROOT=/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/pstl ;export PSTLROOT;PSXE_2019=1 ;export PSXE_2019;PYTHONPATH=/projects/opt/intel/advisor_2019.4.0.597843/pythonapi ;export PYTHONPATH;TBBROOT=/projects/opt/intel/compilers_and_libraries_2019.4.243/linux/tbb ;export TBBROOT;VTUNE_AMPLIFIER_2019_DIR=/projects/opt/intel/vtune_amplifier_2019.4.0.597835 ;export VTUNE_AMPLIFIER_2019_DIR;VT_ADD_LIBS=-ldwarf\ -lelf\ -lvtunwind\ -lm\ -lpthread ;export VT_ADD_LIBS;VT_ARCH=intel64 ;export VT_ARCH;VT_LIB_DIR=/projects/opt/intel/itac/2019.4.036/intel64/lib ;export VT_LIB_DIR;VT_MPI=impi4 ;export VT_MPI;VT_ROOT=/projects/opt/intel/itac/2019.4.036 ;export VT_ROOT;VT_SLIB_DIR=/projects/opt/intel/itac/2019.4.036/intel64/slib ;export VT_SLIB_DIR;_LMFILES_=/projects/darwin/modulefiles/centos7/cmake/3.12.4:/projects/darwin/modulefiles/centos7/intel/19.0.4 ;export _LMFILES_;
-- The C compiler identification is Intel 19.0.4.20190416
-- The CXX compiler identification is Intel 19.0.4.20190416
-- Check for working C compiler: /projects/opt/intel/compilers_and_libraries_2019.4.243/linux/bin/intel64/icc
-- Check for working C compiler: /projects/opt/intel/compilers_and_libraries_2019.4.243/linux/bin/intel64/icc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /projects/opt/intel/compilers_and_libraries_2019.4.243/linux/bin/intel64/icpc
-- Check for working CXX compiler: /projects/opt/intel/compilers_and_libraries_2019.4.243/linux/bin/intel64/icpc -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Found OpenMP_C: -qopenmp (found version "5.0") 
-- Found OpenMP_CXX: -qopenmp (found version "5.0") 
-- Found OpenMP: TRUE (found version "5.0")  
-- Trying Fog Vector Class -- works
-- Trying X86_64 intrinsics -- works
-- Detecting AVX512 hardware -- found
-- Trying GCC Vector Extensions -- works
-- Trying Quad math library -- works
-- Configuring done
-- Generating done
-- Build files have been written to: /home/brobey/GlobalSums
Scanning dependencies of target globalsums
[  3%] Building C object CMakeFiles/globalsums.dir/globalsums.c.o
icc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[  6%] Building C object CMakeFiles/globalsums.dir/do_kahan_sum.c.o
icc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[  9%] Building C object CMakeFiles/globalsums.dir/serial_sum_novec.c.o
icc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[ 12%] Building C object CMakeFiles/globalsums.dir/do_kahan_sum_omp.c.o
icc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[ 15%] Building C object CMakeFiles/globalsums.dir/do_kahan_sum_omp_wbittrunc.c.o
icc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[ 18%] Building C object CMakeFiles/globalsums.dir/do_knuth_sum.c.o
icc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[ 21%] Building C object CMakeFiles/globalsums.dir/do_ldsum.c.o
icc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[ 25%] Building C object CMakeFiles/globalsums.dir/do_ldsum_wbittrunc.c.o
icc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[ 28%] Building C object CMakeFiles/globalsums.dir/do_ldsum_wdigittrunc.c.o
icc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[ 31%] Building C object CMakeFiles/globalsums.dir/do_pair_sum.c.o
icc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[ 34%] Building C object CMakeFiles/globalsums.dir/do_sum.c.o
icc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[ 37%] Building C object CMakeFiles/globalsums.dir/do_sum_omp.c.o
icc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[ 40%] Building C object CMakeFiles/globalsums.dir/do_sum_omp_wbittrunc.c.o
icc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[ 43%] Building C object CMakeFiles/globalsums.dir/do_sum_wbittrunc.c.o
icc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[ 46%] Building C object CMakeFiles/globalsums.dir/do_sum_wdigittrunc.c.o
icc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[ 50%] Building CXX object CMakeFiles/globalsums.dir/kahan_fog_vector.cpp.o
icpc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[ 53%] Building CXX object CMakeFiles/globalsums.dir/kahan_fog_vector8.cpp.o
icpc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[ 56%] Building CXX object CMakeFiles/globalsums.dir/knuth_fog_vector.cpp.o
icpc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[ 59%] Building CXX object CMakeFiles/globalsums.dir/knuth_fog_vector8.cpp.o
icpc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[ 62%] Building C object CMakeFiles/globalsums.dir/kahan_intel_vector.c.o
icc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[ 65%] Building C object CMakeFiles/globalsums.dir/kahan_intel_vector8.c.o
icc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[ 68%] Building C object CMakeFiles/globalsums.dir/knuth_intel_vector.c.o
icc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[ 71%] Building C object CMakeFiles/globalsums.dir/knuth_intel_vector8.c.o
icc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[ 75%] Building C object CMakeFiles/globalsums.dir/kahan_gcc_vector.c.o
icc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[ 78%] Building C object CMakeFiles/globalsums.dir/kahan_gcc_vector8.c.o
icc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[ 81%] Building C object CMakeFiles/globalsums.dir/knuth_gcc_vector.c.o
icc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[ 84%] Building C object CMakeFiles/globalsums.dir/knuth_gcc_vector8.c.o
icc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[ 87%] Building C object CMakeFiles/globalsums.dir/do_full_qdsum.c.o
icc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[ 90%] Building C object CMakeFiles/globalsums.dir/do_full_qdsum_wtrunc.c.o
icc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[ 93%] Building C object CMakeFiles/globalsums.dir/do_qdsum.c.o
icc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[ 96%] Building C object CMakeFiles/globalsums.dir/do_qdsum_wtrunc.c.o
icc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[100%] Linking CXX executable globalsums
icpc: remark #10397: optimization reports are generated in *.optrpt files in the output location
[100%] Built target globalsums
--- max num openmp threads: 88
--- num openmp threads in parallel region: 88
SETTINGS INFO -- ncells 16 log 4 ndigits 3 ndigitsld 0 nbits 8 nbitsld 2
Initializing mesh with Leblanc problem, high values first
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Serial sum
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000002   Serial sum (OpenMP SIMD pragma)
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000005   Serial sum with digit truncation
  accurate sum 0.8000000007999972 sum 0.8000000007999972 diff          0 relative diff          0 runtime 0.000000   Serial sum with bit truncation
  accurate sum 0.8000000008      sum 0.8000000008      diff -1.626e-19 relative diff -2.033e-19 runtime 0.000000   Serial sum with long double accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Serial sum with long double accumulator with ndigit truncation
  accurate sum 0.8000000007999999 sum 0.8000000007999999 diff          0 relative diff          0 runtime 0.000000   Serial sum with long double accumulator with bit truncation
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double kahan sum accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 0.8000000008      sum 0.8000000007999999 diff  -1.11e-16 relative diff -1.388e-16 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 0.8000000008      sum 0.8000000007999999 diff  -1.11e-16 relative diff -1.388e-16 runtime 0.000000   8 wide Fog C++ vector class Kahan sum
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double knuth sum accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   8 wide GCC vector extensions Knuth sum
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   8 wide Fog C++ vector class Knuth sum
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000002   Pair-wise sum

  accurate sum 0.8000000008             sum 0.800000000800000044408  diff 4.4408921014152e-17  relative diff 5.5511151212179e-17  runtime 0.000001   Serial sum with quad double accumulator
  accurate sum 0.8000000008             sum 0.8000000008             diff -2.8888949165809e-34 relative diff -3.6111186421149e-34 runtime 0.000000   Serial sum with quad double accumulator and quad terms

  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000861   OpenMP sum
  accurate sum 0.8000000007999972 sum 0.8000000007999972 diff          0 relative diff          0 runtime 0.000662   OpenMP sum with bit truncation
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.001232   OpenMP sum with double double kahan sum accumulator
  accurate sum 0.8000000007999999 sum 0.8000000007999999 diff          0 relative diff          0 runtime 0.001622   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 32 log 5 ndigits 4 ndigitsld 1 nbits 9 nbitsld 3
Initializing mesh with Leblanc problem, high values first
  accurate sum 1.6000000016      sum 1.6000000016      diff  4.441e-16 relative diff  2.776e-16 runtime 0.000000   Serial sum
  accurate sum 1.6000000016      sum 1.6000000016      diff   2.22e-16 relative diff  1.388e-16 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Serial sum with digit truncation
  accurate sum 1.600000001599938 sum 1.600000001599938 diff          0 relative diff          0 runtime 0.000000   Serial sum with bit truncation
  accurate sum 1.6000000016      sum 1.6000000016      diff  5.421e-19 relative diff  3.388e-19 runtime 0.000000   Serial sum with long double accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Serial sum with long double accumulator with ndigit truncation
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Serial sum with long double accumulator with bit truncation
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double kahan sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff  -2.22e-16 relative diff -1.388e-16 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 1.6000000016      sum 1.6000000016      diff  -2.22e-16 relative diff -1.388e-16 runtime 0.000000   8 wide Fog C++ vector class Kahan sum
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double knuth sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   8 wide GCC vector extensions Knuth sum
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   8 wide Fog C++ vector class Knuth sum
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Pair-wise sum

  accurate sum 1.6000000016             sum 1.600000001600000088817  diff 8.8817842028304e-17  relative diff 5.5511151212179e-17  runtime 0.000001   Serial sum with quad double accumulator
  accurate sum 1.6000000016             sum 1.6000000016             diff 1.3481509610711e-33  relative diff 8.4259434982682e-34  runtime 0.000001   Serial sum with quad double accumulator and quad terms

  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000694   OpenMP sum
  accurate sum 1.600000001599994 sum 1.600000001599994 diff          0 relative diff          0 runtime 0.000823   OpenMP sum with bit truncation
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.001217   OpenMP sum with double double kahan sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.001330   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 64 log 6 ndigits 4 ndigitsld 1 nbits 9 nbitsld 3
Initializing mesh with Leblanc problem, high values first
  accurate sum 3.2000000032      sum 3.200000003200002 diff  1.776e-15 relative diff  5.551e-16 runtime 0.000000   Serial sum
  accurate sum 3.2000000032      sum 3.2000000032      diff  4.441e-16 relative diff  1.388e-16 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Serial sum with digit truncation
  accurate sum 3.200000003199875 sum 3.200000003199875 diff          0 relative diff          0 runtime 0.000000   Serial sum with bit truncation
  accurate sum 3.2000000032      sum 3.2000000032      diff  1.084e-18 relative diff  3.388e-19 runtime 0.000000   Serial sum with long double accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Serial sum with long double accumulator with ndigit truncation
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Serial sum with long double accumulator with bit truncation
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double kahan sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff -4.441e-16 relative diff -1.388e-16 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 3.2000000032      sum 3.2000000032      diff -4.441e-16 relative diff -1.388e-16 runtime 0.000000   8 wide Fog C++ vector class Kahan sum
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double knuth sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   8 wide GCC vector extensions Knuth sum
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   8 wide Fog C++ vector class Knuth sum
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Pair-wise sum

  accurate sum 3.2000000032             sum 3.200000003200000177635  diff 1.7763568405661e-16  relative diff 5.5511151212179e-17  runtime 0.000001   Serial sum with quad double accumulator
  accurate sum 3.2000000032             sum 3.2000000032             diff 3.466673899897e-33   relative diff 1.0833355926345e-33  runtime 0.000001   Serial sum with quad double accumulator and quad terms

  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000629   OpenMP sum
  accurate sum 3.200000003199989 sum 3.200000003199989 diff          0 relative diff          0 runtime 0.000709   OpenMP sum with bit truncation
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.001294   OpenMP sum with double double kahan sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.001573   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 128 log 7 ndigits 4 ndigitsld 1 nbits 11 nbitsld 4
Initializing mesh with Leblanc problem, high values first
  accurate sum 6.4000000064      sum 6.400000006399994 diff -6.217e-15 relative diff -9.714e-16 runtime 0.000000   Serial sum
  accurate sum 6.4000000064      sum 6.400000006400001 diff  8.882e-16 relative diff  1.388e-16 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   Serial sum with digit truncation
  accurate sum 6.400000006398841 sum 6.400000006398841 diff          0 relative diff          0 runtime 0.000000   Serial sum with bit truncation
  accurate sum 6.4000000064      sum 6.4000000064      diff  2.168e-18 relative diff  3.388e-19 runtime 0.000000   Serial sum with long double accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   Serial sum with long double accumulator with ndigit truncation
  accurate sum 6.400000006399992 sum 6.400000006399992 diff          0 relative diff          0 runtime 0.000000   Serial sum with long double accumulator with bit truncation
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double kahan sum accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 6.4000000064      sum 6.400000006399999 diff -8.882e-16 relative diff -1.388e-16 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 6.4000000064      sum 6.400000006399999 diff -8.882e-16 relative diff -1.388e-16 runtime 0.000000   8 wide Fog C++ vector class Kahan sum
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000001   Serial sum with double double knuth sum accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   8 wide GCC vector extensions Knuth sum
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   8 wide Fog C++ vector class Knuth sum
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   Pair-wise sum

  accurate sum 6.4000000064             sum 6.400000006400000355271  diff 3.5527136811322e-16  relative diff 5.5511151212179e-17  runtime 0.000002   Serial sum with quad double accumulator
  accurate sum 6.4000000064             sum 6.4000000064             diff -2.6192647243666e-32 relative diff -4.0926011277303e-33 runtime 0.000002   Serial sum with quad double accumulator and quad terms

  accurate sum 6.4000000064      sum 6.400000006400001 diff  8.882e-16 relative diff  1.388e-16 runtime 0.000953   OpenMP sum
  accurate sum 6.400000006399978 sum 6.400000006399978 diff          0 relative diff          0 runtime 0.000733   OpenMP sum with bit truncation
  accurate sum 6.4000000064      sum 6.400000006400001 diff  8.882e-16 relative diff  1.388e-16 runtime 0.001421   OpenMP sum with double double kahan sum accumulator
  accurate sum 6.400000006399999 sum 6.400000006399999 diff          0 relative diff          0 runtime 0.001501   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 256 log 8 ndigits 4 ndigitsld 1 nbits 12 nbitsld 4
Initializing mesh with Leblanc problem, high values first
  accurate sum 12.8000000128     sum 12.80000001279997 diff -2.842e-14 relative diff  -2.22e-15 runtime 0.000000   Serial sum
  accurate sum 12.8000000128     sum 12.8000000128     diff  1.776e-15 relative diff  1.388e-16 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000000   Serial sum with digit truncation
  accurate sum 12.80000001279404 sum 12.80000001279404 diff          0 relative diff          0 runtime 0.000000   Serial sum with bit truncation
  accurate sum 12.8000000128     sum 12.8000000128     diff -5.117e-17 relative diff -3.998e-18 runtime 0.000000   Serial sum with long double accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000000   Serial sum with long double accumulator with ndigit truncation
  accurate sum 12.80000001279998 sum 12.80000001279998 diff          0 relative diff          0 runtime 0.000000   Serial sum with long double accumulator with bit truncation
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000001   Serial sum with double double kahan sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000000   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000000   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff -1.776e-15 relative diff -1.388e-16 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 12.8000000128     sum 12.8000000128     diff -1.776e-15 relative diff -1.388e-16 runtime 0.000000   8 wide Fog C++ vector class Kahan sum
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000002   Serial sum with double double knuth sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000001   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000001   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000001   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000000   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000000   8 wide GCC vector extensions Knuth sum
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000000   8 wide Fog C++ vector class Knuth sum
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000000   Pair-wise sum

  accurate sum 12.8000000128            sum 12.80000001280000071054  diff 7.1054273622643e-16  relative diff 5.5511151212179e-17  runtime 0.000003   Serial sum with quad double accumulator
  accurate sum 12.8000000128            sum 12.8000000128            diff -6.6251990086921e-32 relative diff -5.1759367203648e-33 runtime 0.000003   Serial sum with quad double accumulator and quad terms

  accurate sum 12.8000000128     sum 12.8000000128     diff  1.776e-15 relative diff  1.388e-16 runtime 0.000600   OpenMP sum
  accurate sum 12.8000000127995  sum 12.8000000127995  diff          0 relative diff          0 runtime 0.000691   OpenMP sum with bit truncation
  accurate sum 12.8000000128     sum 12.8000000128     diff  1.776e-15 relative diff  1.388e-16 runtime 0.001576   OpenMP sum with double double kahan sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.001397   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 512 log 9 ndigits 4 ndigitsld 1 nbits 13 nbitsld 5
Initializing mesh with Leblanc problem, high values first
  accurate sum 25.6000000256     sum 25.60000002559964 diff -3.588e-13 relative diff -1.402e-14 runtime 0.000001   Serial sum
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000001   Serial sum with digit truncation
  accurate sum 25.60000002558809 sum 25.60000002558809 diff          0 relative diff          0 runtime 0.000001   Serial sum with bit truncation
  accurate sum 25.6000000256     sum 25.6000000256     diff -1.023e-16 relative diff -3.998e-18 runtime 0.000000   Serial sum with long double accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000001   Serial sum with long double accumulator with ndigit truncation
  accurate sum 25.60000002559991 sum 25.60000002559991 diff          0 relative diff          0 runtime 0.000001   Serial sum with long double accumulator with bit truncation
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000002   Serial sum with double double kahan sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000001   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000001   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000001   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff -3.553e-15 relative diff -1.388e-16 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 25.6000000256     sum 25.6000000256     diff -3.553e-15 relative diff -1.388e-16 runtime 0.000000   8 wide Fog C++ vector class Kahan sum
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000004   Serial sum with double double knuth sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000001   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000001   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000001   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000001   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000001   8 wide GCC vector extensions Knuth sum
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000001   8 wide Fog C++ vector class Knuth sum
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000000   Pair-wise sum

  accurate sum 25.6000000256            sum 25.60000002560000142108  diff 1.4210854724529e-15  relative diff 5.5511151212179e-17  runtime 0.000008   Serial sum with quad double accumulator
  accurate sum 25.6000000256            sum 25.6000000256            diff 3.9443045261051e-31  relative diff 1.540743953969e-32   runtime 0.000008   Serial sum with quad double accumulator and quad terms

  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000653   OpenMP sum
  accurate sum 25.600000025599   sum 25.600000025599   diff          0 relative diff          0 runtime 0.000652   OpenMP sum with bit truncation
  accurate sum 25.6000000256     sum 25.6000000256     diff  3.553e-15 relative diff  1.388e-16 runtime 0.001553   OpenMP sum with double double kahan sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.001374   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 1024 log 10 ndigits 5 ndigitsld 2 nbits 14 nbitsld 6
Initializing mesh with Leblanc problem, high values first
  accurate sum 51.2000000512     sum 51.20000005120137 diff  1.371e-12 relative diff  2.678e-14 runtime 0.000001   Serial sum
  accurate sum 51.2000000512     sum 51.20000005120001 diff  1.421e-14 relative diff  2.776e-16 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 51.200000051      sum 51.200000051      diff          0 relative diff          0 runtime 0.000001   Serial sum with digit truncation
  accurate sum 51.20000005117618 sum 51.20000005117618 diff          0 relative diff          0 runtime 0.000001   Serial sum with bit truncation
  accurate sum 51.2000000512     sum 51.20000005120001 diff  6.835e-16 relative diff  1.335e-17 runtime 0.000001   Serial sum with long double accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000001   Serial sum with long double accumulator with ndigit truncation
  accurate sum 51.20000005119982 sum 51.20000005119982 diff          0 relative diff          0 runtime 0.000001   Serial sum with long double accumulator with bit truncation
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000014   Serial sum with double double kahan sum accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000001   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000001   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000001   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 51.2000000512     sum 51.20000005119999 diff -7.105e-15 relative diff -1.388e-16 runtime 0.000001   8 wide GCC vector extensions Kahan sum
  accurate sum 51.2000000512     sum 51.20000005119999 diff -7.105e-15 relative diff -1.388e-16 runtime 0.000001   8 wide Fog C++ vector class Kahan sum
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000009   Serial sum with double double knuth sum accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000002   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000002   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000002   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000001   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000001   8 wide GCC vector extensions Knuth sum
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000001   8 wide Fog C++ vector class Knuth sum
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000003   Pair-wise sum

  accurate sum 51.2000000512            sum 51.20000005120000284217  diff 2.8421709449057e-15  relative diff 5.5511151212179e-17  runtime 0.000015   Serial sum with quad double accumulator
  accurate sum 51.2000000512            sum 51.2000000512            diff 1.0230539864585e-30  relative diff 1.9981523153036e-32  runtime 0.000016   Serial sum with quad double accumulator and quad terms

  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000769   OpenMP sum
  accurate sum 51.20000005119073 sum 51.20000005119073 diff          0 relative diff          0 runtime 0.000647   OpenMP sum with bit truncation
  accurate sum 51.2000000512     sum 51.20000005120001 diff  7.105e-15 relative diff  1.388e-16 runtime 0.001329   OpenMP sum with double double kahan sum accumulator
  accurate sum 51.20000005119999 sum 51.20000005119999 diff          0 relative diff          0 runtime 0.001431   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 2048 log 11 ndigits 5 ndigitsld 2 nbits 15 nbitsld 6
Initializing mesh with Leblanc problem, high values first
  accurate sum 102.4000001024    sum 102.4000001024003 diff  2.842e-13 relative diff  2.776e-15 runtime 0.000003   Serial sum
  accurate sum 102.4000001024    sum 102.4000001024    diff  4.263e-14 relative diff  4.163e-16 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 102.4000001       sum 102.4000001       diff          0 relative diff          0 runtime 0.000003   Serial sum with digit truncation
  accurate sum 102.4000001023524 sum 102.4000001023524 diff          0 relative diff          0 runtime 0.000003   Serial sum with bit truncation
  accurate sum 102.4000001024    sum 102.4000001024    diff  1.367e-15 relative diff  1.335e-17 runtime 0.000002   Serial sum with long double accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000012   Serial sum with long double accumulator with ndigit truncation
  accurate sum 102.4000001023996 sum 102.4000001023996 diff          0 relative diff          0 runtime 0.000002   Serial sum with long double accumulator with bit truncation
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000009   Serial sum with double double kahan sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000002   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000002   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000002   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff -1.421e-14 relative diff -1.388e-16 runtime 0.000001   8 wide GCC vector extensions Kahan sum
  accurate sum 102.4000001024    sum 102.4000001024    diff -1.421e-14 relative diff -1.388e-16 runtime 0.000001   8 wide Fog C++ vector class Kahan sum
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000017   Serial sum with double double knuth sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000004   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000004   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000004   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000002   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000002   8 wide GCC vector extensions Knuth sum
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000002   8 wide Fog C++ vector class Knuth sum
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000007   Pair-wise sum

  accurate sum 102.4000001024           sum 102.4000001024000056843  diff 5.6843418898115e-15  relative diff 5.5511151212179e-17  runtime 0.000030   Serial sum with quad double accumulator
  accurate sum 102.4000001024           sum 102.4000001024           diff -8.6281661508548e-32 relative diff -8.4259434982682e-34 runtime 0.000032   Serial sum with quad double accumulator and quad terms

  accurate sum 102.4000001024    sum 102.4000001024    diff  4.263e-14 relative diff  4.163e-16 runtime 0.000725   OpenMP sum
  accurate sum 102.4000001023524 sum 102.4000001023524 diff          0 relative diff          0 runtime 0.000668   OpenMP sum with bit truncation
  accurate sum 102.4000001024    sum 102.4000001024    diff  2.842e-14 relative diff  2.776e-16 runtime 0.001522   OpenMP sum with double double kahan sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.001322   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 4096 log 12 ndigits 5 ndigitsld 2 nbits 15 nbitsld 7
Initializing mesh with Leblanc problem, high values first
  accurate sum 204.8000002048    sum 204.8000002047672 diff  -3.28e-11 relative diff -1.601e-13 runtime 0.000005   Serial sum
  accurate sum 204.8000002048    sum 204.8000002047998 diff -2.274e-13 relative diff  -1.11e-15 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 204.8000002       sum 204.8000002       diff          0 relative diff          0 runtime 0.000005   Serial sum with digit truncation
  accurate sum 204.8000002047047 sum 204.8000002047047 diff          0 relative diff          0 runtime 0.000005   Serial sum with bit truncation
  accurate sum 204.8000002048    sum 204.8000002048    diff -1.148e-14 relative diff -5.604e-17 runtime 0.000014   Serial sum with long double accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000004   Serial sum with long double accumulator with ndigit truncation
  accurate sum 204.8000002047993 sum 204.8000002047993 diff          0 relative diff          0 runtime 0.000004   Serial sum with long double accumulator with bit truncation
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000017   Serial sum with double double kahan sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000004   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000004   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000004   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff -2.842e-14 relative diff -1.388e-16 runtime 0.000002   8 wide GCC vector extensions Kahan sum
  accurate sum 204.8000002048    sum 204.8000002048    diff -2.842e-14 relative diff -1.388e-16 runtime 0.000002   8 wide Fog C++ vector class Kahan sum
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000034   Serial sum with double double knuth sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000009   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000009   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000009   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000004   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000004   8 wide GCC vector extensions Knuth sum
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000004   8 wide Fog C++ vector class Knuth sum
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000013   Pair-wise sum

  accurate sum 204.8000002048           sum 204.8000002048000113686  diff 1.1368683779623e-14  relative diff 5.5511151212179e-17  runtime 0.000059   Serial sum with quad double accumulator
  accurate sum 204.8000002048           sum 204.8000002048           diff -2.9113897783313e-29 relative diff -1.4215770387793e-31 runtime 0.000060   Serial sum with quad double accumulator and quad terms

  accurate sum 204.8000002048    sum 204.8000002048    diff -2.842e-14 relative diff -1.388e-16 runtime 0.000812   OpenMP sum
  accurate sum 204.8000002047047 sum 204.8000002047047 diff          0 relative diff          0 runtime 0.000839   OpenMP sum with bit truncation
  accurate sum 204.8000002048    sum 204.8000002048    diff  2.842e-14 relative diff  1.388e-16 runtime 0.001421   OpenMP sum with double double kahan sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.001302   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 8192 log 13 ndigits 5 ndigitsld 2 nbits 17 nbitsld 7
Initializing mesh with Leblanc problem, high values first
  accurate sum 409.6000004096    sum 409.6000004095737 diff -2.626e-11 relative diff -6.412e-14 runtime 0.000010   Serial sum
  accurate sum 409.6000004096    sum 409.6000004095991 diff -8.527e-13 relative diff -2.082e-15 runtime 0.000001   Serial sum (OpenMP SIMD pragma)
  accurate sum 409.60000041      sum 409.60000041      diff          0 relative diff          0 runtime 0.000010   Serial sum with digit truncation
  accurate sum 409.6000004038215 sum 409.6000004038215 diff          0 relative diff          0 runtime 0.000022   Serial sum with bit truncation
  accurate sum 409.6000004096    sum 409.6000004096001 diff  3.389e-14 relative diff  8.274e-17 runtime 0.000008   Serial sum with long double accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000009   Serial sum with long double accumulator with ndigit truncation
  accurate sum 409.6000004095986 sum 409.6000004095986 diff          0 relative diff          0 runtime 0.000009   Serial sum with long double accumulator with bit truncation
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000034   Serial sum with double double kahan sum accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000009   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000009   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000009   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 409.6000004096    sum 409.6000004095999 diff -5.684e-14 relative diff -1.388e-16 runtime 0.000004   8 wide GCC vector extensions Kahan sum
  accurate sum 409.6000004096    sum 409.6000004095999 diff -5.684e-14 relative diff -1.388e-16 runtime 0.000004   8 wide Fog C++ vector class Kahan sum
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000068   Serial sum with double double knuth sum accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000017   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000017   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000017   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000009   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000009   8 wide GCC vector extensions Knuth sum
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000009   8 wide Fog C++ vector class Knuth sum
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000027   Pair-wise sum

  accurate sum 409.6000004096           sum 409.6000004096000227373  diff 2.2737367559246e-14  relative diff 5.5511151212179e-17  runtime 0.000118   Serial sum with quad double accumulator
  accurate sum 409.6000004096           sum 409.6000004096           diff 7.6864634452472e-29  relative diff 1.8765779876857e-31  runtime 0.000126   Serial sum with quad double accumulator and quad terms

  accurate sum 409.6000004096    sum 409.6000004095993 diff  -7.39e-13 relative diff -1.804e-15 runtime 0.000664   OpenMP sum
  accurate sum 409.6000004094094 sum 409.6000004094094 diff          0 relative diff          0 runtime 0.000750   OpenMP sum with bit truncation
  accurate sum 409.6000004096    sum 409.6000004096001 diff  5.684e-14 relative diff  1.388e-16 runtime 0.001441   OpenMP sum with double double kahan sum accumulator
  accurate sum 409.6000004095999 sum 409.6000004095999 diff          0 relative diff          0 runtime 0.001333   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 16384 log 14 ndigits 5 ndigitsld 2 nbits 18 nbitsld 8
Initializing mesh with Leblanc problem, high values first
  accurate sum 819.2000008192    sum 819.2000008196816 diff  4.816e-10 relative diff  5.879e-13 runtime 0.000020   Serial sum
  accurate sum 819.2000008192    sum 819.2000008191886 diff -1.137e-11 relative diff -1.388e-14 runtime 0.000001   Serial sum (OpenMP SIMD pragma)
  accurate sum 819.20000082      sum 819.20000082      diff          0 relative diff          0 runtime 0.000030   Serial sum with digit truncation
  accurate sum 819.2000007927418 sum 819.2000007927418 diff          0 relative diff          0 runtime 0.000023   Serial sum with bit truncation
  accurate sum 819.2000008192    sum 819.2000008192    diff -1.749e-14 relative diff -2.135e-17 runtime 0.000017   Serial sum with long double accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000017   Serial sum with long double accumulator with ndigit truncation
  accurate sum 819.2000008191972 sum 819.2000008191972 diff          0 relative diff          0 runtime 0.000017   Serial sum with long double accumulator with bit truncation
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000069   Serial sum with double double kahan sum accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000017   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000017   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000017   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 819.2000008192    sum 819.2000008191999 diff -1.137e-13 relative diff -1.388e-16 runtime 0.000009   8 wide GCC vector extensions Kahan sum
  accurate sum 819.2000008192    sum 819.2000008191999 diff -1.137e-13 relative diff -1.388e-16 runtime 0.000009   8 wide Fog C++ vector class Kahan sum
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000136   Serial sum with double double knuth sum accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000034   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000034   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000034   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000022   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000017   8 wide GCC vector extensions Knuth sum
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000017   8 wide Fog C++ vector class Knuth sum
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000044   Pair-wise sum

  accurate sum 819.2000008192           sum 819.2000008192000454747  diff 4.5474735118492e-14  relative diff 5.5511151212179e-17  runtime 0.000235   Serial sum with quad double accumulator
  accurate sum 819.2000008192           sum 819.2000008192           diff -1.9080573145033e-28 relative diff -2.3291715241641e-31 runtime 0.000245   Serial sum with quad double accumulator and quad terms

  accurate sum 819.2000008192    sum 819.2000008191998 diff -2.274e-13 relative diff -2.776e-16 runtime 0.000707   OpenMP sum
  accurate sum 819.2000008188188 sum 819.2000008188188 diff          0 relative diff          0 runtime 0.000771   OpenMP sum with bit truncation
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.001374   OpenMP sum with double double kahan sum accumulator
  accurate sum 819.2000008191999 sum 819.2000008191999 diff          0 relative diff          0 runtime 0.001379   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 32768 log 15 ndigits 6 ndigitsld 3 nbits 19 nbitsld 9
Initializing mesh with Leblanc problem, high values first
  accurate sum 1638.4000016384   sum 1638.400001638733 diff  3.331e-10 relative diff  2.033e-13 runtime 0.000040   Serial sum
  accurate sum 1638.4000016384   sum 1638.400001638443 diff  4.343e-11 relative diff  2.651e-14 runtime 0.000002   Serial sum (OpenMP SIMD pragma)
  accurate sum 1638.400002       sum 1638.400002       diff          0 relative diff          0 runtime 0.000053   Serial sum with digit truncation
  accurate sum 1638.400001525879 sum 1638.400001525879 diff          0 relative diff          0 runtime 0.000045   Serial sum with bit truncation
  accurate sum 1638.4000016384   sum 1638.4000016384   diff -1.771e-13 relative diff -1.081e-16 runtime 0.000034   Serial sum with long double accumulator
  accurate sum 1638.400001638    sum 1638.400001638    diff          0 relative diff          0 runtime 0.000034   Serial sum with long double accumulator with ndigit truncation
  accurate sum 1638.400001638336 sum 1638.400001638336 diff          0 relative diff          0 runtime 0.000034   Serial sum with long double accumulator with bit truncation
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000138   Serial sum with double double kahan sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000040   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000034   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000035   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff -2.274e-13 relative diff -1.388e-16 runtime 0.000017   8 wide GCC vector extensions Kahan sum
  accurate sum 1638.4000016384   sum 1638.4000016384   diff -2.274e-13 relative diff -1.388e-16 runtime 0.000017   8 wide Fog C++ vector class Kahan sum
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000266   Serial sum with double double knuth sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000061   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000058   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000058   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000044   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000030   8 wide GCC vector extensions Knuth sum
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000030   8 wide Fog C++ vector class Knuth sum
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000050   Pair-wise sum

  accurate sum 1638.4000016384          sum 1638.400001638400090949  diff 9.0949470236983e-14  relative diff 5.5511151212179e-17  runtime 0.000494   Serial sum with quad double accumulator
  accurate sum 1638.4000016384          sum 1638.4000016384          diff 6.8749227890011e-28  relative diff 4.1961198621376e-31  runtime 0.000452   Serial sum with quad double accumulator and quad terms

  accurate sum 1638.4000016384   sum 1638.400001638411 diff  1.137e-11 relative diff  6.939e-15 runtime 0.000692   OpenMP sum
  accurate sum 1638.400001630187 sum 1638.400001630187 diff          0 relative diff          0 runtime 0.000820   OpenMP sum with bit truncation
  accurate sum 1638.4000016384   sum 1638.4000016384   diff  2.274e-13 relative diff  1.388e-16 runtime 0.001338   OpenMP sum with double double kahan sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.001551   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 65536 log 16 ndigits 6 ndigitsld 3 nbits 20 nbitsld 9
Initializing mesh with Leblanc problem, high values first
  accurate sum 3276.8000032768   sum 3276.800003276371 diff -4.293e-10 relative diff  -1.31e-13 runtime 0.000079   Serial sum
  accurate sum 3276.8000032768   sum 3276.800003276809 diff  9.095e-12 relative diff  2.776e-15 runtime 0.000004   Serial sum (OpenMP SIMD pragma)
  accurate sum 3276.800003       sum 3276.800003       diff          0 relative diff          0 runtime 0.000102   Serial sum with digit truncation
  accurate sum 3276.800003051758 sum 3276.800003051758 diff          0 relative diff          0 runtime 0.000090   Serial sum with bit truncation
  accurate sum 3276.8000032768   sum 3276.800003276801 diff   8.68e-13 relative diff  2.649e-16 runtime 0.000068   Serial sum with long double accumulator
  accurate sum 3276.800003277    sum 3276.800003277    diff          0 relative diff          0 runtime 0.000068   Serial sum with long double accumulator with ndigit truncation
  accurate sum 3276.800003276672 sum 3276.800003276672 diff          0 relative diff          0 runtime 0.000068   Serial sum with long double accumulator with bit truncation
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000283   Serial sum with double double kahan sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000063   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000058   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000059   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff -4.547e-13 relative diff -1.388e-16 runtime 0.000045   8 wide GCC vector extensions Kahan sum
  accurate sum 3276.8000032768   sum 3276.8000032768   diff -4.547e-13 relative diff -1.388e-16 runtime 0.000031   8 wide Fog C++ vector class Kahan sum
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000484   Serial sum with double double knuth sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000120   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000119   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000120   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000060   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000060   8 wide GCC vector extensions Knuth sum
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000060   8 wide Fog C++ vector class Knuth sum
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000110   Pair-wise sum

  accurate sum 3276.8000032768          sum 3276.800003276800181898  diff 1.8189894047397e-13  relative diff 5.5511151212179e-17  runtime 0.000923   Serial sum with quad double accumulator
  accurate sum 3276.8000032768          sum 3276.8000032768          diff -6.037546938109e-27  relative diff -1.8425131018285e-30 runtime 0.000844   Serial sum with quad double accumulator and quad terms

  accurate sum 3276.8000032768   sum 3276.800003276802 diff  1.819e-12 relative diff  5.551e-16 runtime 0.000668   OpenMP sum
  accurate sum 3276.800003260374 sum 3276.800003260374 diff          0 relative diff          0 runtime 0.000876   OpenMP sum with bit truncation
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.001486   OpenMP sum with double double kahan sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.001472   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 131072 log 17 ndigits 6 ndigitsld 3 nbits 21 nbitsld 10
Initializing mesh with Leblanc problem, high values first
  accurate sum 6553.6000065536   sum 6553.600006562821 diff  9.221e-09 relative diff  1.407e-12 runtime 0.000159   Serial sum
  accurate sum 6553.6000065536   sum 6553.600006552551 diff -1.049e-09 relative diff   -1.6e-13 runtime 0.000031   Serial sum (OpenMP SIMD pragma)
  accurate sum 6553.600007       sum 6553.600007       diff          0 relative diff          0 runtime 0.000181   Serial sum with digit truncation
  accurate sum 6553.600006103516 sum 6553.600006103516 diff          0 relative diff          0 runtime 0.000187   Serial sum with bit truncation
  accurate sum 6553.6000065536   sum 6553.600006553605 diff  3.868e-12 relative diff  5.901e-16 runtime 0.000136   Serial sum with long double accumulator
  accurate sum 6553.600006554    sum 6553.600006554    diff          0 relative diff          0 runtime 0.000136   Serial sum with long double accumulator with ndigit truncation
  accurate sum 6553.600006553344 sum 6553.600006553344 diff          0 relative diff          0 runtime 0.000128   Serial sum with long double accumulator with bit truncation
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000497   Serial sum with double double kahan sum accumulator
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000122   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000121   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000122   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 6553.6000065536   sum 6553.600006553599 diff -9.095e-13 relative diff -1.388e-16 runtime 0.000060   8 wide GCC vector extensions Kahan sum
  accurate sum 6553.6000065536   sum 6553.600006553599 diff -9.095e-13 relative diff -1.388e-16 runtime 0.000061   8 wide Fog C++ vector class Kahan sum
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000962   Serial sum with double double knuth sum accumulator
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000247   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000231   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000237   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000134   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000119   8 wide GCC vector extensions Knuth sum
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000120   8 wide Fog C++ vector class Knuth sum
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000235   Pair-wise sum

  accurate sum 6553.6000065536          sum 6553.600006553600363797  diff 3.6379788094793e-13  relative diff 5.5511151212179e-17  runtime 0.001732   Serial sum with quad double accumulator
  accurate sum 6553.6000065536          sum 6553.6000065536          diff 2.2517245678629e-26  relative diff 3.435859017351e-30   runtime 0.001769   Serial sum with quad double accumulator and quad terms

  accurate sum 6553.6000065536   sum 6553.600006553416 diff -1.837e-10 relative diff -2.803e-14 runtime 0.000761   OpenMP sum
  accurate sum 6553.600006461143 sum 6553.600006461143 diff          0 relative diff          0 runtime 0.000873   OpenMP sum with bit truncation
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.001445   OpenMP sum with double double kahan sum accumulator
  accurate sum 6553.600006553599 sum 6553.600006553599 diff          0 relative diff          0 runtime 0.001228   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 262144 log 18 ndigits 6 ndigitsld 3 nbits 22 nbitsld 10
Initializing mesh with Leblanc problem, high values first
  accurate sum 13107.2000131072  sum 13107.20001314317 diff  3.597e-08 relative diff  2.745e-12 runtime 0.000318   Serial sum
  accurate sum 13107.2000131072  sum 13107.20001310636 diff -8.386e-10 relative diff -6.398e-14 runtime 0.000081   Serial sum (OpenMP SIMD pragma)
  accurate sum 13107.20001       sum 13107.20001       diff          0 relative diff          0 runtime 0.000318   Serial sum with digit truncation
  accurate sum 13107.20001220703 sum 13107.20001220703 diff          0 relative diff          0 runtime 0.000318   Serial sum with bit truncation
  accurate sum 13107.2000131072  sum 13107.20001310719 diff -1.196e-11 relative diff -9.126e-16 runtime 0.000238   Serial sum with long double accumulator
  accurate sum 13107.20001311    sum 13107.20001311    diff          0 relative diff          0 runtime 0.000246   Serial sum with long double accumulator with ndigit truncation
  accurate sum 13107.20001310669 sum 13107.20001310669 diff          0 relative diff          0 runtime 0.000239   Serial sum with long double accumulator with bit truncation
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000978   Serial sum with double double kahan sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000244   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000244   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000243   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff -1.819e-12 relative diff -1.388e-16 runtime 0.000135   8 wide GCC vector extensions Kahan sum
  accurate sum 13107.2000131072  sum 13107.2000131072  diff -1.819e-12 relative diff -1.388e-16 runtime 0.000122   8 wide Fog C++ vector class Kahan sum
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.001916   Serial sum with double double knuth sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000468   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000471   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000465   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000259   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000238   8 wide GCC vector extensions Knuth sum
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000240   8 wide Fog C++ vector class Knuth sum
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000505   Pair-wise sum

  accurate sum 13107.2000131072         sum 13107.20001310720072759  diff 7.2759576189587e-13  relative diff 5.5511151212179e-17  runtime 0.003363   Serial sum with quad double accumulator
  accurate sum 13107.2000131072         sum 13107.2000131072         diff 6.0240574166297e-26  relative diff 4.5959910664411e-30  runtime 0.003540   Serial sum with quad double accumulator and quad terms

  accurate sum 13107.2000131072  sum 13107.20001310717 diff -3.456e-11 relative diff -2.637e-15 runtime 0.000560   OpenMP sum
  accurate sum 13107.20001268387 sum 13107.20001268387 diff          0 relative diff          0 runtime 0.000537   OpenMP sum with bit truncation
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.001034   OpenMP sum with double double kahan sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.001092   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 524288 log 19 ndigits 6 ndigitsld 3 nbits 23 nbitsld 11
Initializing mesh with Leblanc problem, high values first
  accurate sum 26214.4000262144  sum 26214.40002564823 diff -5.662e-07 relative diff  -2.16e-11 runtime 0.000644   Serial sum
  accurate sum 26214.4000262144  sum 26214.40002622981 diff  1.541e-08 relative diff  5.879e-13 runtime 0.000170   Serial sum (OpenMP SIMD pragma)
  accurate sum 26214.40003       sum 26214.40003       diff          0 relative diff          0 runtime 0.000714   Serial sum with digit truncation
  accurate sum 26214.40002441406 sum 26214.40002441406 diff          0 relative diff          0 runtime 0.000617   Serial sum with bit truncation
  accurate sum 26214.4000262144  sum 26214.40002621434 diff -5.817e-11 relative diff -2.219e-15 runtime 0.000492   Serial sum with long double accumulator
  accurate sum 26214.40002621    sum 26214.40002621    diff          0 relative diff          0 runtime 0.000478   Serial sum with long double accumulator with ndigit truncation
  accurate sum 26214.40002620965 sum 26214.40002620965 diff          0 relative diff          0 runtime 0.000492   Serial sum with long double accumulator with bit truncation
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.001936   Serial sum with double double kahan sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.000478   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.000474   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.000473   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff -3.638e-12 relative diff -1.388e-16 runtime 0.000263   8 wide GCC vector extensions Kahan sum
  accurate sum 26214.4000262144  sum 26214.4000262144  diff -3.638e-12 relative diff -1.388e-16 runtime 0.000243   8 wide Fog C++ vector class Kahan sum
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.003790   Serial sum with double double knuth sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.000938   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.000931   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.000929   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.000499   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.000477   8 wide GCC vector extensions Knuth sum
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.000486   8 wide Fog C++ vector class Knuth sum
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.001323   Pair-wise sum

  accurate sum 26214.4000262144         sum 26214.40002621440145519  diff 1.4551915237917e-12  relative diff 5.5511151212179e-17  runtime 0.006632   Serial sum with quad double accumulator
  accurate sum 26214.4000262144         sum 26214.4000262144         diff -4.3299943998857e-25 relative diff -1.6517617780898e-29 runtime 0.006649   Serial sum with quad double accumulator and quad terms

  accurate sum 26214.4000262144  sum 26214.40002621734 diff  2.943e-09 relative diff  1.123e-13 runtime 0.000522   OpenMP sum
  accurate sum 26214.40002441406 sum 26214.40002441406 diff          0 relative diff          0 runtime 0.000632   OpenMP sum with bit truncation
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.001248   OpenMP sum with double double kahan sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.001172   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 1048576 log 20 ndigits 7 ndigitsld 4 nbits 24 nbitsld 12
Initializing mesh with Leblanc problem, high values first
  accurate sum 52428.8000524288  sum 52428.80005292332 diff  4.945e-07 relative diff  9.432e-12 runtime 0.001297   Serial sum
  accurate sum 52428.8000524288  sum 52428.80005243946 diff  1.066e-08 relative diff  2.033e-13 runtime 0.000351   Serial sum (OpenMP SIMD pragma)
  accurate sum 52428.8001        sum 52428.8001        diff          0 relative diff          0 runtime 0.001349   Serial sum with digit truncation
  accurate sum 52428.80004882812 sum 52428.80004882812 diff          0 relative diff          0 runtime 0.001240   Serial sum with bit truncation
  accurate sum 52428.8000524288  sum 52428.80005242807 diff -7.327e-10 relative diff -1.397e-14 runtime 0.000972   Serial sum with long double accumulator
  accurate sum 52428.8000524     sum 52428.8000524     diff          0 relative diff          0 runtime 0.001078   Serial sum with long double accumulator with ndigit truncation
  accurate sum 52428.8000524044  sum 52428.8000524044  diff          0 relative diff          0 runtime 0.000934   Serial sum with long double accumulator with bit truncation
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.003822   Serial sum with double double kahan sum accumulator
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.000960   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.000941   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.000954   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 52428.8000524288  sum 52428.80005242879 diff -7.276e-12 relative diff -1.388e-16 runtime 0.000496   8 wide GCC vector extensions Kahan sum
  accurate sum 52428.8000524288  sum 52428.80005242879 diff -7.276e-12 relative diff -1.388e-16 runtime 0.000496   8 wide Fog C++ vector class Kahan sum
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.007520   Serial sum with double double knuth sum accumulator
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.001872   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.001863   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.001871   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.001078   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.001059   8 wide GCC vector extensions Knuth sum
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.001063   8 wide Fog C++ vector class Knuth sum
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.002039   Pair-wise sum

  accurate sum 52428.8000524288         sum 52428.80005242880291038  diff 2.9103830475835e-12  relative diff 5.5511151212179e-17  runtime 0.013283   Serial sum with quad double accumulator
  accurate sum 52428.8000524288         sum 52428.8000524288         diff 5.4507764195875e-25  relative diff 1.039653094127e-29   runtime 0.013823   Serial sum with quad double accumulator and quad terms

  accurate sum 52428.8000524288  sum 52428.80005242932 diff  5.166e-10 relative diff  9.853e-15 runtime 0.000486   OpenMP sum
  accurate sum 52428.80004882812 sum 52428.80004882812 diff          0 relative diff          0 runtime 0.000453   OpenMP sum with bit truncation
  accurate sum 52428.8000524288  sum 52428.80005242881 diff  7.276e-12 relative diff  1.388e-16 runtime 0.001080   OpenMP sum with double double kahan sum accumulator
  accurate sum 52428.80005242879 sum 52428.80005242879 diff          0 relative diff          0 runtime 0.001092   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 2097152 log 21 ndigits 7 ndigitsld 4 nbits 25 nbitsld 12
Initializing mesh with Leblanc problem, high values first
  accurate sum 104857.6001048576 sum 104857.6001084272 diff   3.57e-06 relative diff  3.404e-11 runtime 0.002676   Serial sum
  accurate sum 104857.6001048576 sum 104857.6001048439 diff -1.372e-08 relative diff -1.309e-13 runtime 0.000809   Serial sum (OpenMP SIMD pragma)
  accurate sum 104857.6          sum 104857.6          diff          0 relative diff          0 runtime 0.002684   Serial sum with digit truncation
  accurate sum 104857.6000976562 sum 104857.6000976562 diff          0 relative diff          0 runtime 0.002493   Serial sum with bit truncation
  accurate sum 104857.6001048576 sum 104857.6001048604 diff  2.808e-09 relative diff  2.678e-14 runtime 0.001974   Serial sum with long double accumulator
  accurate sum 104857.600105     sum 104857.600105     diff          0 relative diff          0 runtime 0.001879   Serial sum with long double accumulator with ndigit truncation
  accurate sum 104857.6001048088 sum 104857.6001048088 diff          0 relative diff          0 runtime 0.001878   Serial sum with long double accumulator with bit truncation
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.007683   Serial sum with double double kahan sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.001909   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.001893   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.001921   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff -1.455e-11 relative diff -1.388e-16 runtime 0.001103   8 wide GCC vector extensions Kahan sum
  accurate sum 104857.6001048576 sum 104857.6001048576 diff -1.455e-11 relative diff -1.388e-16 runtime 0.001099   8 wide Fog C++ vector class Kahan sum
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.015104   Serial sum with double double knuth sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.003750   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.003723   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.003743   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.002152   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.002126   8 wide GCC vector extensions Knuth sum
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.002137   8 wide Fog C++ vector class Knuth sum
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.003621   Pair-wise sum

  accurate sum 104857.6001048576        sum 104857.6001048576058207  diff 5.8207660951669e-12  relative diff 5.5511151212179e-17  runtime 0.026400   Serial sum with quad double accumulator
  accurate sum 104857.6001048576        sum 104857.6001048576        diff -3.2890451037923e-24 relative diff -3.1366778378517e-29 runtime 0.026582   Serial sum with quad double accumulator and quad terms

  accurate sum 104857.6001048576 sum 104857.6001048104 diff -4.718e-08 relative diff -4.499e-13 runtime 0.000439   OpenMP sum
  accurate sum 104857.6000976562 sum 104857.6000976562 diff          0 relative diff          0 runtime 0.000437   OpenMP sum with bit truncation
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.001247   OpenMP sum with double double kahan sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.001138   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 4194304 log 22 ndigits 7 ndigitsld 4 nbits 26 nbitsld 13
Initializing mesh with Leblanc problem, high values first
  accurate sum 209715.2002097152 sum 209715.2001908246 diff -1.889e-05 relative diff -9.008e-11 runtime 0.005223   Serial sum
  accurate sum 209715.2002097152 sum 209715.2002100103 diff  2.951e-07 relative diff  1.407e-12 runtime 0.001584   Serial sum (OpenMP SIMD pragma)
  accurate sum 209715.2          sum 209715.2          diff          0 relative diff          0 runtime 0.005279   Serial sum with digit truncation
  accurate sum 209715.19921875   sum 209715.19921875   diff          0 relative diff          0 runtime 0.005115   Serial sum with bit truncation
  accurate sum 209715.2002097152 sum 209715.2002097158 diff  5.755e-10 relative diff  2.744e-15 runtime 0.004032   Serial sum with long double accumulator
  accurate sum 209715.20021      sum 209715.20021      diff          0 relative diff          0 runtime 0.003927   Serial sum with long double accumulator with ndigit truncation
  accurate sum 209715.2002096176 sum 209715.2002096176 diff          0 relative diff          0 runtime 0.004147   Serial sum with long double accumulator with bit truncation
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.015212   Serial sum with double double kahan sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.004005   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.003965   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.004003   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff  -2.91e-11 relative diff -1.388e-16 runtime 0.002458   8 wide GCC vector extensions Kahan sum
  accurate sum 209715.2002097152 sum 209715.2002097152 diff  -2.91e-11 relative diff -1.388e-16 runtime 0.002461   8 wide Fog C++ vector class Kahan sum
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.029980   Serial sum with double double knuth sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.007552   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.007521   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.007553   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.004439   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.004384   8 wide GCC vector extensions Knuth sum
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.004414   8 wide Fog C++ vector class Knuth sum
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.006841   Pair-wise sum

  accurate sum 209715.2002097152        sum 209715.2002097152116415  diff 1.1641532190334e-11  relative diff 5.5511151212179e-17  runtime 0.052743   Serial sum with quad double accumulator
  accurate sum 209715.2002097152        sum 209715.2002097152        diff 2.3784295131933e-23  relative diff 1.1341235689234e-28  runtime 0.051558   Serial sum with quad double accumulator and quad terms

  accurate sum 209715.2002097152 sum 209715.2002097068 diff  -8.44e-09 relative diff -4.025e-14 runtime 0.000432   OpenMP sum
  accurate sum 209715.2001953125 sum 209715.2001953125 diff          0 relative diff          0 runtime 0.000343   OpenMP sum with bit truncation
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.000858   OpenMP sum with double double kahan sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.000860   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 8388608 log 23 ndigits 7 ndigitsld 4 nbits 27 nbitsld 13
Initializing mesh with Leblanc problem, high values first
  accurate sum 419430.4004194304 sum 419430.400462431  diff    4.3e-05 relative diff  1.025e-10 runtime 0.012184   Serial sum
  accurate sum 419430.4004194304 sum 419430.4004205816 diff  1.151e-06 relative diff  2.745e-12 runtime 0.004442   Serial sum (OpenMP SIMD pragma)
  accurate sum 419430.4          sum 419430.4          diff          0 relative diff          0 runtime 0.012199   Serial sum with digit truncation
  accurate sum 419430.3984375    sum 419430.3984375    diff          0 relative diff          0 runtime 0.011997   Serial sum with bit truncation
  accurate sum 419430.4004194304 sum 419430.4004193632 diff -6.722e-08 relative diff -1.603e-13 runtime 0.009600   Serial sum with long double accumulator
  accurate sum 419430.400419     sum 419430.400419     diff          0 relative diff          0 runtime 0.009461   Serial sum with long double accumulator with ndigit truncation
  accurate sum 419430.4004192352 sum 419430.4004192352 diff          0 relative diff          0 runtime 0.009533   Serial sum with long double accumulator with bit truncation
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.035656   Serial sum with double double kahan sum accumulator
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.009676   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.009658   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.009717   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 419430.4004194304 sum 419430.4004194303 diff -5.821e-11 relative diff -1.388e-16 runtime 0.006005   8 wide GCC vector extensions Kahan sum
  accurate sum 419430.4004194304 sum 419430.4004194303 diff -5.821e-11 relative diff -1.388e-16 runtime 0.006116   8 wide Fog C++ vector class Kahan sum
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.063951   Serial sum with double double knuth sum accumulator
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.014138   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.014099   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.014126   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.007987   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.007923   8 wide GCC vector extensions Knuth sum
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.007964   8 wide Fog C++ vector class Knuth sum
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.017696   Pair-wise sum

  accurate sum 419430.4004194304        sum 419430.4004194304232830  diff 2.3283064380668e-11  relative diff 5.5511151212179e-17  runtime 0.096753   Serial sum with quad double accumulator
  accurate sum 419430.4004194304        sum 419430.4004194304        diff 1.1756526599141e-23  relative diff 2.8029743641339e-29  runtime 0.101863   Serial sum with quad double accumulator and quad terms

  accurate sum 419430.4004194304 sum 419430.4004201848 diff  7.544e-07 relative diff  1.799e-12 runtime 0.001142   OpenMP sum
  accurate sum 419430.400390625  sum 419430.400390625  diff          0 relative diff          0 runtime 0.000857   OpenMP sum with bit truncation
  accurate sum 419430.4004194304 sum 419430.4004194303 diff -5.821e-11 relative diff -1.388e-16 runtime 0.002041   OpenMP sum with double double kahan sum accumulator
  accurate sum 419430.4004194303 sum 419430.4004194303 diff          0 relative diff          0 runtime 0.001827   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 16777216 log 24 ndigits 7 ndigitsld 4 nbits 27 nbitsld 14
Initializing mesh with Leblanc problem, high values first
  accurate sum 838860.8008388608 sum 838860.800853056  diff   1.42e-05 relative diff  1.692e-11 runtime 0.024975   Serial sum
  accurate sum 838860.8008388608 sum 838860.8008207433 diff -1.812e-05 relative diff  -2.16e-11 runtime 0.009839   Serial sum (OpenMP SIMD pragma)
  accurate sum 838860.801        sum 838860.801        diff          0 relative diff          0 runtime 0.025085   Serial sum with digit truncation
  accurate sum 838860.796875     sum 838860.796875     diff          0 relative diff          0 runtime 0.024906   Serial sum with bit truncation
  accurate sum 838860.8008388608 sum 838860.800838807  diff  -5.38e-08 relative diff -6.413e-14 runtime 0.019227   Serial sum with long double accumulator
  accurate sum 838860.800839     sum 838860.800839     diff          0 relative diff          0 runtime 0.018606   Serial sum with long double accumulator with ndigit truncation
  accurate sum 838860.8008384705 sum 838860.8008384705 diff          0 relative diff          0 runtime 0.018703   Serial sum with long double accumulator with bit truncation
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.067707   Serial sum with double double kahan sum accumulator
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.018436   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.018381   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.018470   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 838860.8008388608 sum 838860.8008388607 diff -1.164e-10 relative diff -1.388e-16 runtime 0.010847   8 wide GCC vector extensions Kahan sum
  accurate sum 838860.8008388608 sum 838860.8008388607 diff -1.164e-10 relative diff -1.388e-16 runtime 0.010860   8 wide Fog C++ vector class Kahan sum
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.131180   Serial sum with double double knuth sum accumulator
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.033505   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.033409   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.033490   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.020874   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.020936   8 wide GCC vector extensions Knuth sum
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.020833   8 wide Fog C++ vector class Knuth sum
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.038846   Pair-wise sum

  accurate sum 838860.8008388608        sum 838860.8008388608465661  diff 4.6566128761335e-11  relative diff 5.5511151212179e-17  runtime 0.231536   Serial sum with quad double accumulator
  accurate sum 838860.8008388608        sum 838860.8008388608        diff -3.8768739581042e-23 relative diff -4.6215938976137e-29 runtime 0.240491   Serial sum with quad double accumulator and quad terms

  accurate sum 838860.8008388608 sum 838860.8008389954 diff  1.346e-07 relative diff  1.604e-13 runtime 0.001674   OpenMP sum
  accurate sum 838860.80078125   sum 838860.80078125   diff          0 relative diff          0 runtime 0.001203   OpenMP sum with bit truncation
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.002366   OpenMP sum with double double kahan sum accumulator
  accurate sum 838860.8008388607 sum 838860.8008388607 diff          0 relative diff          0 runtime 0.002211   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 33554432 log 25 ndigits 8 ndigitsld 5 nbits 29 nbitsld 15
Initializing mesh with Leblanc problem, high values first
  accurate sum 1677721.601677722 sum 1677721.600413603 diff  -0.001264 relative diff -7.535e-10 runtime 0.053815   Serial sum
  accurate sum 1677721.601677722 sum 1677721.601693546 diff  1.582e-05 relative diff  9.432e-12 runtime 0.020625   Serial sum (OpenMP SIMD pragma)
  accurate sum 1677721.6         sum 1677721.6         diff          0 relative diff          0 runtime 0.050231   Serial sum with digit truncation
  accurate sum 1677721.5         sum 1677721.5         diff          0 relative diff          0 runtime 0.049940   Serial sum with bit truncation
  accurate sum 1677721.601677722 sum 1677721.601678708 diff  9.863e-07 relative diff  5.879e-13 runtime 0.040995   Serial sum with long double accumulator
  accurate sum 1677721.6017      sum 1677721.6017      diff          0 relative diff          0 runtime 0.040901   Serial sum with long double accumulator with ndigit truncation
  accurate sum 1677721.601676941 sum 1677721.601676941 diff          0 relative diff          0 runtime 0.040888   Serial sum with long double accumulator with bit truncation
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.146855   Serial sum with double double kahan sum accumulator
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.041679   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.041666   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.041759   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 1677721.601677722 sum 1677721.601677721 diff -2.328e-10 relative diff -1.388e-16 runtime 0.024866   8 wide GCC vector extensions Kahan sum
  accurate sum 1677721.601677722 sum 1677721.601677721 diff -2.328e-10 relative diff -1.388e-16 runtime 0.025436   8 wide Fog C++ vector class Kahan sum
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.289772   Serial sum with double double knuth sum accumulator
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.074438   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.073475   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.074439   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.045902   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.045198   8 wide GCC vector extensions Knuth sum
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.045887   8 wide Fog C++ vector class Knuth sum
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.080314   Pair-wise sum

  accurate sum 1677721.6016777216       sum 1677721.601677721693132  diff 9.3132257522671e-11  relative diff 5.5511151212179e-17  runtime 0.500966   Serial sum with quad double accumulator
  accurate sum 1677721.6016777216       sum 1677721.6016777216       diff 4.9545533752512e-22  relative diff 2.9531439365725e-28  runtime 0.519629   Serial sum with quad double accumulator and quad terms

  accurate sum 1677721.601677722 sum 1677721.601665649 diff -1.207e-05 relative diff -7.196e-12 runtime 0.004923   OpenMP sum
  accurate sum 1677721.6015625   sum 1677721.6015625   diff          0 relative diff          0 runtime 0.003541   OpenMP sum with bit truncation
  accurate sum 1677721.601677722 sum 1677721.601677721 diff -2.328e-10 relative diff -1.388e-16 runtime 0.005883   OpenMP sum with double double kahan sum accumulator
  accurate sum 1677721.601677721 sum 1677721.601677721 diff          0 relative diff          0 runtime 0.006000   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 67108864 log 26 ndigits 8 ndigitsld 5 nbits 30 nbitsld 15
Initializing mesh with Leblanc problem, high values first
  accurate sum 3355443.203355443 sum 3355443.201976103 diff  -0.001379 relative diff -4.111e-10 runtime 0.099990   Serial sum
  accurate sum 3355443.203355443 sum 3355443.203469669 diff  0.0001142 relative diff  3.404e-11 runtime 0.042084   Serial sum (OpenMP SIMD pragma)
  accurate sum 3355443.2         sum 3355443.2         diff          0 relative diff          0 runtime 0.097112   Serial sum with digit truncation
  accurate sum 3355443           sum 3355443           diff          0 relative diff          0 runtime 0.096895   Serial sum with bit truncation
  accurate sum 3355443.203355443 sum 3355443.203356126 diff  6.824e-07 relative diff  2.034e-13 runtime 0.079141   Serial sum with long double accumulator
  accurate sum 3355443.2034      sum 3355443.2034      diff          0 relative diff          0 runtime 0.079025   Serial sum with long double accumulator with ndigit truncation
  accurate sum 3355443.203353882 sum 3355443.203353882 diff          0 relative diff          0 runtime 0.079019   Serial sum with long double accumulator with bit truncation
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.283686   Serial sum with double double kahan sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.079858   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.079860   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.079954   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff -4.657e-10 relative diff -1.388e-16 runtime 0.050098   8 wide GCC vector extensions Kahan sum
  accurate sum 3355443.203355443 sum 3355443.203355443 diff -4.657e-10 relative diff -1.388e-16 runtime 0.051202   8 wide Fog C++ vector class Kahan sum
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.559550   Serial sum with double double knuth sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.142846   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.142855   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.143136   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.091788   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.090277   8 wide GCC vector extensions Knuth sum
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.091804   8 wide Fog C++ vector class Knuth sum
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.163002   Pair-wise sum

  accurate sum 3355443.2033554432       sum 3355443.203355443386264  diff 1.8626451504534e-10  relative diff 5.5511151212179e-17  runtime 0.980040   Serial sum with quad double accumulator
  accurate sum 3355443.2033554432       sum 3355443.2033554432       diff 1.987420167313e-21   relative diff 5.9229736486839e-28  runtime 1.049532   Serial sum with quad double accumulator and quad terms

  accurate sum 3355443.203355443 sum 3355443.203353289 diff -2.155e-06 relative diff -6.421e-13 runtime 0.012454   OpenMP sum
  accurate sum 3355443.1875      sum 3355443.1875      diff          0 relative diff          0 runtime 0.005108   OpenMP sum with bit truncation
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.010818   OpenMP sum with double double kahan sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.010799   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 134217728 log 27 ndigits 8 ndigitsld 5 nbits 31 nbitsld 16
Initializing mesh with Leblanc problem, high values first
  accurate sum 6710886.406710886 sum 6710886.393382353 diff   -0.01333 relative diff -1.986e-09 runtime 0.170407   Serial sum
  accurate sum 6710886.406710886 sum 6710886.406106388 diff -0.0006045 relative diff -9.008e-11 runtime 0.080351   Serial sum (OpenMP SIMD pragma)
  accurate sum 6710886.4         sum 6710886.4         diff          0 relative diff          0 runtime 0.170399   Serial sum with digit truncation
  accurate sum 6710886           sum 6710886           diff          0 relative diff          0 runtime 0.170349   Serial sum with bit truncation
  accurate sum 6710886.406710886 sum 6710886.406710007 diff -8.792e-07 relative diff  -1.31e-13 runtime 0.134448   Serial sum with long double accumulator
  accurate sum 6710886.4067      sum 6710886.4067      diff          0 relative diff          0 runtime 0.134397   Serial sum with long double accumulator with ndigit truncation
  accurate sum 6710886.406677246 sum 6710886.406677246 diff          0 relative diff          0 runtime 0.134419   Serial sum with long double accumulator with bit truncation
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.470870   Serial sum with double double kahan sum accumulator
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.138378   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.137019   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.137634   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 6710886.406710886 sum 6710886.406710885 diff -9.313e-10 relative diff -1.388e-16 runtime 0.085315   8 wide GCC vector extensions Kahan sum
  accurate sum 6710886.406710886 sum 6710886.406710885 diff -9.313e-10 relative diff -1.388e-16 runtime 0.085394   8 wide Fog C++ vector class Kahan sum
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.920372   Serial sum with double double knuth sum accumulator
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.228461   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.228326   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.228614   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.133186   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.129270   8 wide GCC vector extensions Knuth sum
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.132969   8 wide Fog C++ vector class Knuth sum
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.303144   Pair-wise sum

  accurate sum 6710886.4067108864       sum 6710886.406710886772529  diff 3.7252903009068e-10  relative diff 5.5511151212179e-17  runtime 1.528602   Serial sum with quad double accumulator
  accurate sum 6710886.4067108864       sum 6710886.4067108864       diff -3.22980998523e-20   relative diff -4.8127919167284e-27 runtime 1.560878   Serial sum with quad double accumulator and quad terms

  accurate sum 6710886.406710886 sum 6710886.406904044 diff  0.0001932 relative diff  2.878e-11 runtime 0.011186   OpenMP sum
  accurate sum 6710886.375       sum 6710886.375       diff          0 relative diff          0 runtime 0.009131   OpenMP sum with bit truncation
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.014367   OpenMP sum with double double kahan sum accumulator
  accurate sum 6710886.406710885 sum 6710886.406710885 diff          0 relative diff          0 runtime 0.014188   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 268435456 log 28 ndigits 8 ndigitsld 5 nbits 32 nbitsld 16
Initializing mesh with Leblanc problem, high values first
  accurate sum 13421772.81342177 sum 13421772.76838235 diff   -0.04504 relative diff -3.356e-09 runtime 0.337841   Serial sum
  accurate sum 13421772.81342177 sum 13421772.81479779 diff   0.001376 relative diff  1.025e-10 runtime 0.163136   Serial sum (OpenMP SIMD pragma)
  accurate sum 13421773          sum 13421773          diff          0 relative diff          0 runtime 0.338101   Serial sum with digit truncation
  accurate sum 13421768          sum 13421768          diff          0 relative diff          0 runtime 0.337997   Serial sum with bit truncation
  accurate sum 13421772.81342177 sum 13421772.81344066 diff  1.889e-05 relative diff  1.407e-12 runtime 0.257081   Serial sum with long double accumulator
  accurate sum 13421772.813      sum 13421772.813      diff          0 relative diff          0 runtime 0.257077   Serial sum with long double accumulator with ndigit truncation
  accurate sum 13421772.81335449 sum 13421772.81335449 diff          0 relative diff          0 runtime 0.257170   Serial sum with long double accumulator with bit truncation
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.890710   Serial sum with double double kahan sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.259038   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.257308   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.258332   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff -1.863e-09 relative diff -1.388e-16 runtime 0.170613   8 wide GCC vector extensions Kahan sum
  accurate sum 13421772.81342177 sum 13421772.81342177 diff -1.863e-09 relative diff -1.388e-16 runtime 0.170888   8 wide Fog C++ vector class Kahan sum
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 1.754971   Serial sum with double double knuth sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.457832   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.456861   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.457303   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.266502   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.258614   8 wide GCC vector extensions Knuth sum
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.266833   8 wide Fog C++ vector class Knuth sum
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.611544   Pair-wise sum

  accurate sum 13421772.8134217728      sum 13421772.81342177354505  diff 7.4505806018137e-10  relative diff 5.5511151212179e-17  runtime 3.060270   Serial sum with quad double accumulator
  accurate sum 13421772.8134217728      sum 13421772.8134217728      diff 2.787986889892e-20   relative diff 2.0772121005535e-27  runtime 3.223348   Serial sum with quad double accumulator and quad terms

  accurate sum 13421772.81342177 sum 13421772.81345624 diff  3.446e-05 relative diff  2.568e-12 runtime 0.019331   OpenMP sum
  accurate sum 13421772.5        sum 13421772.5        diff          0 relative diff          0 runtime 0.015387   OpenMP sum with bit truncation
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.030912   OpenMP sum with double double kahan sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.027996   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 536870912 log 29 ndigits 8 ndigitsld 5 nbits 33 nbitsld 17
Initializing mesh with Leblanc problem, high values first
  accurate sum 26843545.62684355 sum 26843545.70588235 diff    0.07904 relative diff  2.944e-09 runtime 0.676575   Serial sum
  accurate sum 26843545.62684355 sum 26843545.62729779 diff  0.0004542 relative diff  1.692e-11 runtime 0.321684   Serial sum (OpenMP SIMD pragma)
  accurate sum 26843546          sum 26843546          diff          0 relative diff          0 runtime 0.677113   Serial sum with digit truncation
  accurate sum 26843520          sum 26843520          diff          0 relative diff          0 runtime 0.676982   Serial sum with bit truncation
  accurate sum 26843545.62684355 sum 26843545.62691722 diff  7.367e-05 relative diff  2.745e-12 runtime 0.514587   Serial sum with long double accumulator
  accurate sum 26843545.627      sum 26843545.627      diff          0 relative diff          0 runtime 0.514497   Serial sum with long double accumulator with ndigit truncation
  accurate sum 26843545.62646484 sum 26843545.62646484 diff          0 relative diff          0 runtime 0.515193   Serial sum with long double accumulator with bit truncation
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 1.781805   Serial sum with double double kahan sum accumulator
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 0.517931   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 0.514971   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 0.516901   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 26843545.62684355 sum 26843545.62684354 diff -3.725e-09 relative diff -1.388e-16 runtime 0.342028   8 wide GCC vector extensions Kahan sum
  accurate sum 26843545.62684355 sum 26843545.62684354 diff -3.725e-09 relative diff -1.388e-16 runtime 0.342145   8 wide Fog C++ vector class Kahan sum
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 3.511283   Serial sum with double double knuth sum accumulator
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 0.915357   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 0.913705   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 0.915172   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 0.533619   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 0.518444   8 wide GCC vector extensions Knuth sum
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 0.533698   8 wide Fog C++ vector class Knuth sum
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 1.233870   Pair-wise sum

  accurate sum 26843545.6268435456      sum 26843545.62684354709011  diff 1.4901161203627e-09  relative diff 5.5511151212179e-17  runtime 6.105250   Serial sum with quad double accumulator
  accurate sum 26843545.6268435456      sum 26843545.6268435456      diff 2.0244591179446e-19  relative diff 7.5416979041701e-27  runtime 6.517466   Serial sum with quad double accumulator and quad terms

  accurate sum 26843545.62684355 sum 26843545.62375301 diff  -0.003091 relative diff -1.151e-10 runtime 0.030553   OpenMP sum
  accurate sum 26843544          sum 26843544          diff          0 relative diff          0 runtime 0.034928   OpenMP sum with bit truncation
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 0.055675   OpenMP sum with double double kahan sum accumulator
  accurate sum 26843545.62684354 sum 26843545.62684354 diff          0 relative diff          0 runtime 0.055560   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 1073741824 log 30 ndigits 9 ndigitsld 6 nbits 34 nbitsld 18
Initializing mesh with Leblanc problem, high values first
  accurate sum 53687091.25368709 sum 53687091.70588235 diff     0.4522 relative diff  8.423e-09 runtime 1.354878   Serial sum
  accurate sum 53687091.25368709 sum 53687091.21323529 diff   -0.04045 relative diff -7.535e-10 runtime 0.647908   Serial sum (OpenMP SIMD pragma)
  accurate sum 53687090          sum 53687090          diff          0 relative diff          0 runtime 1.354790   Serial sum with digit truncation
  accurate sum 53687040          sum 53687040          diff          0 relative diff          0 runtime 1.354407   Serial sum with bit truncation
  accurate sum 53687091.25368709 sum 53687091.25252757 diff   -0.00116 relative diff  -2.16e-11 runtime 1.029706   Serial sum with long double accumulator
  accurate sum 53687091.25       sum 53687091.25       diff          0 relative diff          0 runtime 1.029874   Serial sum with long double accumulator with ndigit truncation
  accurate sum 53687091.25195312 sum 53687091.25195312 diff          0 relative diff          0 runtime 1.030827   Serial sum with long double accumulator with bit truncation
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 3.562884   Serial sum with double double kahan sum accumulator
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 1.037699   Intel Vectorized sum with double double kahan sum accumulator
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 1.030055   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 1.036807   Agner C++ vector class sum with double double kahan sum accumulator
  accurate sum 53687091.25368709 sum 53687091.25368708 diff -7.451e-09 relative diff -1.388e-16 runtime 0.684501   8 wide GCC vector extensions Kahan sum
  accurate sum 53687091.25368709 sum 53687091.25368708 diff -7.451e-09 relative diff -1.388e-16 runtime 0.684843   8 wide Fog C++ vector class Kahan sum
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 7.020334   Serial sum with double double knuth sum accumulator
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 1.830378   Intel Vectorized sum with double double knuth sum accumulator
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 1.827759   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 1.829866   Agner C++ vector class sum with double double knuth sum accumulator
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 1.068009   8 wide Intel Vector intrinsics Knuth sum
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 1.038092   8 wide GCC vector extensions Knuth sum
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 1.067762   8 wide Fog C++ vector class Knuth sum
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 2.477941   Pair-wise sum

  accurate sum 53687091.2536870912      sum 53687091.25368709418023  diff 2.9802322407255e-09  relative diff 5.5511151212179e-17  runtime 12.204405   Serial sum with quad double accumulator
  accurate sum 53687091.2536870912      sum 53687091.2536870912      diff -1.0747252611427e-18 relative diff -2.0018317924216e-26 runtime 12.599720   Serial sum with quad double accumulator and quad terms

  accurate sum 53687091.25368709 sum 53687091.25313561 diff -0.0005515 relative diff -1.027e-11 runtime 0.062604   OpenMP sum
  accurate sum 53687088          sum 53687088          diff          0 relative diff          0 runtime 0.055088   OpenMP sum with bit truncation
  accurate sum 53687091.25368709 sum 53687091.25368708 diff -7.451e-09 relative diff -1.388e-16 runtime 0.105814   OpenMP sum with double double kahan sum accumulator
  accurate sum 53687091.25368708 sum 53687091.25368708 diff          0 relative diff          0 runtime 0.110678   OpenMP sum with double double kahan sum accumulator with bit truncation

Scanning dependencies of target distclean
Built target distclean
/usr/bin/modulecmd bash $*
PATH=/home/brobey/bin:/home/brobey/parsplice-install/bin:/home/brobey/bin:/home/brobey/parsplice-install/bin:/home/brobey/spack/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin ;export PATH;unset ADVISOR_2019_DIR;unset CC;unset CLASSPATH;unset CLCK_ROOT;unset CONDA_DEFAULT_ENV;unset CONDA_PATH_BACKUP;unset CONDA_PREFIX;unset CONDA_PS1_BACKUP;unset CPATH;unset CPLUS_INCLUDE_PATH;unset CXX;unset DAALROOT;unset F77;unset F90;unset FC;unset FI_PROVIDER_PATH;unset INFOPATH;unset INSPECTOR_2019_DIR;unset INTEL_LICENSE_FILE;unset INTEL_PYTHONHOME;unset IPPROOT;unset I_MPI_ROOT;unset LD_LIBRARY_PATH;unset LIBRARY_PATH;unset LOADEDMODULES;unset MANPATH;unset MKLROOT;unset NLSPATH;unset PKG_CONFIG_PATH;unset PSTLROOT;unset PSXE_2019;unset PYTHONPATH;unset TBBROOT;unset VTUNE_AMPLIFIER_2019_DIR;unset VT_ADD_LIBS;unset VT_ARCH;unset VT_LIB_DIR;unset VT_MPI;unset VT_ROOT;unset VT_SLIB_DIR;unset _LMFILES_;
/usr/bin/modulecmd bash $*
/usr/bin/modulecmd bash $*
CC=pgcc ;export CC;CPP=pgcc\ -E ;export CPP;CXX=pgc++ ;export CXX;F77=pgf77 ;export F77;FC=pgfortran ;export FC;LD_LIBRARY_PATH=/projects/opt/centos7/pgi/linux86-64/18.10/lib ;export LD_LIBRARY_PATH;LM_LICENSE_FILE=/projects/opt/centos7/pgi/license.dat ;export LM_LICENSE_FILE;LOADEDMODULES=cmake/3.12.4:pgi/18.10 ;export LOADEDMODULES;MANPATH=/projects/opt/centos7/pgi/linux86-64/18.10/man:/usr/share/man:/usr/local/share/man ;export MANPATH;PATH=/projects/opt/centos7/pgi/linux86-64/18.10/bin:/projects/opt/centos7/cmake/3.12.4/bin:/home/brobey/bin:/home/brobey/parsplice-install/bin:/home/brobey/bin:/home/brobey/parsplice-install/bin:/home/brobey/spack/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin ;export PATH;PGROUPD_LICENSE_FILE=/projects/opt/centos7/pgi/license.dat ;export PGROUPD_LICENSE_FILE;_LMFILES_=/projects/darwin/modulefiles/centos7/cmake/3.12.4:/projects/darwin/modulefiles/centos7/pgi/18.10 ;export _LMFILES_;f90=pgf90 ;export f90;
-- The C compiler identification is PGI 18.10.0
-- The CXX compiler identification is PGI 18.10.0
-- Check for working C compiler: /projects/opt/centos7/pgi/linux86-64/18.10/bin/pgcc
-- Check for working C compiler: /projects/opt/centos7/pgi/linux86-64/18.10/bin/pgcc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /projects/opt/centos7/pgi/linux86-64/18.10/bin/pgc++
-- Check for working CXX compiler: /projects/opt/centos7/pgi/linux86-64/18.10/bin/pgc++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Found OpenMP_C: -mp (found version "4.0") 
-- Found OpenMP_CXX: -mp (found version "4.0") 
-- Found OpenMP: TRUE (found version "4.0")  
-- Trying Fog Vector Class -- fails
-- Trying X86_64 intrinsics -- fails
-- Trying GCC Vector Extensions -- works
-- Trying Quad math library -- fails
-- Configuring done
-- Generating done
-- Build files have been written to: /home/brobey/GlobalSums
Scanning dependencies of target globalsums
[  5%] Building C object CMakeFiles/globalsums.dir/globalsums.c.o
PGC-W-0114-More than one type specified (/home/brobey/GlobalSums/globalsums.c: 36)
PGC-W-0143-Useless typedef declaration (no declarators present) (/home/brobey/GlobalSums/globalsums.c: 36)
main:
    104, Loop not vectorized/parallelized: contains a parallel region
    137, Loop not vectorized: may not be beneficial
    154, cpu_timer_start inlined, size=2 (inline) file /home/brobey/GlobalSums/globalsums.c (601)
    158, cpu_timer_stop inlined, size=7 (inline) file /home/brobey/GlobalSums/globalsums.c (605)
    166, cpu_timer_start inlined, size=2 (inline) file /home/brobey/GlobalSums/globalsums.c (601)
    170, cpu_timer_stop inlined, size=7 (inline) file /home/brobey/GlobalSums/globalsums.c (605)
    177, cpu_timer_start inlined, size=2 (inline) file /home/brobey/GlobalSums/globalsums.c (601)
    181, cpu_timer_stop inlined, size=7 (inline) file /home/brobey/GlobalSums/globalsums.c (605)
    182, digitround inlined, size=10 (inline) file /home/brobey/GlobalSums/globalsums.c (616)
    189, cpu_timer_start inlined, size=2 (inline) file /home/brobey/GlobalSums/globalsums.c (601)
    193, cpu_timer_stop inlined, size=7 (inline) file /home/brobey/GlobalSums/globalsums.c (605)
    195, bittruncate inlined, size=28 (inline) file /home/brobey/GlobalSums/globalsums.c (629)
    202, cpu_timer_start inlined, size=2 (inline) file /home/brobey/GlobalSums/globalsums.c (601)
    206, cpu_timer_stop inlined, size=7 (inline) file /home/brobey/GlobalSums/globalsums.c (605)
    213, cpu_timer_start inlined, size=2 (inline) file /home/brobey/GlobalSums/globalsums.c (601)
    217, digitround inlined, size=10 (inline) file /home/brobey/GlobalSums/globalsums.c (616)
    219, cpu_timer_stop inlined, size=7 (inline) file /home/brobey/GlobalSums/globalsums.c (605)
    226, cpu_timer_start inlined, size=2 (inline) file /home/brobey/GlobalSums/globalsums.c (601)
    230, bittruncate inlined, size=28 (inline) file /home/brobey/GlobalSums/globalsums.c (629)
    232, cpu_timer_stop inlined, size=7 (inline) file /home/brobey/GlobalSums/globalsums.c (605)
    239, cpu_timer_start inlined, size=2 (inline) file /home/brobey/GlobalSums/globalsums.c (601)
    243, cpu_timer_stop inlined, size=7 (inline) file /home/brobey/GlobalSums/globalsums.c (605)
    264, cpu_timer_start inlined, size=2 (inline) file /home/brobey/GlobalSums/globalsums.c (601)
    268, cpu_timer_stop inlined, size=7 (inline) file /home/brobey/GlobalSums/globalsums.c (605)
    307, cpu_timer_start inlined, size=2 (inline) file /home/brobey/GlobalSums/globalsums.c (601)
    311, cpu_timer_stop inlined, size=7 (inline) file /home/brobey/GlobalSums/globalsums.c (605)
    334, cpu_timer_start inlined, size=2 (inline) file /home/brobey/GlobalSums/globalsums.c (601)
    338, cpu_timer_stop inlined, size=7 (inline) file /home/brobey/GlobalSums/globalsums.c (605)
    359, cpu_timer_start inlined, size=2 (inline) file /home/brobey/GlobalSums/globalsums.c (601)
    363, cpu_timer_stop inlined, size=7 (inline) file /home/brobey/GlobalSums/globalsums.c (605)
    401, cpu_timer_start inlined, size=2 (inline) file /home/brobey/GlobalSums/globalsums.c (601)
    405, cpu_timer_stop inlined, size=7 (inline) file /home/brobey/GlobalSums/globalsums.c (605)
    428, cpu_timer_start inlined, size=2 (inline) file /home/brobey/GlobalSums/globalsums.c (601)
    432, cpu_timer_stop inlined, size=7 (inline) file /home/brobey/GlobalSums/globalsums.c (605)
    541, Loop not vectorized: may not be beneficial
    547, cpu_timer_start inlined, size=2 (inline) file /home/brobey/GlobalSums/globalsums.c (601)
    551, cpu_timer_stop inlined, size=7 (inline) file /home/brobey/GlobalSums/globalsums.c (605)
    558, cpu_timer_start inlined, size=2 (inline) file /home/brobey/GlobalSums/globalsums.c (601)
    562, bittruncate inlined, size=28 (inline) file /home/brobey/GlobalSums/globalsums.c (629)
    564, cpu_timer_stop inlined, size=7 (inline) file /home/brobey/GlobalSums/globalsums.c (605)
    572, cpu_timer_start inlined, size=2 (inline) file /home/brobey/GlobalSums/globalsums.c (601)
    576, cpu_timer_stop inlined, size=7 (inline) file /home/brobey/GlobalSums/globalsums.c (605)
    583, cpu_timer_start inlined, size=2 (inline) file /home/brobey/GlobalSums/globalsums.c (601)
    587, bittruncate inlined, size=28 (inline) file /home/brobey/GlobalSums/globalsums.c (629)
    589, cpu_timer_stop inlined, size=7 (inline) file /home/brobey/GlobalSums/globalsums.c (605)
PGC/x86-64 Linux 18.10-0: compilation completed with warnings
[ 10%] Building C object CMakeFiles/globalsums.dir/do_kahan_sum.c.o
do_kahan_sum:
     10, Generated a prefetch instruction for the loop
[ 15%] Building C object CMakeFiles/globalsums.dir/serial_sum_novec.c.o
do_sum_novec:
      5, Generated 1 prefetches in scalar loop
[ 20%] Building C object CMakeFiles/globalsums.dir/do_kahan_sum_omp.c.o
do_kahan_sum_omp:
     18, Generated a prefetch instruction for the loop
[ 25%] Building C object CMakeFiles/globalsums.dir/do_kahan_sum_omp_wbittrunc.c.o
do_kahan_sum_omp_wbittrunc:
     22, Generated a prefetch instruction for the loop
[ 30%] Building C object CMakeFiles/globalsums.dir/do_knuth_sum.c.o
do_knuth_sum:
     13, Generated a prefetch instruction for the loop
[ 35%] Building C object CMakeFiles/globalsums.dir/do_ldsum.c.o
do_ldsum:
      5, Loop not vectorized: data dependency
[ 40%] Building C object CMakeFiles/globalsums.dir/do_ldsum_wbittrunc.c.o
do_ldsum_wbittrunc:
      8, Loop not vectorized: data dependency
[ 45%] Building C object CMakeFiles/globalsums.dir/do_ldsum_wdigittrunc.c.o
do_ldsum_wdigittrunc:
      7, Loop not vectorized: data dependency
[ 50%] Building C object CMakeFiles/globalsums.dir/do_pair_sum.c.o
do_pair_sum:
     10, Generated 2 alternate versions of the loop
         Generated vector simd code for the loop
         Generated 2 prefetch instructions for the loop
         Generated vector simd code for the loop
         Generated 2 prefetch instructions for the loop
         Generated vector simd code for the loop
         Generated 2 prefetch instructions for the loop
     14, Loop not vectorized/parallelized: contains call
     16, Loop not vectorized: data dependency
         Generated 3 prefetches in scalar loop
[ 55%] Building C object CMakeFiles/globalsums.dir/do_sum.c.o
do_sum:
      6, Generated an alternate version of the loop
         Generated vector simd code for the loop containing reductions
         Generated a prefetch instruction for the loop
         Generated vector simd code for the loop containing reductions
         Generated a prefetch instruction for the loop
[ 60%] Building C object CMakeFiles/globalsums.dir/do_sum_omp.c.o
do_sum_omp:
      6, Generated vector simd code for the loop containing reductions
         Generated a prefetch instruction for the loop
[ 65%] Building C object CMakeFiles/globalsums.dir/do_sum_omp_wbittrunc.c.o
do_sum_omp_wbittrunc:
      9, Generated vector simd code for the loop containing reductions
         Generated a prefetch instruction for the loop
[ 70%] Building C object CMakeFiles/globalsums.dir/do_sum_wbittrunc.c.o
do_sum_wbittrunc:
      8, Generated an alternate version of the loop
         Generated vector simd code for the loop containing reductions
         Generated a prefetch instruction for the loop
         Generated vector simd code for the loop containing reductions
         Generated a prefetch instruction for the loop
[ 75%] Building C object CMakeFiles/globalsums.dir/do_sum_wdigittrunc.c.o
do_sum_wdigittrunc:
      7, Generated an alternate version of the loop
         Generated vector simd code for the loop containing reductions
         Generated a prefetch instruction for the loop
         Generated vector simd code for the loop containing reductions
         Generated a prefetch instruction for the loop
[ 80%] Building C object CMakeFiles/globalsums.dir/kahan_gcc_vector.c.o
do_kahan_sum_gcc_v:
     11, Generated 2 prefetches in scalar loop
[ 85%] Building C object CMakeFiles/globalsums.dir/kahan_gcc_vector8.c.o
do_kahan_sum_gcc_v8:
     10, Generated 3 prefetches in scalar loop
[ 90%] Building C object CMakeFiles/globalsums.dir/knuth_gcc_vector.c.o
do_knuth_sum_gcc_v:
     11, Generated 2 prefetches in scalar loop
[ 95%] Building C object CMakeFiles/globalsums.dir/knuth_gcc_vector8.c.o
do_knuth_sum_gcc_v8:
     11, Generated 3 prefetches in scalar loop
     30, Generated a prefetch instruction for the loop
[100%] Linking C executable globalsums
[100%] Built target globalsums
--- max num openmp threads: 1
--- num openmp threads in parallel region: 1
SETTINGS INFO -- ncells 16 log 4 ndigits 3 ndigitsld 0 nbits 8 nbitsld 2
Initializing mesh with Leblanc problem, high values first
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000001   Serial sum
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000006   Serial sum (OpenMP SIMD pragma)
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000008   Serial sum with digit truncation
  accurate sum 0.8000000007999972 sum 0.8000000007999972 diff          0 relative diff          0 runtime 0.000000   Serial sum with bit truncation
  accurate sum 0.8000000008      sum 0.8000000008      diff -1.626e-19 relative diff -2.033e-19 runtime 0.000000   Serial sum with long double accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Serial sum with long double accumulator with ndigit truncation
  accurate sum 0.8000000007999999 sum 0.8000000007999999 diff          0 relative diff          0 runtime 0.000000   Serial sum with long double accumulator with bit truncation
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double kahan sum accumulator
  accurate sum 0.8000000008      sum 0.2000000002      diff       -0.6 relative diff      -0.75 runtime 0.000000   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 0.8000000008      sum 0.1000000001      diff       -0.7 relative diff     -0.875 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double knuth sum accumulator
  accurate sum 0.8000000008      sum 0.2000000002      diff       -0.6 relative diff      -0.75 runtime 0.000000   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 0.8000000008      sum 0.1000000001      diff       -0.7 relative diff     -0.875 runtime 0.000000   8 wide GCC vector extensions Knuth sum
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Pair-wise sum


  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   OpenMP sum
  accurate sum 0.8000000007999972 sum 0.8000000007999972 diff          0 relative diff          0 runtime 0.000000   OpenMP sum with bit truncation
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   OpenMP sum with double double kahan sum accumulator
  accurate sum 0.8000000007999999 sum 0.8000000007999999 diff          0 relative diff          0 runtime 0.000000   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 32 log 5 ndigits 4 ndigitsld 1 nbits 9 nbitsld 3
Initializing mesh with Leblanc problem, high values first
  accurate sum 1.6000000016      sum 1.6000000016      diff  4.441e-16 relative diff  2.776e-16 runtime 0.000000   Serial sum
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Serial sum with digit truncation
  accurate sum 1.600000001599938 sum 1.600000001599938 diff          0 relative diff          0 runtime 0.000000   Serial sum with bit truncation
  accurate sum 1.6000000016      sum 1.6000000016      diff  5.421e-19 relative diff  3.388e-19 runtime 0.000000   Serial sum with long double accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Serial sum with long double accumulator with ndigit truncation
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Serial sum with long double accumulator with bit truncation
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double kahan sum accumulator
  accurate sum 1.6000000016      sum 0.4000000004      diff       -1.2 relative diff      -0.75 runtime 0.000000   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 1.6000000016      sum 0.2000000002      diff       -1.4 relative diff     -0.875 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double knuth sum accumulator
  accurate sum 1.6000000016      sum 0.4000000004      diff       -1.2 relative diff      -0.75 runtime 0.000000   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 1.6000000016      sum 0.2000000002      diff       -1.4 relative diff     -0.875 runtime 0.000000   8 wide GCC vector extensions Knuth sum
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Pair-wise sum


  accurate sum 1.6000000016      sum 1.6000000016      diff   2.22e-16 relative diff  1.388e-16 runtime 0.000000   OpenMP sum
  accurate sum 1.600000001599994 sum 1.600000001599994 diff          0 relative diff          0 runtime 0.000000   OpenMP sum with bit truncation
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   OpenMP sum with double double kahan sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 64 log 6 ndigits 4 ndigitsld 1 nbits 9 nbitsld 3
Initializing mesh with Leblanc problem, high values first
  accurate sum 3.2000000032      sum 3.200000003200002 diff  1.776e-15 relative diff  5.551e-16 runtime 0.000000   Serial sum
  accurate sum 3.2000000032      sum 3.2000000032      diff  4.441e-16 relative diff  1.388e-16 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000002   Serial sum with digit truncation
  accurate sum 3.200000003199875 sum 3.200000003199875 diff          0 relative diff          0 runtime 0.000000   Serial sum with bit truncation
  accurate sum 3.2000000032      sum 3.2000000032      diff  1.084e-18 relative diff  3.388e-19 runtime 0.000000   Serial sum with long double accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Serial sum with long double accumulator with ndigit truncation
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Serial sum with long double accumulator with bit truncation
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double kahan sum accumulator
  accurate sum 3.2000000032      sum 0.8000000008      diff       -2.4 relative diff      -0.75 runtime 0.000000   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 3.2000000032      sum 0.4000000004      diff       -2.8 relative diff     -0.875 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double knuth sum accumulator
  accurate sum 3.2000000032      sum 0.8000000008      diff       -2.4 relative diff      -0.75 runtime 0.000000   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 3.2000000032      sum 0.4000000004      diff       -2.8 relative diff     -0.875 runtime 0.000000   8 wide GCC vector extensions Knuth sum
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Pair-wise sum


  accurate sum 3.2000000032      sum 3.2000000032      diff  4.441e-16 relative diff  1.388e-16 runtime 0.000000   OpenMP sum
  accurate sum 3.200000003199989 sum 3.200000003199989 diff          0 relative diff          0 runtime 0.000000   OpenMP sum with bit truncation
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   OpenMP sum with double double kahan sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 128 log 7 ndigits 4 ndigitsld 1 nbits 11 nbitsld 4
Initializing mesh with Leblanc problem, high values first
  accurate sum 6.4000000064      sum 6.400000006399994 diff -6.217e-15 relative diff -9.714e-16 runtime 0.000000   Serial sum
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   Serial sum with digit truncation
  accurate sum 6.400000006398841 sum 6.400000006398841 diff          0 relative diff          0 runtime 0.000000   Serial sum with bit truncation
  accurate sum 6.4000000064      sum 6.4000000064      diff  2.168e-18 relative diff  3.388e-19 runtime 0.000000   Serial sum with long double accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   Serial sum with long double accumulator with ndigit truncation
  accurate sum 6.400000006399992 sum 6.400000006399992 diff          0 relative diff          0 runtime 0.000000   Serial sum with long double accumulator with bit truncation
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double kahan sum accumulator
  accurate sum 6.4000000064      sum 1.6000000016      diff       -4.8 relative diff      -0.75 runtime 0.000000   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 6.4000000064      sum 0.8000000008      diff       -5.6 relative diff     -0.875 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000001   Serial sum with double double knuth sum accumulator
  accurate sum 6.4000000064      sum 1.6000000016      diff       -4.8 relative diff      -0.75 runtime 0.000000   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 6.4000000064      sum 0.8000000008      diff       -5.6 relative diff     -0.875 runtime 0.000000   8 wide GCC vector extensions Knuth sum
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   Pair-wise sum


  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   OpenMP sum
  accurate sum 6.400000006399978 sum 6.400000006399978 diff          0 relative diff          0 runtime 0.000000   OpenMP sum with bit truncation
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000001   OpenMP sum with double double kahan sum accumulator
  accurate sum 6.400000006399999 sum 6.400000006399999 diff          0 relative diff          0 runtime 0.000001   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 256 log 8 ndigits 4 ndigitsld 1 nbits 12 nbitsld 4
Initializing mesh with Leblanc problem, high values first
  accurate sum 12.8000000128     sum 12.80000001279997 diff -2.842e-14 relative diff  -2.22e-15 runtime 0.000000   Serial sum
  accurate sum 12.8000000128     sum 12.8000000128     diff  1.776e-15 relative diff  1.388e-16 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000000   Serial sum with digit truncation
  accurate sum 12.80000001279404 sum 12.80000001279404 diff          0 relative diff          0 runtime 0.000000   Serial sum with bit truncation
  accurate sum 12.8000000128     sum 12.8000000128     diff -5.117e-17 relative diff -3.998e-18 runtime 0.000001   Serial sum with long double accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000001   Serial sum with long double accumulator with ndigit truncation
  accurate sum 12.80000001279998 sum 12.80000001279998 diff          0 relative diff          0 runtime 0.000001   Serial sum with long double accumulator with bit truncation
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000001   Serial sum with double double kahan sum accumulator
  accurate sum 12.8000000128     sum 3.2000000032      diff       -9.6 relative diff      -0.75 runtime 0.000000   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 12.8000000128     sum 1.6000000016      diff      -11.2 relative diff     -0.875 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000002   Serial sum with double double knuth sum accumulator
  accurate sum 12.8000000128     sum 3.2000000032      diff       -9.6 relative diff      -0.75 runtime 0.000000   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 12.8000000128     sum 1.6000000016      diff      -11.2 relative diff     -0.875 runtime 0.000000   8 wide GCC vector extensions Knuth sum
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000000   Pair-wise sum


  accurate sum 12.8000000128     sum 12.8000000128     diff  3.553e-15 relative diff  2.776e-16 runtime 0.000000   OpenMP sum
  accurate sum 12.8000000127995  sum 12.8000000127995  diff          0 relative diff          0 runtime 0.000000   OpenMP sum with bit truncation
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000001   OpenMP sum with double double kahan sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000001   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 512 log 9 ndigits 4 ndigitsld 1 nbits 13 nbitsld 5
Initializing mesh with Leblanc problem, high values first
  accurate sum 25.6000000256     sum 25.60000002559964 diff -3.588e-13 relative diff -1.402e-14 runtime 0.000001   Serial sum
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000000   Serial sum with digit truncation
  accurate sum 25.60000002558809 sum 25.60000002558809 diff          0 relative diff          0 runtime 0.000000   Serial sum with bit truncation
  accurate sum 25.6000000256     sum 25.6000000256     diff -1.023e-16 relative diff -3.998e-18 runtime 0.000001   Serial sum with long double accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000001   Serial sum with long double accumulator with ndigit truncation
  accurate sum 25.60000002559991 sum 25.60000002559991 diff          0 relative diff          0 runtime 0.000001   Serial sum with long double accumulator with bit truncation
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000002   Serial sum with double double kahan sum accumulator
  accurate sum 25.6000000256     sum 6.4000000064      diff      -19.2 relative diff      -0.75 runtime 0.000000   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 25.6000000256     sum 3.2000000032      diff      -22.4 relative diff     -0.875 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000004   Serial sum with double double knuth sum accumulator
  accurate sum 25.6000000256     sum 6.4000000064      diff      -19.2 relative diff      -0.75 runtime 0.000001   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 25.6000000256     sum 3.2000000032      diff      -22.4 relative diff     -0.875 runtime 0.000000   8 wide GCC vector extensions Knuth sum
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000002   Pair-wise sum


  accurate sum 25.6000000256     sum 25.60000002560001 diff  1.421e-14 relative diff  5.551e-16 runtime 0.000000   OpenMP sum
  accurate sum 25.600000025599   sum 25.600000025599   diff          0 relative diff          0 runtime 0.000000   OpenMP sum with bit truncation
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000002   OpenMP sum with double double kahan sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000002   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 1024 log 10 ndigits 5 ndigitsld 2 nbits 14 nbitsld 6
Initializing mesh with Leblanc problem, high values first
  accurate sum 51.2000000512     sum 51.20000005120137 diff  1.371e-12 relative diff  2.678e-14 runtime 0.000001   Serial sum
  accurate sum 51.2000000512     sum 51.20000005119996 diff -3.553e-14 relative diff -6.939e-16 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 51.200000051      sum 51.200000051      diff          0 relative diff          0 runtime 0.000000   Serial sum with digit truncation
  accurate sum 51.20000005117618 sum 51.20000005117618 diff          0 relative diff          0 runtime 0.000000   Serial sum with bit truncation
  accurate sum 51.2000000512     sum 51.20000005120001 diff  6.835e-16 relative diff  1.335e-17 runtime 0.000002   Serial sum with long double accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000002   Serial sum with long double accumulator with ndigit truncation
  accurate sum 51.20000005119982 sum 51.20000005119982 diff          0 relative diff          0 runtime 0.000002   Serial sum with long double accumulator with bit truncation
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000004   Serial sum with double double kahan sum accumulator
  accurate sum 51.2000000512     sum 12.8000000128     diff      -38.4 relative diff      -0.75 runtime 0.000001   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 51.2000000512     sum 6.4000000064      diff      -44.8 relative diff     -0.875 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000007   Serial sum with double double knuth sum accumulator
  accurate sum 51.2000000512     sum 12.8000000128     diff      -38.4 relative diff      -0.75 runtime 0.000002   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 51.2000000512     sum 6.4000000064      diff      -44.8 relative diff     -0.875 runtime 0.000001   8 wide GCC vector extensions Knuth sum
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000002   Pair-wise sum


  accurate sum 51.2000000512     sum 51.20000005119995 diff -4.974e-14 relative diff -9.714e-16 runtime 0.000000   OpenMP sum
  accurate sum 51.20000005119073 sum 51.20000005119073 diff          0 relative diff          0 runtime 0.000000   OpenMP sum with bit truncation
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000004   OpenMP sum with double double kahan sum accumulator
  accurate sum 51.20000005119999 sum 51.20000005119999 diff          0 relative diff          0 runtime 0.000004   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 2047 log 10 ndigits 5 ndigitsld 2 nbits 14 nbitsld 6
Initializing mesh with Leblanc problem, high values first
  accurate sum 102.3000001023    sum 102.3000001024003 diff  1.003e-10 relative diff  9.803e-13 runtime 0.000002   Serial sum
  accurate sum 102.3000001023    sum 102.3000001023998 diff  9.979e-11 relative diff  9.755e-13 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 102.3000001       sum 102.3000001       diff          0 relative diff          0 runtime 0.000000   Serial sum with digit truncation
  accurate sum 102.3000001022592 sum 102.3000001022592 diff          0 relative diff          0 runtime 0.000000   Serial sum with bit truncation
  accurate sum 102.3000001023    sum 102.3000001024    diff      1e-10 relative diff  9.775e-13 runtime 0.000004   Serial sum with long double accumulator
  accurate sum 102.3000001023    sum 102.3000001024    diff      1e-10 relative diff  9.775e-13 runtime 0.000004   Serial sum with long double accumulator with ndigit truncation
  accurate sum 102.3000001022992 sum 102.3000001023993 diff      1e-10 relative diff   9.78e-13 runtime 0.000004   Serial sum with long double accumulator with bit truncation
  accurate sum 102.3000001023    sum 102.3000001024    diff      1e-10 relative diff  9.775e-13 runtime 0.000007   Serial sum with double double kahan sum accumulator
  accurate sum 102.3000001023    sum 25.6000000256     diff      -76.7 relative diff    -0.7498 runtime 0.000002   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 102.3000001023    sum 12.8000000128     diff      -89.5 relative diff    -0.8749 runtime 0.000001   8 wide GCC vector extensions Kahan sum
  accurate sum 102.3000001023    sum 102.3000001024    diff      1e-10 relative diff  9.775e-13 runtime 0.000014   Serial sum with double double knuth sum accumulator
  accurate sum 102.3000001023    sum 25.6000000256     diff      -76.7 relative diff    -0.7498 runtime 0.000003   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 102.3000001023    sum 12.8000000128     diff      -89.5 relative diff    -0.8749 runtime 0.000002   8 wide GCC vector extensions Knuth sum
  accurate sum 102.3000001023    sum 102.3000000001    diff -1.022e-07 relative diff  -9.99e-10 runtime 0.000004   Pair-wise sum


  accurate sum 102.3000001023    sum 102.3000001023998 diff  9.977e-11 relative diff  9.753e-13 runtime 0.000001   OpenMP sum
  accurate sum 102.3000001022592 sum 102.3000001023756 diff  1.164e-10 relative diff  1.138e-12 runtime 0.000001   OpenMP sum with bit truncation
  accurate sum 102.3000001023    sum 102.3000001024    diff      1e-10 relative diff  9.775e-13 runtime 0.000008   OpenMP sum with double double kahan sum accumulator
  accurate sum 102.3000001023    sum 102.3000001024    diff  9.999e-11 relative diff  9.774e-13 runtime 0.000008   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 4096 log 12 ndigits 5 ndigitsld 2 nbits 15 nbitsld 7
Initializing mesh with Leblanc problem, high values first
  accurate sum 204.8000002048    sum 204.8000002047672 diff  -3.28e-11 relative diff -1.601e-13 runtime 0.000004   Serial sum
  accurate sum 204.8000002048    sum 204.8000002047971 diff -2.927e-12 relative diff -1.429e-14 runtime 0.000001   Serial sum (OpenMP SIMD pragma)
  accurate sum 204.8000002       sum 204.8000002       diff          0 relative diff          0 runtime 0.000001   Serial sum with digit truncation
  accurate sum 204.8000002047047 sum 204.8000002047047 diff          0 relative diff          0 runtime 0.000001   Serial sum with bit truncation
  accurate sum 204.8000002048    sum 204.8000002048    diff -1.148e-14 relative diff -5.604e-17 runtime 0.000008   Serial sum with long double accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000008   Serial sum with long double accumulator with ndigit truncation
  accurate sum 204.8000002047993 sum 204.8000002047993 diff          0 relative diff          0 runtime 0.000008   Serial sum with long double accumulator with bit truncation
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000015   Serial sum with double double kahan sum accumulator
  accurate sum 204.8000002048    sum 51.2000000512     diff     -153.6 relative diff      -0.75 runtime 0.000003   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 204.8000002048    sum 25.6000000256     diff     -179.2 relative diff     -0.875 runtime 0.000002   8 wide GCC vector extensions Kahan sum
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000028   Serial sum with double double knuth sum accumulator
  accurate sum 204.8000002048    sum 51.2000000512     diff     -153.6 relative diff      -0.75 runtime 0.000007   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 204.8000002048    sum 25.6000000256     diff     -179.2 relative diff     -0.875 runtime 0.000003   8 wide GCC vector extensions Knuth sum
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000008   Pair-wise sum


  accurate sum 204.8000002048    sum 204.8000002047971 diff -2.871e-12 relative diff -1.402e-14 runtime 0.000001   OpenMP sum
  accurate sum 204.8000002047047 sum 204.8000002047047 diff          0 relative diff          0 runtime 0.000001   OpenMP sum with bit truncation
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000024   OpenMP sum with double double kahan sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000015   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 8192 log 13 ndigits 5 ndigitsld 2 nbits 17 nbitsld 7
Initializing mesh with Leblanc problem, high values first
  accurate sum 409.6000004096    sum 409.6000004095737 diff -2.626e-11 relative diff -6.412e-14 runtime 0.000009   Serial sum
  accurate sum 409.6000004096    sum 409.6000004096109 diff  1.086e-11 relative diff  2.651e-14 runtime 0.000001   Serial sum (OpenMP SIMD pragma)
  accurate sum 409.60000041      sum 409.60000041      diff          0 relative diff          0 runtime 0.000001   Serial sum with digit truncation
  accurate sum 409.6000004038215 sum 409.6000004038215 diff          0 relative diff          0 runtime 0.000001   Serial sum with bit truncation
  accurate sum 409.6000004096    sum 409.6000004096001 diff  3.389e-14 relative diff  8.274e-17 runtime 0.000021   Serial sum with long double accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000016   Serial sum with long double accumulator with ndigit truncation
  accurate sum 409.6000004095986 sum 409.6000004095986 diff          0 relative diff          0 runtime 0.000016   Serial sum with long double accumulator with bit truncation
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000030   Serial sum with double double kahan sum accumulator
  accurate sum 409.6000004096    sum 102.4000001024    diff     -307.2 relative diff      -0.75 runtime 0.000007   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 409.6000004096    sum 51.2000000512     diff     -358.4 relative diff     -0.875 runtime 0.000003   8 wide GCC vector extensions Kahan sum
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000058   Serial sum with double double knuth sum accumulator
  accurate sum 409.6000004096    sum 102.4000001024    diff     -307.2 relative diff      -0.75 runtime 0.000014   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 409.6000004096    sum 51.2000000512     diff     -358.4 relative diff     -0.875 runtime 0.000007   8 wide GCC vector extensions Knuth sum
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000022   Pair-wise sum


  accurate sum 409.6000004096    sum 409.600000409611  diff  1.097e-11 relative diff  2.678e-14 runtime 0.000001   OpenMP sum
  accurate sum 409.6000004094094 sum 409.6000004094094 diff          0 relative diff          0 runtime 0.000001   OpenMP sum with bit truncation
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000031   OpenMP sum with double double kahan sum accumulator
  accurate sum 409.6000004095999 sum 409.6000004095999 diff          0 relative diff          0 runtime 0.000031   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 16384 log 14 ndigits 5 ndigitsld 2 nbits 18 nbitsld 8
Initializing mesh with Leblanc problem, high values first
  accurate sum 819.2000008192    sum 819.2000008196816 diff  4.816e-10 relative diff  5.879e-13 runtime 0.000018   Serial sum
  accurate sum 819.2000008192    sum 819.2000008192026 diff  2.615e-12 relative diff  3.192e-15 runtime 0.000002   Serial sum (OpenMP SIMD pragma)
  accurate sum 819.20000082      sum 819.20000082      diff          0 relative diff          0 runtime 0.000002   Serial sum with digit truncation
  accurate sum 819.2000007927418 sum 819.2000007927418 diff          0 relative diff          0 runtime 0.000002   Serial sum with bit truncation
  accurate sum 819.2000008192    sum 819.2000008192    diff -1.749e-14 relative diff -2.135e-17 runtime 0.000032   Serial sum with long double accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000032   Serial sum with long double accumulator with ndigit truncation
  accurate sum 819.2000008191972 sum 819.2000008191972 diff          0 relative diff          0 runtime 0.000032   Serial sum with long double accumulator with bit truncation
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000061   Serial sum with double double kahan sum accumulator
  accurate sum 819.2000008192    sum 204.8000002048    diff     -614.4 relative diff      -0.75 runtime 0.000014   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 819.2000008192    sum 102.4000001024    diff     -716.8 relative diff     -0.875 runtime 0.000007   8 wide GCC vector extensions Kahan sum
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000115   Serial sum with double double knuth sum accumulator
  accurate sum 819.2000008192    sum 204.8000002048    diff     -614.4 relative diff      -0.75 runtime 0.000027   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 819.2000008192    sum 102.4000001024    diff     -716.8 relative diff     -0.875 runtime 0.000014   8 wide GCC vector extensions Knuth sum
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000037   Pair-wise sum


  accurate sum 819.2000008192    sum 819.2000008192023 diff  2.274e-12 relative diff  2.776e-15 runtime 0.000003   OpenMP sum
  accurate sum 819.2000008188188 sum 819.2000008188188 diff          0 relative diff          0 runtime 0.000003   OpenMP sum with bit truncation
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000061   OpenMP sum with double double kahan sum accumulator
  accurate sum 819.2000008191999 sum 819.2000008191999 diff          0 relative diff          0 runtime 0.000061   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 32768 log 15 ndigits 6 ndigitsld 3 nbits 19 nbitsld 9
Initializing mesh with Leblanc problem, high values first
  accurate sum 1638.4000016384   sum 1638.400001638733 diff  3.331e-10 relative diff  2.033e-13 runtime 0.000036   Serial sum
  accurate sum 1638.4000016384   sum 1638.400001638138 diff -2.619e-10 relative diff -1.599e-13 runtime 0.000005   Serial sum (OpenMP SIMD pragma)
  accurate sum 1638.400002       sum 1638.400002       diff          0 relative diff          0 runtime 0.000005   Serial sum with digit truncation
  accurate sum 1638.400001525879 sum 1638.400001525879 diff          0 relative diff          0 runtime 0.000005   Serial sum with bit truncation
  accurate sum 1638.4000016384   sum 1638.4000016384   diff -1.771e-13 relative diff -1.081e-16 runtime 0.000064   Serial sum with long double accumulator
  accurate sum 1638.400001638    sum 1638.400001638    diff          0 relative diff          0 runtime 0.000064   Serial sum with long double accumulator with ndigit truncation
  accurate sum 1638.400001638336 sum 1638.400001638336 diff          0 relative diff          0 runtime 0.000064   Serial sum with long double accumulator with bit truncation
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000122   Serial sum with double double kahan sum accumulator
  accurate sum 1638.4000016384   sum 409.6000004096    diff      -1229 relative diff      -0.75 runtime 0.000027   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 1638.4000016384   sum 204.8000002048    diff      -1434 relative diff     -0.875 runtime 0.000023   8 wide GCC vector extensions Kahan sum
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000224   Serial sum with double double knuth sum accumulator
  accurate sum 1638.4000016384   sum 409.6000004096    diff      -1229 relative diff      -0.75 runtime 0.000053   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 1638.4000016384   sum 204.8000002048    diff      -1434 relative diff     -0.875 runtime 0.000027   8 wide GCC vector extensions Knuth sum
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000021   Pair-wise sum


  accurate sum 1638.4000016384   sum 1638.400001638138 diff -2.624e-10 relative diff -1.601e-13 runtime 0.000005   OpenMP sum
  accurate sum 1638.400001630187 sum 1638.400001630187 diff          0 relative diff          0 runtime 0.000005   OpenMP sum with bit truncation
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000134   OpenMP sum with double double kahan sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000122   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 65536 log 16 ndigits 6 ndigitsld 3 nbits 20 nbitsld 9
Initializing mesh with Leblanc problem, high values first
  accurate sum 3276.8000032768   sum 3276.800003276371 diff -4.293e-10 relative diff  -1.31e-13 runtime 0.000073   Serial sum
  accurate sum 3276.8000032768   sum 3276.80000327659  diff -2.101e-10 relative diff -6.412e-14 runtime 0.000010   Serial sum (OpenMP SIMD pragma)
  accurate sum 3276.800003       sum 3276.800003       diff          0 relative diff          0 runtime 0.000010   Serial sum with digit truncation
  accurate sum 3276.800003051758 sum 3276.800003051758 diff          0 relative diff          0 runtime 0.000009   Serial sum with bit truncation
  accurate sum 3276.8000032768   sum 3276.800003276801 diff   8.68e-13 relative diff  2.649e-16 runtime 0.000136   Serial sum with long double accumulator
  accurate sum 3276.800003277    sum 3276.800003277    diff          0 relative diff          0 runtime 0.000124   Serial sum with long double accumulator with ndigit truncation
  accurate sum 3276.800003276672 sum 3276.800003276672 diff          0 relative diff          0 runtime 0.000124   Serial sum with long double accumulator with bit truncation
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000240   Serial sum with double double kahan sum accumulator
  accurate sum 3276.8000032768   sum 819.2000008192    diff      -2458 relative diff      -0.75 runtime 0.000053   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 3276.8000032768   sum 409.6000004096    diff      -2867 relative diff     -0.875 runtime 0.000027   8 wide GCC vector extensions Kahan sum
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000449   Serial sum with double double knuth sum accumulator
  accurate sum 3276.8000032768   sum 819.2000008192    diff      -2458 relative diff      -0.75 runtime 0.000106   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 3276.8000032768   sum 409.6000004096    diff      -2867 relative diff     -0.875 runtime 0.000053   8 wide GCC vector extensions Knuth sum
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000038   Pair-wise sum


  accurate sum 3276.8000032768   sum 3276.80000327659  diff -2.101e-10 relative diff -6.412e-14 runtime 0.000010   OpenMP sum
  accurate sum 3276.800003260374 sum 3276.800003260374 diff          0 relative diff          0 runtime 0.000019   OpenMP sum with bit truncation
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000243   OpenMP sum with double double kahan sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000243   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 131072 log 17 ndigits 6 ndigitsld 3 nbits 21 nbitsld 10
Initializing mesh with Leblanc problem, high values first
  accurate sum 6553.6000065536   sum 6553.600006562821 diff  9.221e-09 relative diff  1.407e-12 runtime 0.000145   Serial sum
  accurate sum 6553.6000065536   sum 6553.600006557453 diff  3.853e-09 relative diff  5.879e-13 runtime 0.000034   Serial sum (OpenMP SIMD pragma)
  accurate sum 6553.600007       sum 6553.600007       diff          0 relative diff          0 runtime 0.000026   Serial sum with digit truncation
  accurate sum 6553.600006103516 sum 6553.600006103516 diff          0 relative diff          0 runtime 0.000025   Serial sum with bit truncation
  accurate sum 6553.6000065536   sum 6553.600006553605 diff  3.868e-12 relative diff  5.901e-16 runtime 0.000250   Serial sum with long double accumulator
  accurate sum 6553.600006554    sum 6553.600006554    diff          0 relative diff          0 runtime 0.000249   Serial sum with long double accumulator with ndigit truncation
  accurate sum 6553.600006553344 sum 6553.600006553344 diff          0 relative diff          0 runtime 0.000249   Serial sum with long double accumulator with bit truncation
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000476   Serial sum with double double kahan sum accumulator
  accurate sum 6553.6000065536   sum 1638.4000016384   diff      -4915 relative diff      -0.75 runtime 0.000107   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 6553.6000065536   sum 819.2000008192    diff      -5734 relative diff     -0.875 runtime 0.000054   8 wide GCC vector extensions Kahan sum
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000901   Serial sum with double double knuth sum accumulator
  accurate sum 6553.6000065536   sum 1638.4000016384   diff      -4915 relative diff      -0.75 runtime 0.000213   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 6553.6000065536   sum 819.2000008192    diff      -5734 relative diff     -0.875 runtime 0.000108   8 wide GCC vector extensions Knuth sum
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000083   Pair-wise sum


  accurate sum 6553.6000065536   sum 6553.600006557453 diff  3.853e-09 relative diff  5.879e-13 runtime 0.000032   OpenMP sum
  accurate sum 6553.600006461143 sum 6553.600006461143 diff          0 relative diff          0 runtime 0.000026   OpenMP sum with bit truncation
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000488   OpenMP sum with double double kahan sum accumulator
  accurate sum 6553.600006553599 sum 6553.600006553599 diff          0 relative diff          0 runtime 0.000493   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 262144 log 18 ndigits 6 ndigitsld 3 nbits 22 nbitsld 10
Initializing mesh with Leblanc problem, high values first
  accurate sum 13107.2000131072  sum 13107.20001314317 diff  3.597e-08 relative diff  2.745e-12 runtime 0.000284   Serial sum
  accurate sum 13107.2000131072  sum 13107.20001310986 diff  2.665e-09 relative diff  2.033e-13 runtime 0.000080   Serial sum (OpenMP SIMD pragma)
  accurate sum 13107.20001       sum 13107.20001       diff          0 relative diff          0 runtime 0.000084   Serial sum with digit truncation
  accurate sum 13107.20001220703 sum 13107.20001220703 diff          0 relative diff          0 runtime 0.000083   Serial sum with bit truncation
  accurate sum 13107.2000131072  sum 13107.20001310719 diff -1.196e-11 relative diff -9.126e-16 runtime 0.000503   Serial sum with long double accumulator
  accurate sum 13107.20001311    sum 13107.20001311    diff          0 relative diff          0 runtime 0.000497   Serial sum with long double accumulator with ndigit truncation
  accurate sum 13107.20001310669 sum 13107.20001310669 diff          0 relative diff          0 runtime 0.000502   Serial sum with long double accumulator with bit truncation
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000960   Serial sum with double double kahan sum accumulator
  accurate sum 13107.2000131072  sum 3276.8000032768   diff      -9830 relative diff      -0.75 runtime 0.000214   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 13107.2000131072  sum 1638.4000016384   diff -1.147e+04 relative diff     -0.875 runtime 0.000107   8 wide GCC vector extensions Kahan sum
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.001802   Serial sum with double double knuth sum accumulator
  accurate sum 13107.2000131072  sum 3276.8000032768   diff      -9830 relative diff      -0.75 runtime 0.000426   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 13107.2000131072  sum 1638.4000016384   diff -1.147e+04 relative diff     -0.875 runtime 0.000215   8 wide GCC vector extensions Knuth sum
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000198   Pair-wise sum


  accurate sum 13107.2000131072  sum 13107.20001310986 diff  2.665e-09 relative diff  2.033e-13 runtime 0.000074   OpenMP sum
  accurate sum 13107.20001268387 sum 13107.20001268387 diff          0 relative diff          0 runtime 0.000078   OpenMP sum with bit truncation
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000978   OpenMP sum with double double kahan sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000950   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 524288 log 19 ndigits 6 ndigitsld 3 nbits 23 nbitsld 11
Initializing mesh with Leblanc problem, high values first
  accurate sum 26214.4000262144  sum 26214.40002564823 diff -5.662e-07 relative diff  -2.16e-11 runtime 0.000568   Serial sum
  accurate sum 26214.4000262144  sum 26214.40002621096 diff -3.442e-09 relative diff -1.313e-13 runtime 0.000164   Serial sum (OpenMP SIMD pragma)
  accurate sum 26214.40003       sum 26214.40003       diff          0 relative diff          0 runtime 0.000169   Serial sum with digit truncation
  accurate sum 26214.40002441406 sum 26214.40002441406 diff          0 relative diff          0 runtime 0.000162   Serial sum with bit truncation
  accurate sum 26214.4000262144  sum 26214.40002621434 diff -5.817e-11 relative diff -2.219e-15 runtime 0.000999   Serial sum with long double accumulator
  accurate sum 26214.40002621    sum 26214.40002621    diff          0 relative diff          0 runtime 0.000998   Serial sum with long double accumulator with ndigit truncation
  accurate sum 26214.40002620965 sum 26214.40002620965 diff          0 relative diff          0 runtime 0.000997   Serial sum with long double accumulator with bit truncation
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.001899   Serial sum with double double kahan sum accumulator
  accurate sum 26214.4000262144  sum 6553.6000065536   diff -1.966e+04 relative diff      -0.75 runtime 0.000427   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 26214.4000262144  sum 3276.8000032768   diff -2.294e+04 relative diff     -0.875 runtime 0.000214   8 wide GCC vector extensions Kahan sum
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.003600   Serial sum with double double knuth sum accumulator
  accurate sum 26214.4000262144  sum 6553.6000065536   diff -1.966e+04 relative diff      -0.75 runtime 0.000855   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 26214.4000262144  sum 3276.8000032768   diff -2.294e+04 relative diff     -0.875 runtime 0.000428   8 wide GCC vector extensions Knuth sum
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.000411   Pair-wise sum


  accurate sum 26214.4000262144  sum 26214.40002621097 diff -3.434e-09 relative diff  -1.31e-13 runtime 0.000165   OpenMP sum
  accurate sum 26214.40002441406 sum 26214.40002441406 diff          0 relative diff          0 runtime 0.000158   OpenMP sum with bit truncation
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.001925   OpenMP sum with double double kahan sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.001901   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 1048576 log 20 ndigits 7 ndigitsld 4 nbits 24 nbitsld 12
Initializing mesh with Leblanc problem, high values first
  accurate sum 52428.8000524288  sum 52428.80005292332 diff  4.945e-07 relative diff  9.432e-12 runtime 0.001146   Serial sum
  accurate sum 52428.8000524288  sum 52428.80005250258 diff  7.378e-08 relative diff  1.407e-12 runtime 0.000334   Serial sum (OpenMP SIMD pragma)
  accurate sum 52428.8001        sum 52428.8001        diff          0 relative diff          0 runtime 0.000346   Serial sum with digit truncation
  accurate sum 52428.80004882812 sum 52428.80004882812 diff          0 relative diff          0 runtime 0.000347   Serial sum with bit truncation
  accurate sum 52428.8000524288  sum 52428.80005242807 diff -7.327e-10 relative diff -1.397e-14 runtime 0.001997   Serial sum with long double accumulator
  accurate sum 52428.8000524     sum 52428.8000524     diff          0 relative diff          0 runtime 0.001995   Serial sum with long double accumulator with ndigit truncation
  accurate sum 52428.8000524044  sum 52428.8000524044  diff          0 relative diff          0 runtime 0.001993   Serial sum with long double accumulator with bit truncation
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.003796   Serial sum with double double kahan sum accumulator
  accurate sum 52428.8000524288  sum 13107.2000131072  diff -3.932e+04 relative diff      -0.75 runtime 0.000858   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 52428.8000524288  sum 6553.6000065536   diff -4.588e+04 relative diff     -0.875 runtime 0.000428   8 wide GCC vector extensions Kahan sum
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.007197   Serial sum with double double knuth sum accumulator
  accurate sum 52428.8000524288  sum 13107.2000131072  diff -3.932e+04 relative diff      -0.75 runtime 0.001709   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 52428.8000524288  sum 6553.6000065536   diff -4.588e+04 relative diff     -0.875 runtime 0.000859   8 wide GCC vector extensions Knuth sum
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.000865   Pair-wise sum


  accurate sum 52428.8000524288  sum 52428.80005250257 diff  7.377e-08 relative diff  1.407e-12 runtime 0.000330   OpenMP sum
  accurate sum 52428.80004882812 sum 52428.80004882812 diff          0 relative diff          0 runtime 0.000317   OpenMP sum with bit truncation
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.003825   OpenMP sum with double double kahan sum accumulator
  accurate sum 52428.80005242879 sum 52428.80005242879 diff          0 relative diff          0 runtime 0.003793   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 2097151 log 20 ndigits 7 ndigitsld 4 nbits 24 nbitsld 12
Initializing mesh with Leblanc problem, high values first
  accurate sum 104857.5001048575 sum 104857.5001084271 diff   3.57e-06 relative diff  3.404e-11 runtime 0.002318   Serial sum
  accurate sum 104857.5001048575 sum 104857.5001051454 diff  2.879e-07 relative diff  2.746e-12 runtime 0.000712   Serial sum (OpenMP SIMD pragma)
  accurate sum 104857.5          sum 104857.5          diff          0 relative diff          0 runtime 0.000772   Serial sum with digit truncation
  accurate sum 104857.5          sum 104857.5          diff          0 relative diff          0 runtime 0.000767   Serial sum with bit truncation
  accurate sum 104857.5001048575 sum 104857.5001048604 diff  2.908e-09 relative diff  2.773e-14 runtime 0.004003   Serial sum with long double accumulator
  accurate sum 104857.500105     sum 104857.500105     diff          0 relative diff          0 runtime 0.003991   Serial sum with long double accumulator with ndigit truncation
  accurate sum 104857.5001048446 sum 104857.5001048446 diff          0 relative diff          0 runtime 0.003985   Serial sum with long double accumulator with bit truncation
  accurate sum 104857.5001048575 sum 104857.5001048576 diff  1.019e-10 relative diff  9.714e-16 runtime 0.007589   Serial sum with double double kahan sum accumulator
  accurate sum 104857.5001048575 sum 26214.4000262144  diff -7.864e+04 relative diff      -0.75 runtime 0.001712   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 104857.5001048575 sum 13107.2000131072  diff -9.175e+04 relative diff     -0.875 runtime 0.000858   8 wide GCC vector extensions Kahan sum
  accurate sum 104857.5001048575 sum 104857.5001048576 diff  1.019e-10 relative diff  9.714e-16 runtime 0.014395   Serial sum with double double knuth sum accumulator
  accurate sum 104857.5001048575 sum 26214.4000262144  diff -7.864e+04 relative diff      -0.75 runtime 0.003415   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 104857.5001048575 sum 13107.2000131072  diff -9.175e+04 relative diff     -0.875 runtime 0.001718   8 wide GCC vector extensions Knuth sum
  accurate sum 104857.5001048575 sum 104857.5000000001 diff -0.0001049 relative diff     -1e-09 runtime 0.002450   Pair-wise sum


  accurate sum 104857.5001048575 sum 104857.5001051454 diff  2.879e-07 relative diff  2.746e-12 runtime 0.000698   OpenMP sum
  accurate sum 104857.5000915527 sum 104857.5000915527 diff          0 relative diff          0 runtime 0.000739   OpenMP sum with bit truncation
  accurate sum 104857.5001048575 sum 104857.5001048576 diff  1.019e-10 relative diff  9.714e-16 runtime 0.007623   OpenMP sum with double double kahan sum accumulator
  accurate sum 104857.5001048575 sum 104857.5001048576 diff  1.164e-10 relative diff   1.11e-15 runtime 0.007584   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 4194304 log 22 ndigits 7 ndigitsld 4 nbits 26 nbitsld 13
Initializing mesh with Leblanc problem, high values first
  accurate sum 209715.2002097152 sum 209715.2001908246 diff -1.889e-05 relative diff -9.008e-11 runtime 0.004730   Serial sum
  accurate sum 209715.2002097152 sum 209715.2002051858 diff -4.529e-06 relative diff  -2.16e-11 runtime 0.001857   Serial sum (OpenMP SIMD pragma)
  accurate sum 209715.2          sum 209715.2          diff          0 relative diff          0 runtime 0.001933   Serial sum with digit truncation
  accurate sum 209715.19921875   sum 209715.19921875   diff          0 relative diff          0 runtime 0.001945   Serial sum with bit truncation
  accurate sum 209715.2002097152 sum 209715.2002097158 diff  5.755e-10 relative diff  2.744e-15 runtime 0.008085   Serial sum with long double accumulator
  accurate sum 209715.20021      sum 209715.20021      diff          0 relative diff          0 runtime 0.008053   Serial sum with long double accumulator with ndigit truncation
  accurate sum 209715.2002096176 sum 209715.2002096176 diff          0 relative diff          0 runtime 0.008022   Serial sum with long double accumulator with bit truncation
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.015198   Serial sum with double double kahan sum accumulator
  accurate sum 209715.2002097152 sum 52428.8000524288  diff -1.573e+05 relative diff      -0.75 runtime 0.003600   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 209715.2002097152 sum 26214.4000262144  diff -1.835e+05 relative diff     -0.875 runtime 0.001953   8 wide GCC vector extensions Kahan sum
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.028809   Serial sum with double double knuth sum accumulator
  accurate sum 209715.2002097152 sum 52428.8000524288  diff -1.573e+05 relative diff      -0.75 runtime 0.006896   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 209715.2002097152 sum 26214.4000262144  diff -1.835e+05 relative diff     -0.875 runtime 0.003590   8 wide GCC vector extensions Knuth sum
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.006027   Pair-wise sum


  accurate sum 209715.2002097152 sum 209715.2002051858 diff -4.529e-06 relative diff  -2.16e-11 runtime 0.001650   OpenMP sum
  accurate sum 209715.2001953125 sum 209715.2001953125 diff          0 relative diff          0 runtime 0.001905   OpenMP sum with bit truncation
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.015234   OpenMP sum with double double kahan sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.015194   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 8388608 log 23 ndigits 7 ndigitsld 4 nbits 27 nbitsld 13
Initializing mesh with Leblanc problem, high values first
  accurate sum 419430.4004194304 sum 419430.400462431  diff    4.3e-05 relative diff  1.025e-10 runtime 0.009883   Serial sum
  accurate sum 419430.4004194304 sum 419430.4004233867 diff  3.956e-06 relative diff  9.432e-12 runtime 0.004769   Serial sum (OpenMP SIMD pragma)
  accurate sum 419430.4          sum 419430.4          diff          0 relative diff          0 runtime 0.005519   Serial sum with digit truncation
  accurate sum 419430.3984375    sum 419430.3984375    diff          0 relative diff          0 runtime 0.005663   Serial sum with bit truncation
  accurate sum 419430.4004194304 sum 419430.4004193632 diff -6.722e-08 relative diff -1.603e-13 runtime 0.016448   Serial sum with long double accumulator
  accurate sum 419430.400419     sum 419430.400419     diff          0 relative diff          0 runtime 0.016278   Serial sum with long double accumulator with ndigit truncation
  accurate sum 419430.4004192352 sum 419430.4004192352 diff          0 relative diff          0 runtime 0.016272   Serial sum with long double accumulator with bit truncation
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.030477   Serial sum with double double kahan sum accumulator
  accurate sum 419430.4004194304 sum 104857.6001048576 diff -3.146e+05 relative diff      -0.75 runtime 0.007818   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 419430.4004194304 sum 52428.8000524288  diff  -3.67e+05 relative diff     -0.875 runtime 0.004917   8 wide GCC vector extensions Kahan sum
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.057639   Serial sum with double double knuth sum accumulator
  accurate sum 419430.4004194304 sum 104857.6001048576 diff -3.146e+05 relative diff      -0.75 runtime 0.014080   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 419430.4004194304 sum 52428.8000524288  diff  -3.67e+05 relative diff     -0.875 runtime 0.007770   8 wide GCC vector extensions Knuth sum
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.020220   Pair-wise sum


  accurate sum 419430.4004194304 sum 419430.4004233865 diff  3.956e-06 relative diff  9.432e-12 runtime 0.004434   OpenMP sum
  accurate sum 419430.400390625  sum 419430.400390625  diff          0 relative diff          0 runtime 0.005215   OpenMP sum with bit truncation
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.030533   OpenMP sum with double double kahan sum accumulator
  accurate sum 419430.4004194303 sum 419430.4004194303 diff          0 relative diff          0 runtime 0.030470   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 16777216 log 24 ndigits 7 ndigitsld 4 nbits 27 nbitsld 14
Initializing mesh with Leblanc problem, high values first
  accurate sum 838860.8008388608 sum 838860.800853056  diff   1.42e-05 relative diff  1.692e-11 runtime 0.019989   Serial sum
  accurate sum 838860.8008388608 sum 838860.8008674172 diff  2.856e-05 relative diff  3.404e-11 runtime 0.010775   Serial sum (OpenMP SIMD pragma)
  accurate sum 838860.801        sum 838860.801        diff          0 relative diff          0 runtime 0.010973   Serial sum with digit truncation
  accurate sum 838860.796875     sum 838860.796875     diff          0 relative diff          0 runtime 0.011024   Serial sum with bit truncation
  accurate sum 838860.8008388608 sum 838860.800838807  diff  -5.38e-08 relative diff -6.413e-14 runtime 0.032887   Serial sum with long double accumulator
  accurate sum 838860.800839     sum 838860.800839     diff          0 relative diff          0 runtime 0.032693   Serial sum with long double accumulator with ndigit truncation
  accurate sum 838860.8008384705 sum 838860.8008384705 diff          0 relative diff          0 runtime 0.032686   Serial sum with long double accumulator with bit truncation
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.060982   Serial sum with double double kahan sum accumulator
  accurate sum 838860.8008388608 sum 209715.2002097152 diff -6.291e+05 relative diff      -0.75 runtime 0.015759   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 838860.8008388608 sum 104857.6001048576 diff  -7.34e+05 relative diff     -0.875 runtime 0.010186   8 wide GCC vector extensions Kahan sum
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.115304   Serial sum with double double knuth sum accumulator
  accurate sum 838860.8008388608 sum 209715.2002097152 diff -6.291e+05 relative diff      -0.75 runtime 0.028297   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 838860.8008388608 sum 104857.6001048576 diff  -7.34e+05 relative diff     -0.875 runtime 0.015679   8 wide GCC vector extensions Knuth sum
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.040725   Pair-wise sum


  accurate sum 838860.8008388608 sum 838860.8008674172 diff  2.856e-05 relative diff  3.404e-11 runtime 0.010424   OpenMP sum
  accurate sum 838860.80078125   sum 838860.80078125   diff          0 relative diff          0 runtime 0.010399   OpenMP sum with bit truncation
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.061061   OpenMP sum with double double kahan sum accumulator
  accurate sum 838860.8008388607 sum 838860.8008388607 diff          0 relative diff          0 runtime 0.060964   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 33554432 log 25 ndigits 8 ndigitsld 5 nbits 29 nbitsld 15
Initializing mesh with Leblanc problem, high values first
  accurate sum 1677721.601677722 sum 1677721.600413603 diff  -0.001264 relative diff -7.535e-10 runtime 0.040457   Serial sum
  accurate sum 1677721.601677722 sum 1677721.601526596 diff -0.0001511 relative diff -9.008e-11 runtime 0.022902   Serial sum (OpenMP SIMD pragma)
  accurate sum 1677721.6         sum 1677721.6         diff          0 relative diff          0 runtime 0.022938   Serial sum with digit truncation
  accurate sum 1677721.5         sum 1677721.5         diff          0 relative diff          0 runtime 0.022915   Serial sum with bit truncation
  accurate sum 1677721.601677722 sum 1677721.601678708 diff  9.863e-07 relative diff  5.879e-13 runtime 0.065638   Serial sum with long double accumulator
  accurate sum 1677721.6017      sum 1677721.6017      diff          0 relative diff          0 runtime 0.065528   Serial sum with long double accumulator with ndigit truncation
  accurate sum 1677721.601676941 sum 1677721.601676941 diff          0 relative diff          0 runtime 0.065513   Serial sum with long double accumulator with bit truncation
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.122001   Serial sum with double double kahan sum accumulator
  accurate sum 1677721.601677722 sum 419430.4004194304 diff -1.258e+06 relative diff      -0.75 runtime 0.031744   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 1677721.601677722 sum 209715.2002097152 diff -1.468e+06 relative diff     -0.875 runtime 0.020832   8 wide GCC vector extensions Kahan sum
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.230815   Serial sum with double double knuth sum accumulator
  accurate sum 1677721.601677722 sum 419430.4004194304 diff -1.258e+06 relative diff      -0.75 runtime 0.056869   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 1677721.601677722 sum 209715.2002097152 diff -1.468e+06 relative diff     -0.875 runtime 0.031589   8 wide GCC vector extensions Knuth sum
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.083349   Pair-wise sum


  accurate sum 1677721.601677722 sum 1677721.601526597 diff -0.0001511 relative diff -9.008e-11 runtime 0.022277   OpenMP sum
  accurate sum 1677721.6015625   sum 1677721.59375     diff  -0.007812 relative diff -4.657e-09 runtime 0.022073   OpenMP sum with bit truncation
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.122117   OpenMP sum with double double kahan sum accumulator
  accurate sum 1677721.601677721 sum 1677721.601677721 diff          0 relative diff          0 runtime 0.121967   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 67108864 log 26 ndigits 8 ndigitsld 5 nbits 30 nbitsld 15
Initializing mesh with Leblanc problem, high values first
  accurate sum 3355443.203355443 sum 3355443.201976103 diff  -0.001379 relative diff -4.111e-10 runtime 0.081215   Serial sum
  accurate sum 3355443.203355443 sum 3355443.203699448 diff   0.000344 relative diff  1.025e-10 runtime 0.047320   Serial sum (OpenMP SIMD pragma)
  accurate sum 3355443.2         sum 3355443.2         diff          0 relative diff          0 runtime 0.047270   Serial sum with digit truncation
  accurate sum 3355443           sum 3355443           diff          0 relative diff          0 runtime 0.047358   Serial sum with bit truncation
  accurate sum 3355443.203355443 sum 3355443.203356126 diff  6.824e-07 relative diff  2.034e-13 runtime 0.131893   Serial sum with long double accumulator
  accurate sum 3355443.2034      sum 3355443.2034      diff          0 relative diff          0 runtime 0.131252   Serial sum with long double accumulator with ndigit truncation
  accurate sum 3355443.203353882 sum 3355443.203353882 diff          0 relative diff          0 runtime 0.131256   Serial sum with long double accumulator with bit truncation
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.244118   Serial sum with double double kahan sum accumulator
  accurate sum 3355443.203355443 sum 838860.8008388608 diff -2.517e+06 relative diff      -0.75 runtime 0.063835   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 3355443.203355443 sum 419430.4004194304 diff -2.936e+06 relative diff     -0.875 runtime 0.042134   8 wide GCC vector extensions Kahan sum
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.461675   Serial sum with double double knuth sum accumulator
  accurate sum 3355443.203355443 sum 838860.8008388608 diff -2.517e+06 relative diff      -0.75 runtime 0.113611   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 3355443.203355443 sum 419430.4004194304 diff -2.936e+06 relative diff     -0.875 runtime 0.063488   8 wide GCC vector extensions Knuth sum
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.170020   Pair-wise sum


  accurate sum 3355443.203355443 sum 3355443.203699448 diff   0.000344 relative diff  1.025e-10 runtime 0.046045   OpenMP sum
  accurate sum 3355443.1875      sum 3355443.1875      diff          0 relative diff          0 runtime 0.045801   OpenMP sum with bit truncation
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.244191   OpenMP sum with double double kahan sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.244067   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 134217728 log 27 ndigits 8 ndigitsld 5 nbits 31 nbitsld 16
Initializing mesh with Leblanc problem, high values first
  accurate sum 6710886.406710886 sum 6710886.393382353 diff   -0.01333 relative diff -1.986e-09 runtime 0.163376   Serial sum
  accurate sum 6710886.406710886 sum 6710886.406824448 diff  0.0001136 relative diff  1.692e-11 runtime 0.096334   Serial sum (OpenMP SIMD pragma)
  accurate sum 6710886.4         sum 6710886.4         diff          0 relative diff          0 runtime 0.096506   Serial sum with digit truncation
  accurate sum 6710886           sum 6710886           diff          0 relative diff          0 runtime 0.096164   Serial sum with bit truncation
  accurate sum 6710886.406710886 sum 6710886.406710007 diff -8.792e-07 relative diff  -1.31e-13 runtime 0.262399   Serial sum with long double accumulator
  accurate sum 6710886.4067      sum 6710886.4067      diff          0 relative diff          0 runtime 0.262604   Serial sum with long double accumulator with ndigit truncation
  accurate sum 6710886.406677246 sum 6710886.406677246 diff          0 relative diff          0 runtime 0.262739   Serial sum with long double accumulator with bit truncation
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.488401   Serial sum with double double kahan sum accumulator
  accurate sum 6710886.406710886 sum 1677721.601677722 diff -5.033e+06 relative diff      -0.75 runtime 0.127968   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 6710886.406710886 sum 838860.8008388608 diff -5.872e+06 relative diff     -0.875 runtime 0.084881   8 wide GCC vector extensions Kahan sum
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.923201   Serial sum with double double knuth sum accumulator
  accurate sum 6710886.406710886 sum 1677721.601677722 diff -5.033e+06 relative diff      -0.75 runtime 0.225464   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 6710886.406710886 sum 838860.8008388608 diff -5.872e+06 relative diff     -0.875 runtime 0.127461   8 wide GCC vector extensions Knuth sum
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.346906   Pair-wise sum


  accurate sum 6710886.406710886 sum 6710886.406824448 diff  0.0001136 relative diff  1.692e-11 runtime 0.093164   OpenMP sum
  accurate sum 6710886.375       sum 6710886.375       diff          0 relative diff          0 runtime 0.092676   OpenMP sum with bit truncation
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.488432   OpenMP sum with double double kahan sum accumulator
  accurate sum 6710886.406710885 sum 6710886.406710885 diff          0 relative diff          0 runtime 0.488170   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 268435456 log 28 ndigits 8 ndigitsld 5 nbits 32 nbitsld 16
Initializing mesh with Leblanc problem, high values first
  accurate sum 13421772.81342177 sum 13421772.76838235 diff   -0.04504 relative diff -3.356e-09 runtime 0.326084   Serial sum
  accurate sum 13421772.81342177 sum 13421772.80330882 diff   -0.01011 relative diff -7.535e-10 runtime 0.193775   Serial sum (OpenMP SIMD pragma)
  accurate sum 13421773          sum 13421773          diff          0 relative diff          0 runtime 0.193597   Serial sum with digit truncation
  accurate sum 13421768          sum 13421768          diff          0 relative diff          0 runtime 0.193876   Serial sum with bit truncation
  accurate sum 13421772.81342177 sum 13421772.81344066 diff  1.889e-05 relative diff  1.407e-12 runtime 0.524607   Serial sum with long double accumulator
  accurate sum 13421772.813      sum 13421772.813      diff          0 relative diff          0 runtime 0.526058   Serial sum with long double accumulator with ndigit truncation
  accurate sum 13421772.81335449 sum 13421772.81335449 diff          0 relative diff          0 runtime 0.525426   Serial sum with long double accumulator with bit truncation
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.976666   Serial sum with double double kahan sum accumulator
  accurate sum 13421772.81342177 sum 3355443.203355443 diff -1.007e+07 relative diff      -0.75 runtime 0.256248   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 13421772.81342177 sum 1677721.601677722 diff -1.174e+07 relative diff     -0.875 runtime 0.170534   8 wide GCC vector extensions Kahan sum
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 1.845922   Serial sum with double double knuth sum accumulator
  accurate sum 13421772.81342177 sum 3355443.203355443 diff -1.007e+07 relative diff      -0.75 runtime 0.455159   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 13421772.81342177 sum 1677721.601677722 diff -1.174e+07 relative diff     -0.875 runtime 0.255310   8 wide GCC vector extensions Knuth sum
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.702044   Pair-wise sum


  accurate sum 13421772.81342177 sum 13421772.80330882 diff   -0.01011 relative diff -7.535e-10 runtime 0.187784   OpenMP sum
  accurate sum 13421772.5        sum 13421772.5        diff          0 relative diff          0 runtime 0.186299   OpenMP sum with bit truncation
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.976822   OpenMP sum with double double kahan sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.976508   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 536870911 log 28 ndigits 8 ndigitsld 5 nbits 32 nbitsld 17
Initializing mesh with Leblanc problem, high values first
  accurate sum 26843545.52684355 sum 26843545.60588235 diff    0.07904 relative diff  2.944e-09 runtime 0.651507   Serial sum
  accurate sum 26843545.52684355 sum 26843545.51580882 diff   -0.01103 relative diff -4.111e-10 runtime 0.389256   Serial sum (OpenMP SIMD pragma)
  accurate sum 26843546          sum 26843546          diff          0 relative diff          0 runtime 0.389123   Serial sum with digit truncation
  accurate sum 26843536          sum 26843536          diff          0 relative diff          0 runtime 0.389460   Serial sum with bit truncation
  accurate sum 26843545.52684355 sum 26843545.52691722 diff  7.367e-05 relative diff  2.745e-12 runtime 1.049930   Serial sum with long double accumulator
  accurate sum 26843545.527      sum 26843545.527      diff          0 relative diff          0 runtime 1.050841   Serial sum with long double accumulator with ndigit truncation
  accurate sum 26843545.52636719 sum 26843545.52685547 diff  0.0004883 relative diff  1.819e-11 runtime 1.050943   Serial sum with long double accumulator with bit truncation
  accurate sum 26843545.52684355 sum 26843545.52684355 diff          0 relative diff          0 runtime 1.953510   Serial sum with double double kahan sum accumulator
  accurate sum 26843545.52684355 sum 6710886.406710886 diff -2.013e+07 relative diff      -0.75 runtime 0.512935   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 26843545.52684355 sum 3355443.203355443 diff -2.349e+07 relative diff     -0.875 runtime 0.341787   8 wide GCC vector extensions Kahan sum
  accurate sum 26843545.52684355 sum 26843545.52684355 diff          0 relative diff          0 runtime 3.691757   Serial sum with double double knuth sum accumulator
  accurate sum 26843545.52684355 sum 6710886.406710886 diff -2.013e+07 relative diff      -0.75 runtime 0.902731   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 26843545.52684355 sum 3355443.203355443 diff -2.349e+07 relative diff     -0.875 runtime 0.510989   8 wide GCC vector extensions Knuth sum
  accurate sum 26843545.52684355 sum 26843545.5        diff   -0.02684 relative diff     -1e-09 runtime 1.415345   Pair-wise sum


  accurate sum 26843545.52684355 sum 26843545.51580882 diff   -0.01103 relative diff -4.111e-10 runtime 0.377064   OpenMP sum
  accurate sum 26843544          sum 26843544          diff          0 relative diff          0 runtime 0.374009   OpenMP sum with bit truncation
  accurate sum 26843545.52684355 sum 26843545.52684355 diff          0 relative diff          0 runtime 1.953601   OpenMP sum with double double kahan sum accumulator
  accurate sum 26843545.52684355 sum 26843545.52684355 diff          0 relative diff          0 runtime 1.953329   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 1073741824 log 30 ndigits 9 ndigitsld 6 nbits 34 nbitsld 18
Initializing mesh with Leblanc problem, high values first
  accurate sum 53687091.25368709 sum 53687091.70588235 diff     0.4522 relative diff  8.423e-09 runtime 1.309057   Serial sum
  accurate sum 53687091.25368709 sum 53687091.14705883 diff    -0.1066 relative diff -1.986e-09 runtime 0.779455   Serial sum (OpenMP SIMD pragma)
  accurate sum 53687090          sum 53687090          diff          0 relative diff          0 runtime 0.779074   Serial sum with digit truncation
  accurate sum 53687040          sum 53687040          diff          0 relative diff          0 runtime 0.778984   Serial sum with bit truncation
  accurate sum 53687091.25368709 sum 53687091.25252757 diff   -0.00116 relative diff  -2.16e-11 runtime 2.099350   Serial sum with long double accumulator
  accurate sum 53687091.25       sum 53687091.25       diff          0 relative diff          0 runtime 2.102237   Serial sum with long double accumulator with ndigit truncation
  accurate sum 53687091.25195312 sum 53687091.25195312 diff          0 relative diff          0 runtime 2.104544   Serial sum with long double accumulator with bit truncation
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 3.906870   Serial sum with double double kahan sum accumulator
  accurate sum 53687091.25368709 sum 13421772.81342177 diff -4.027e+07 relative diff      -0.75 runtime 1.026354   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 53687091.25368709 sum 6710886.406710886 diff -4.698e+07 relative diff     -0.875 runtime 0.683731   8 wide GCC vector extensions Kahan sum
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 7.383743   Serial sum with double double knuth sum accumulator
  accurate sum 53687091.25368709 sum 13421772.81342177 diff -4.027e+07 relative diff      -0.75 runtime 1.806214   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 53687091.25368709 sum 6710886.406710886 diff -4.698e+07 relative diff     -0.875 runtime 1.020539   8 wide GCC vector extensions Knuth sum
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 2.840474   Pair-wise sum


  accurate sum 53687091.25368709 sum 53687091.14705882 diff    -0.1066 relative diff -1.986e-09 runtime 0.755908   OpenMP sum
  accurate sum 53687088          sum 53687088          diff          0 relative diff          0 runtime 0.750894   OpenMP sum with bit truncation
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 3.907629   OpenMP sum with double double kahan sum accumulator
  accurate sum 53687091.25368708 sum 53687091.25368708 diff          0 relative diff          0 runtime 3.906880   OpenMP sum with double double kahan sum accumulator with bit truncation

Scanning dependencies of target distclean
Built target distclean
/usr/bin/modulecmd bash $*
MANPATH=/usr/share/man:/usr/local/share/man ;export MANPATH;PATH=/home/brobey/bin:/home/brobey/parsplice-install/bin:/home/brobey/bin:/home/brobey/parsplice-install/bin:/home/brobey/spack/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin ;export PATH;unset CC;unset CPP;unset CXX;unset F77;unset FC;unset LD_LIBRARY_PATH;unset LM_LICENSE_FILE;unset LOADEDMODULES;unset PGROUPD_LICENSE_FILE;unset _LMFILES_;unset f90;
