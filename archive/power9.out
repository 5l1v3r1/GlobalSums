for i in clang/8.0.0 gcc/9.1.0 ibm/xlc-16.1.1.3-xlf-16.1.1.3 pgi/19.3
do
    module purge
    module load cmake $i
    cmake .
    make 
    ./globalsums
    make clean
    make distclean
    module purge
done
/usr/bin/modulecmd bash $*
/usr/bin/modulecmd bash $*
CC=clang ;export CC;CLANGROOT=/projects/opt/ppc64le/p9/clang/8.0.0 ;export CLANGROOT;CLANGVER=8.0.0 ;export CLANGVER;CPP=clang\ -E ;export CPP;CXX=clang++ ;export CXX;LD_LIBRARY_PATH=/projects/opt/ppc64le/p9/clang/8.0.0/lib:/projects/opt/ppc64le/gcc/8.3.0/lib64:/projects/opt/ppc64le/gcc/8.3.0/lib ;export LD_LIBRARY_PATH;LLVMROOT=/projects/opt/ppc64le/p9/clang/8.0.0 ;export LLVMROOT;LOADEDMODULES=cmake/3.12.4:clang/8.0.0 ;export LOADEDMODULES;MANPATH=/projects/opt/ppc64le/p9/clang/8.0.0/share/man:/usr/share/man:/usr/local/share/man ;export MANPATH;PATH=/projects/opt/ppc64le/p9/clang/8.0.0/bin:/projects/opt/ppc64le/cmake/3.12.4/bin:/home/brobey/bin:/home/brobey/parsplice-install/bin:/home/brobey/bin:/home/brobey/parsplice-install/bin:/home/brobey/spack/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/opt/ibutils/bin ;export PATH;PYTHONPATH=/projects/opt/ppc64le/p9/clang/8.0.0/lib64/python2.7/site-packages ;export PYTHONPATH;_LMFILES_=/projects/darwin/modulefiles/ppc64le/cmake/3.12.4:/projects/darwin/modulefiles/ppc64le/clang/8.0.0 ;export _LMFILES_;
-- The C compiler identification is Clang 8.0.0
-- The CXX compiler identification is Clang 8.0.0
-- Check for working C compiler: /projects/opt/ppc64le/p9/clang/8.0.0/bin/clang
-- Check for working C compiler: /projects/opt/ppc64le/p9/clang/8.0.0/bin/clang -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /projects/opt/ppc64le/p9/clang/8.0.0/bin/clang++
-- Check for working CXX compiler: /projects/opt/ppc64le/p9/clang/8.0.0/bin/clang++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Found OpenMP_C: -fopenmp=libomp (found version "3.1") 
-- Found OpenMP_CXX: -fopenmp=libomp (found version "4.5") 
-- Found OpenMP: TRUE (found version "3.1")  
-- Trying Fog Vector Class -- fails
-- Trying X86_64 intrinsics -- fails
-- Trying GCC Vector Extensions -- works
-- Trying Quad math library -- fails
-- Configuring done
-- Generating done
-- Build files have been written to: /home/brobey/GlobalSums
Scanning dependencies of target globalsums
[  5%] Building C object CMakeFiles/globalsums.dir/globalsums.c.o
clang-8: warning: argument unused during compilation: '-march=native' [-Wunused-command-line-argument]
globalsums.c:137:7: remark: vectorized loop (vectorization width: 2, interleaved count: 12) [-Rpass=loop-vectorize]
      for (long i = 0; i < ncells; i++){
      ^
globalsums.c:540:9: remark: loop not vectorized: cannot identify array bounds [-Rpass-analysis=loop-vectorize]
#pragma omp parallel for
        ^
globalsums.c:540:9: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
[ 10%] Building C object CMakeFiles/globalsums.dir/do_kahan_sum.c.o
clang-8: warning: argument unused during compilation: '-march=native' [-Wunused-command-line-argument]
do_kahan_sum.c:10:4: remark: loop not vectorized: value that could not be identified as reduction is used outside the loop [-Rpass-analysis=loop-vectorize]
   for (long i = 0; i < ncells; i++) {
   ^
do_kahan_sum.c:10:4: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
[ 15%] Building C object CMakeFiles/globalsums.dir/serial_sum_novec.c.o
clang-8: warning: argument unused during compilation: '-march=native' [-Wunused-command-line-argument]
serial_sum_novec.c:5:4: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
   for (long i = 0; i < ncells; i++){
   ^
[ 20%] Building C object CMakeFiles/globalsums.dir/do_kahan_sum_omp.c.o
clang-8: warning: argument unused during compilation: '-march=native' [-Wunused-command-line-argument]
do_kahan_sum_omp.c:17:9: remark: loop not vectorized: value that could not be identified as reduction is used outside the loop [-Rpass-analysis=loop-vectorize]
#pragma omp for
        ^
do_kahan_sum_omp.c:17:9: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
do_kahan_sum_omp.c:28:4: remark: loop not vectorized: value that could not be identified as reduction is used outside the loop [-Rpass-analysis=loop-vectorize]
   }
   ^
do_kahan_sum_omp.c:28:4: remark: loop not vectorized: could not determine number of loop iterations [-Rpass-analysis=loop-vectorize]
do_kahan_sum_omp.c:28:4: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
[ 25%] Building C object CMakeFiles/globalsums.dir/do_kahan_sum_omp_wbittrunc.c.o
clang-8: warning: argument unused during compilation: '-march=native' [-Wunused-command-line-argument]
do_kahan_sum_omp_wbittrunc.c:21:9: remark: loop not vectorized: value that could not be identified as reduction is used outside the loop [-Rpass-analysis=loop-vectorize]
#pragma omp for
        ^
do_kahan_sum_omp_wbittrunc.c:21:9: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
do_kahan_sum_omp_wbittrunc.c:44:4: remark: loop not vectorized: value that could not be identified as reduction is used outside the loop [-Rpass-analysis=loop-vectorize]
   }
   ^
do_kahan_sum_omp_wbittrunc.c:44:4: remark: loop not vectorized: could not determine number of loop iterations [-Rpass-analysis=loop-vectorize]
do_kahan_sum_omp_wbittrunc.c:44:4: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
do_kahan_sum_omp_wbittrunc.c:44:4: remark: loop not vectorized: value that could not be identified as reduction is used outside the loop [-Rpass-analysis=loop-vectorize]
do_kahan_sum_omp_wbittrunc.c:44:4: remark: loop not vectorized: could not determine number of loop iterations [-Rpass-analysis=loop-vectorize]
do_kahan_sum_omp_wbittrunc.c:44:4: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
[ 30%] Building C object CMakeFiles/globalsums.dir/do_knuth_sum.c.o
clang-8: warning: argument unused during compilation: '-march=native' [-Wunused-command-line-argument]
do_knuth_sum.c:13:4: remark: loop not vectorized: value that could not be identified as reduction is used outside the loop [-Rpass-analysis=loop-vectorize]
   for (long i = 0; i < ncells; i++) {
   ^
do_knuth_sum.c:13:4: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
[ 35%] Building C object CMakeFiles/globalsums.dir/do_ldsum.c.o
clang-8: warning: argument unused during compilation: '-march=native' [-Wunused-command-line-argument]
do_ldsum.c:6:13: remark: loop not vectorized: cannot prove it is safe to reorder floating-point operations; allow reordering by specifying '#pragma clang loop vectorize(enable)' before the loop or by providing the compiler option '-ffast-math'. [-Rpass-analysis=loop-vectorize]
      ldsum += var[i];
            ^
do_ldsum.c:5:4: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
   for (long i = 0; i < ncells; i++){
   ^
[ 40%] Building C object CMakeFiles/globalsums.dir/do_ldsum_wbittrunc.c.o
clang-8: warning: argument unused during compilation: '-march=native' [-Wunused-command-line-argument]
do_ldsum_wbittrunc.c:9:13: remark: loop not vectorized: cannot prove it is safe to reorder floating-point operations; allow reordering by specifying '#pragma clang loop vectorize(enable)' before the loop or by providing the compiler option '-ffast-math'. [-Rpass-analysis=loop-vectorize]
      ldsum += var[i];
            ^
do_ldsum_wbittrunc.c:8:4: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
   for (long i = 0; i < ncells; i++){
   ^
[ 45%] Building C object CMakeFiles/globalsums.dir/do_ldsum_wdigittrunc.c.o
clang-8: warning: argument unused during compilation: '-march=native' [-Wunused-command-line-argument]
do_ldsum_wdigittrunc.c:8:13: remark: loop not vectorized: cannot prove it is safe to reorder floating-point operations; allow reordering by specifying '#pragma clang loop vectorize(enable)' before the loop or by providing the compiler option '-ffast-math'. [-Rpass-analysis=loop-vectorize]
      ldsum += var[i];
            ^
do_ldsum_wdigittrunc.c:7:4: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
   for (long i = 0; i < ncells; i++){
   ^
[ 50%] Building C object CMakeFiles/globalsums.dir/do_pair_sum.c.o
clang-8: warning: argument unused during compilation: '-march=native' [-Wunused-command-line-argument]
do_pair_sum.c:10:4: remark: vectorized loop (vectorization width: 2, interleaved count: 12) [-Rpass=loop-vectorize]
   for (long i = 0; i<nmax; i++){
   ^
do_pair_sum.c:16:7: remark: loop not vectorized: unsafe dependent memory operations in loop. Use #pragma loop distribute(enable) to allow loop distribution to attempt to isolate the offending operations into a separate loop [-Rpass-analysis=loop-vectorize]
      for (long i = 0; i<nmax; i++){
      ^
do_pair_sum.c:16:7: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
[ 55%] Building C object CMakeFiles/globalsums.dir/do_sum.c.o
clang-8: warning: argument unused during compilation: '-march=native' [-Wunused-command-line-argument]
do_sum.c:5:9: remark: vectorized loop (vectorization width: 2, interleaved count: 12) [-Rpass=loop-vectorize]
#pragma omp simd reduction(+:sum)
        ^
[ 60%] Building C object CMakeFiles/globalsums.dir/do_sum_omp.c.o
clang-8: warning: argument unused during compilation: '-march=native' [-Wunused-command-line-argument]
do_sum_omp.c:7:11: remark: loop not vectorized: value that could not be identified as reduction is used outside the loop [-Rpass-analysis=loop-vectorize]
      sum += var[i];
          ^
do_sum_omp.c:5:9: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
#pragma omp parallel for reduction(+: sum)
        ^
do_sum_omp.c:5:9: remark: loop not vectorized: value that could not be identified as reduction is used outside the loop [-Rpass-analysis=loop-vectorize]
do_sum_omp.c:5:9: remark: loop not vectorized: could not determine number of loop iterations [-Rpass-analysis=loop-vectorize]
do_sum_omp.c:5:9: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
[ 65%] Building C object CMakeFiles/globalsums.dir/do_sum_omp_wbittrunc.c.o
clang-8: warning: argument unused during compilation: '-march=native' [-Wunused-command-line-argument]
do_sum_omp_wbittrunc.c:10:11: remark: loop not vectorized: value that could not be identified as reduction is used outside the loop [-Rpass-analysis=loop-vectorize]
      sum += var[i];
          ^
do_sum_omp_wbittrunc.c:8:9: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
#pragma omp parallel for reduction(+: sum)
        ^
do_sum_omp_wbittrunc.c:8:9: remark: loop not vectorized: value that could not be identified as reduction is used outside the loop [-Rpass-analysis=loop-vectorize]
do_sum_omp_wbittrunc.c:8:9: remark: loop not vectorized: could not determine number of loop iterations [-Rpass-analysis=loop-vectorize]
do_sum_omp_wbittrunc.c:8:9: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
[ 70%] Building C object CMakeFiles/globalsums.dir/do_sum_wbittrunc.c.o
clang-8: warning: argument unused during compilation: '-march=native' [-Wunused-command-line-argument]
do_sum_wbittrunc.c:9:11: remark: loop not vectorized: cannot prove it is safe to reorder floating-point operations; allow reordering by specifying '#pragma clang loop vectorize(enable)' before the loop or by providing the compiler option '-ffast-math'. [-Rpass-analysis=loop-vectorize]
      sum += var[i];
          ^
do_sum_wbittrunc.c:8:4: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
   for (long i = 0; i < ncells; i++){
   ^
[ 75%] Building C object CMakeFiles/globalsums.dir/do_sum_wdigittrunc.c.o
clang-8: warning: argument unused during compilation: '-march=native' [-Wunused-command-line-argument]
do_sum_wdigittrunc.c:8:11: remark: loop not vectorized: cannot prove it is safe to reorder floating-point operations; allow reordering by specifying '#pragma clang loop vectorize(enable)' before the loop or by providing the compiler option '-ffast-math'. [-Rpass-analysis=loop-vectorize]
      sum += var[i];
          ^
do_sum_wdigittrunc.c:7:4: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
   for (long i = 0; i < ncells; i++){
   ^
[ 80%] Building C object CMakeFiles/globalsums.dir/kahan_gcc_vector.c.o
clang-8: warning: argument unused during compilation: '-march=native' [-Wunused-command-line-argument]
kahan_gcc_vector.c:11:4: remark: loop not vectorized: loop control flow is not understood by vectorizer [-Rpass-analysis=loop-vectorize]
   for (long i = 0; i < ncells; i+=4) {
   ^
kahan_gcc_vector.c:11:4: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
[ 85%] Building C object CMakeFiles/globalsums.dir/kahan_gcc_vector8.c.o
clang-8: warning: argument unused during compilation: '-march=native' [-Wunused-command-line-argument]
kahan_gcc_vector8.c:10:4: remark: loop not vectorized: loop control flow is not understood by vectorizer [-Rpass-analysis=loop-vectorize]
   for (long i = 0; i < ncells; i+=8) {
   ^
kahan_gcc_vector8.c:10:4: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
[ 90%] Building C object CMakeFiles/globalsums.dir/knuth_gcc_vector.c.o
clang-8: warning: argument unused during compilation: '-march=native' [-Wunused-command-line-argument]
knuth_gcc_vector.c:11:4: remark: loop not vectorized: loop control flow is not understood by vectorizer [-Rpass-analysis=loop-vectorize]
   for (long i = 0; i < ncells; i+=4) {
   ^
knuth_gcc_vector.c:11:4: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
[ 95%] Building C object CMakeFiles/globalsums.dir/knuth_gcc_vector8.c.o
clang-8: warning: argument unused during compilation: '-march=native' [-Wunused-command-line-argument]
knuth_gcc_vector8.c:11:4: remark: loop not vectorized: loop control flow is not understood by vectorizer [-Rpass-analysis=loop-vectorize]
   for (long i = 0; i < ncells; i+=8) {
   ^
knuth_gcc_vector8.c:11:4: remark: loop not vectorized [-Rpass-missed=loop-vectorize]
[100%] Linking C executable globalsums
[100%] Built target globalsums
--- max num openmp threads: 160
--- num openmp threads in parallel region: 160
SETTINGS INFO -- ncells 16 log 4 ndigits 3 ndigitsld 0 nbits 8 nbitsld 2
Initializing mesh with Leblanc problem, high values first
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Serial sum
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000008   Serial sum with digit truncation
  accurate sum 0.8000000007999972 sum 0.8000000007999972 diff          0 relative diff          0 runtime 0.000000   Serial sum with bit truncation
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000001   Serial sum with long double accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000002   Serial sum with long double accumulator with ndigit truncation
  accurate sum 0.8000000007999999 sum 0.8000000007999999 diff          0 relative diff          0 runtime 0.000001   Serial sum with long double accumulator with bit truncation
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double kahan sum accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 0.8000000008      sum 0.8000000007999999 diff  -1.11e-16 relative diff -1.388e-16 runtime 0.000001   8 wide GCC vector extensions Kahan sum
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double knuth sum accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   8 wide GCC vector extensions Knuth sum
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000003   Pair-wise sum


  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.002252   OpenMP sum
  accurate sum 0.8000000007999972 sum 0.8000000007999972 diff          0 relative diff          0 runtime 0.002466   OpenMP sum with bit truncation
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.004403   OpenMP sum with double double kahan sum accumulator
  accurate sum 0.8000000007999999 sum 0.8000000007999999 diff          0 relative diff          0 runtime 0.003800   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 32 log 5 ndigits 4 ndigitsld 1 nbits 9 nbitsld 3
Initializing mesh with Leblanc problem, high values first
  accurate sum 1.6000000016      sum 1.6000000016      diff  4.441e-16 relative diff  2.776e-16 runtime 0.000000   Serial sum
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000001   Serial sum (OpenMP SIMD pragma)
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000001   Serial sum with digit truncation
  accurate sum 1.600000001599938 sum 1.600000001599938 diff          0 relative diff          0 runtime 0.000000   Serial sum with bit truncation
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000001   Serial sum with long double accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000002   Serial sum with long double accumulator with ndigit truncation
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000001   Serial sum with long double accumulator with bit truncation
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double kahan sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff  -2.22e-16 relative diff -1.388e-16 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double knuth sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   8 wide GCC vector extensions Knuth sum
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000001   Pair-wise sum


  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.002250   OpenMP sum
  accurate sum 1.600000001599994 sum 1.600000001599994 diff          0 relative diff          0 runtime 0.002366   OpenMP sum with bit truncation
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.004085   OpenMP sum with double double kahan sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.003707   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 64 log 6 ndigits 4 ndigitsld 1 nbits 9 nbitsld 3
Initializing mesh with Leblanc problem, high values first
  accurate sum 3.2000000032      sum 3.200000003200002 diff  1.776e-15 relative diff  5.551e-16 runtime 0.000000   Serial sum
  accurate sum 3.2000000032      sum 3.200000003200001 diff  1.332e-15 relative diff  4.163e-16 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000001   Serial sum with digit truncation
  accurate sum 3.200000003199875 sum 3.200000003199875 diff          0 relative diff          0 runtime 0.000000   Serial sum with bit truncation
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000001   Serial sum with long double accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000002   Serial sum with long double accumulator with ndigit truncation
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000001   Serial sum with long double accumulator with bit truncation
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double kahan sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff -4.441e-16 relative diff -1.388e-16 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000001   Serial sum with double double knuth sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000001   8 wide GCC vector extensions Knuth sum
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000002   Pair-wise sum


  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.002358   OpenMP sum
  accurate sum 3.200000003199989 sum 3.200000003199989 diff          0 relative diff          0 runtime 0.002050   OpenMP sum with bit truncation
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.004391   OpenMP sum with double double kahan sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.004043   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 128 log 7 ndigits 4 ndigitsld 1 nbits 11 nbitsld 4
Initializing mesh with Leblanc problem, high values first
  accurate sum 6.4000000064      sum 6.400000006399994 diff -6.217e-15 relative diff -9.714e-16 runtime 0.000000   Serial sum
  accurate sum 6.4000000064      sum 6.400000006400003 diff  2.665e-15 relative diff  4.163e-16 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000001   Serial sum with digit truncation
  accurate sum 6.400000006398841 sum 6.400000006398841 diff          0 relative diff          0 runtime 0.000000   Serial sum with bit truncation
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000002   Serial sum with long double accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000003   Serial sum with long double accumulator with ndigit truncation
  accurate sum 6.400000006399992 sum 6.400000006399992 diff          0 relative diff          0 runtime 0.000002   Serial sum with long double accumulator with bit truncation
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000001   Serial sum with double double kahan sum accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 6.4000000064      sum 6.400000006399999 diff -8.882e-16 relative diff -1.388e-16 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000001   Serial sum with double double knuth sum accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000001   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000001   8 wide GCC vector extensions Knuth sum
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000001   Pair-wise sum


  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.002189   OpenMP sum
  accurate sum 6.400000006399978 sum 6.400000006399978 diff          0 relative diff          0 runtime 0.002088   OpenMP sum with bit truncation
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.003946   OpenMP sum with double double kahan sum accumulator
  accurate sum 6.400000006399999 sum 6.400000006399999 diff          0 relative diff          0 runtime 0.004263   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 256 log 8 ndigits 4 ndigitsld 1 nbits 12 nbitsld 4
Initializing mesh with Leblanc problem, high values first
  accurate sum 12.8000000128     sum 12.80000001279997 diff -2.842e-14 relative diff  -2.22e-15 runtime 0.000001   Serial sum
  accurate sum 12.8000000128     sum 12.8000000128     diff  1.776e-15 relative diff  1.388e-16 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000001   Serial sum with digit truncation
  accurate sum 12.80000001279404 sum 12.80000001279404 diff          0 relative diff          0 runtime 0.000001   Serial sum with bit truncation
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000005   Serial sum with long double accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000005   Serial sum with long double accumulator with ndigit truncation
  accurate sum 12.80000001279998 sum 12.80000001279998 diff          0 relative diff          0 runtime 0.000005   Serial sum with long double accumulator with bit truncation
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000002   Serial sum with double double kahan sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000001   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff -1.776e-15 relative diff -1.388e-16 runtime 0.000001   8 wide GCC vector extensions Kahan sum
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000003   Serial sum with double double knuth sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000001   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000001   8 wide GCC vector extensions Knuth sum
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000002   Pair-wise sum


  accurate sum 12.8000000128     sum 12.8000000128     diff  1.776e-15 relative diff  1.388e-16 runtime 0.001935   OpenMP sum
  accurate sum 12.8000000127995  sum 12.8000000127995  diff          0 relative diff          0 runtime 0.002057   OpenMP sum with bit truncation
  accurate sum 12.8000000128     sum 12.8000000128     diff  1.776e-15 relative diff  1.388e-16 runtime 0.004118   OpenMP sum with double double kahan sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.004273   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 512 log 9 ndigits 4 ndigitsld 1 nbits 13 nbitsld 5
Initializing mesh with Leblanc problem, high values first
  accurate sum 25.6000000256     sum 25.60000002559964 diff -3.588e-13 relative diff -1.402e-14 runtime 0.000001   Serial sum
  accurate sum 25.6000000256     sum 25.60000002559999 diff -1.421e-14 relative diff -5.551e-16 runtime 0.000001   Serial sum (OpenMP SIMD pragma)
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000002   Serial sum with digit truncation
  accurate sum 25.60000002558809 sum 25.60000002558809 diff          0 relative diff          0 runtime 0.000001   Serial sum with bit truncation
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000009   Serial sum with long double accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000010   Serial sum with long double accumulator with ndigit truncation
  accurate sum 25.60000002559991 sum 25.60000002559991 diff          0 relative diff          0 runtime 0.000009   Serial sum with long double accumulator with bit truncation
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000003   Serial sum with double double kahan sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000001   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff -3.553e-15 relative diff -1.388e-16 runtime 0.000001   8 wide GCC vector extensions Kahan sum
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000006   Serial sum with double double knuth sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000002   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000002   8 wide GCC vector extensions Knuth sum
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000003   Pair-wise sum


  accurate sum 25.6000000256     sum 25.6000000256     diff  3.553e-15 relative diff  1.388e-16 runtime 0.002256   OpenMP sum
  accurate sum 25.600000025599   sum 25.600000025599   diff          0 relative diff          0 runtime 0.001995   OpenMP sum with bit truncation
  accurate sum 25.6000000256     sum 25.6000000256     diff  3.553e-15 relative diff  1.388e-16 runtime 0.004153   OpenMP sum with double double kahan sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.003800   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 1024 log 10 ndigits 5 ndigitsld 2 nbits 14 nbitsld 6
Initializing mesh with Leblanc problem, high values first
  accurate sum 51.2000000512     sum 51.20000005120137 diff  1.371e-12 relative diff  2.678e-14 runtime 0.000002   Serial sum
  accurate sum 51.2000000512     sum 51.20000005120004 diff  3.553e-14 relative diff  6.939e-16 runtime 0.000001   Serial sum (OpenMP SIMD pragma)
  accurate sum 51.200000051      sum 51.200000051      diff          0 relative diff          0 runtime 0.000003   Serial sum with digit truncation
  accurate sum 51.20000005117618 sum 51.20000005117618 diff          0 relative diff          0 runtime 0.000002   Serial sum with bit truncation
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000018   Serial sum with long double accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000019   Serial sum with long double accumulator with ndigit truncation
  accurate sum 51.20000005119982 sum 51.20000005119982 diff          0 relative diff          0 runtime 0.000018   Serial sum with long double accumulator with bit truncation
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000005   Serial sum with double double kahan sum accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000002   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 51.2000000512     sum 51.20000005119999 diff -7.105e-15 relative diff -1.388e-16 runtime 0.000002   8 wide GCC vector extensions Kahan sum
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000010   Serial sum with double double knuth sum accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000004   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000004   8 wide GCC vector extensions Knuth sum
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000003   Pair-wise sum


  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.001972   OpenMP sum
  accurate sum 51.20000005119073 sum 51.20000005119073 diff          0 relative diff          0 runtime 0.002443   OpenMP sum with bit truncation
  accurate sum 51.2000000512     sum 51.20000005120001 diff  7.105e-15 relative diff  1.388e-16 runtime 0.003905   OpenMP sum with double double kahan sum accumulator
  accurate sum 51.20000005119999 sum 51.20000005119999 diff          0 relative diff          0 runtime 0.004405   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 2048 log 11 ndigits 5 ndigitsld 2 nbits 15 nbitsld 6
Initializing mesh with Leblanc problem, high values first
  accurate sum 102.4000001024    sum 102.4000001024003 diff  2.842e-13 relative diff  2.776e-15 runtime 0.000004   Serial sum
  accurate sum 102.4000001024    sum 102.4000001024    diff  4.263e-14 relative diff  4.163e-16 runtime 0.000002   Serial sum (OpenMP SIMD pragma)
  accurate sum 102.4000001       sum 102.4000001       diff          0 relative diff          0 runtime 0.000004   Serial sum with digit truncation
  accurate sum 102.4000001023524 sum 102.4000001023524 diff          0 relative diff          0 runtime 0.000004   Serial sum with bit truncation
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000035   Serial sum with long double accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000036   Serial sum with long double accumulator with ndigit truncation
  accurate sum 102.4000001023996 sum 102.4000001023996 diff          0 relative diff          0 runtime 0.000035   Serial sum with long double accumulator with bit truncation
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000011   Serial sum with double double kahan sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000004   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff -1.421e-14 relative diff -1.388e-16 runtime 0.000004   8 wide GCC vector extensions Kahan sum
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000021   Serial sum with double double knuth sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000007   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000007   8 wide GCC vector extensions Knuth sum
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000005   Pair-wise sum


  accurate sum 102.4000001024    sum 102.4000001024    diff  1.421e-14 relative diff  1.388e-16 runtime 0.002364   OpenMP sum
  accurate sum 102.4000001023524 sum 102.4000001023524 diff          0 relative diff          0 runtime 0.002030   OpenMP sum with bit truncation
  accurate sum 102.4000001024    sum 102.4000001024    diff  1.421e-14 relative diff  1.388e-16 runtime 0.003970   OpenMP sum with double double kahan sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.004348   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 4096 log 12 ndigits 5 ndigitsld 2 nbits 15 nbitsld 7
Initializing mesh with Leblanc problem, high values first
  accurate sum 204.8000002048    sum 204.8000002047672 diff  -3.28e-11 relative diff -1.601e-13 runtime 0.000007   Serial sum
  accurate sum 204.8000002048    sum 204.8000002047994 diff -5.684e-13 relative diff -2.776e-15 runtime 0.000003   Serial sum (OpenMP SIMD pragma)
  accurate sum 204.8000002       sum 204.8000002       diff          0 relative diff          0 runtime 0.000008   Serial sum with digit truncation
  accurate sum 204.8000002047047 sum 204.8000002047047 diff          0 relative diff          0 runtime 0.000007   Serial sum with bit truncation
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000079   Serial sum with long double accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000078   Serial sum with long double accumulator with ndigit truncation
  accurate sum 204.8000002047993 sum 204.8000002047993 diff          0 relative diff          0 runtime 0.000077   Serial sum with long double accumulator with bit truncation
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000020   Serial sum with double double kahan sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000010   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff -2.842e-14 relative diff -1.388e-16 runtime 0.000009   8 wide GCC vector extensions Kahan sum
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000039   Serial sum with double double knuth sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000016   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000015   8 wide GCC vector extensions Knuth sum
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000011   Pair-wise sum


  accurate sum 204.8000002048    sum 204.8000002048001 diff  8.527e-14 relative diff  4.163e-16 runtime 0.001859   OpenMP sum
  accurate sum 204.8000002047047 sum 204.8000002047047 diff          0 relative diff          0 runtime 0.002135   OpenMP sum with bit truncation
  accurate sum 204.8000002048    sum 204.8000002048    diff  2.842e-14 relative diff  1.388e-16 runtime 0.004238   OpenMP sum with double double kahan sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.003951   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 8192 log 13 ndigits 5 ndigitsld 2 nbits 17 nbitsld 7
Initializing mesh with Leblanc problem, high values first
  accurate sum 409.6000004096    sum 409.6000004095737 diff -2.626e-11 relative diff -6.412e-14 runtime 0.000013   Serial sum
  accurate sum 409.6000004096    sum 409.600000409592  diff -8.015e-12 relative diff -1.957e-14 runtime 0.000006   Serial sum (OpenMP SIMD pragma)
  accurate sum 409.60000041      sum 409.60000041      diff          0 relative diff          0 runtime 0.000014   Serial sum with digit truncation
  accurate sum 409.6000004038215 sum 409.6000004038215 diff          0 relative diff          0 runtime 0.000014   Serial sum with bit truncation
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000139   Serial sum with long double accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000138   Serial sum with long double accumulator with ndigit truncation
  accurate sum 409.6000004095986 sum 409.6000004095986 diff          0 relative diff          0 runtime 0.000138   Serial sum with long double accumulator with bit truncation
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000038   Serial sum with double double kahan sum accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000016   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 409.6000004096    sum 409.6000004095999 diff -5.684e-14 relative diff -1.388e-16 runtime 0.000014   8 wide GCC vector extensions Kahan sum
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000083   Serial sum with double double knuth sum accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000028   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000026   8 wide GCC vector extensions Knuth sum
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000015   Pair-wise sum


  accurate sum 409.6000004096    sum 409.6000004095998 diff -1.705e-13 relative diff -4.163e-16 runtime 0.002040   OpenMP sum
  accurate sum 409.6000004094094 sum 409.6000004094094 diff          0 relative diff          0 runtime 0.002330   OpenMP sum with bit truncation
  accurate sum 409.6000004096    sum 409.6000004096001 diff  5.684e-14 relative diff  1.388e-16 runtime 0.003899   OpenMP sum with double double kahan sum accumulator
  accurate sum 409.6000004095999 sum 409.6000004095999 diff          0 relative diff          0 runtime 0.003961   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 16384 log 14 ndigits 5 ndigitsld 2 nbits 18 nbitsld 8
Initializing mesh with Leblanc problem, high values first
  accurate sum 819.2000008192    sum 819.2000008196816 diff  4.816e-10 relative diff  5.879e-13 runtime 0.000027   Serial sum
  accurate sum 819.2000008192    sum 819.2000008192206 diff  2.058e-11 relative diff  2.512e-14 runtime 0.000015   Serial sum (OpenMP SIMD pragma)
  accurate sum 819.20000082      sum 819.20000082      diff          0 relative diff          0 runtime 0.000028   Serial sum with digit truncation
  accurate sum 819.2000007927418 sum 819.2000007927418 diff          0 relative diff          0 runtime 0.000027   Serial sum with bit truncation
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000307   Serial sum with long double accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000307   Serial sum with long double accumulator with ndigit truncation
  accurate sum 819.2000008191972 sum 819.2000008191972 diff          0 relative diff          0 runtime 0.000307   Serial sum with long double accumulator with bit truncation
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000080   Serial sum with double double kahan sum accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000038   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 819.2000008192    sum 819.2000008191999 diff -1.137e-13 relative diff -1.388e-16 runtime 0.000034   8 wide GCC vector extensions Kahan sum
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000156   Serial sum with double double knuth sum accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000065   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000061   8 wide GCC vector extensions Knuth sum
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000042   Pair-wise sum


  accurate sum 819.2000008192    sum 819.2000008191984 diff -1.592e-12 relative diff -1.943e-15 runtime 0.002181   OpenMP sum
  accurate sum 819.2000008188188 sum 819.2000008188188 diff          0 relative diff          0 runtime 0.002065   OpenMP sum with bit truncation
  accurate sum 819.2000008192    sum 819.2000008192001 diff  1.137e-13 relative diff  1.388e-16 runtime 0.003627   OpenMP sum with double double kahan sum accumulator
  accurate sum 819.2000008191999 sum 819.2000008191999 diff          0 relative diff          0 runtime 0.003516   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 32768 log 15 ndigits 6 ndigitsld 3 nbits 19 nbitsld 9
Initializing mesh with Leblanc problem, high values first
  accurate sum 1638.4000016384   sum 1638.400001638733 diff  3.331e-10 relative diff  2.033e-13 runtime 0.000054   Serial sum
  accurate sum 1638.4000016384   sum 1638.400001638439 diff  3.911e-11 relative diff  2.387e-14 runtime 0.000030   Serial sum (OpenMP SIMD pragma)
  accurate sum 1638.400002       sum 1638.400002       diff          0 relative diff          0 runtime 0.000056   Serial sum with digit truncation
  accurate sum 1638.400001525879 sum 1638.400001525879 diff          0 relative diff          0 runtime 0.000054   Serial sum with bit truncation
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000616   Serial sum with long double accumulator
  accurate sum 1638.400001638    sum 1638.400001638    diff          0 relative diff          0 runtime 0.000618   Serial sum with long double accumulator with ndigit truncation
  accurate sum 1638.400001638336 sum 1638.400001638336 diff          0 relative diff          0 runtime 0.000615   Serial sum with long double accumulator with bit truncation
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000159   Serial sum with double double kahan sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000078   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff -2.274e-13 relative diff -1.388e-16 runtime 0.000069   8 wide GCC vector extensions Kahan sum
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000312   Serial sum with double double knuth sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000130   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000124   8 wide GCC vector extensions Knuth sum
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000090   Pair-wise sum


  accurate sum 1638.4000016384   sum 1638.400001638402 diff  1.819e-12 relative diff   1.11e-15 runtime 0.001978   OpenMP sum
  accurate sum 1638.400001630187 sum 1638.400001630187 diff          0 relative diff          0 runtime 0.002052   OpenMP sum with bit truncation
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.003830   OpenMP sum with double double kahan sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.003922   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 65536 log 16 ndigits 6 ndigitsld 3 nbits 20 nbitsld 9
Initializing mesh with Leblanc problem, high values first
  accurate sum 3276.8000032768   sum 3276.800003276371 diff -4.293e-10 relative diff  -1.31e-13 runtime 0.000113   Serial sum
  accurate sum 3276.8000032768   sum 3276.800003276311 diff -4.889e-10 relative diff -1.492e-13 runtime 0.000050   Serial sum (OpenMP SIMD pragma)
  accurate sum 3276.800003       sum 3276.800003       diff          0 relative diff          0 runtime 0.000105   Serial sum with digit truncation
  accurate sum 3276.800003051758 sum 3276.800003051758 diff          0 relative diff          0 runtime 0.000104   Serial sum with bit truncation
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.001126   Serial sum with long double accumulator
  accurate sum 3276.800003277    sum 3276.800003277    diff          0 relative diff          0 runtime 0.001127   Serial sum with long double accumulator with ndigit truncation
  accurate sum 3276.800003276672 sum 3276.800003276672 diff          0 relative diff          0 runtime 0.001133   Serial sum with long double accumulator with bit truncation
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000338   Serial sum with double double kahan sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000136   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff -4.547e-13 relative diff -1.388e-16 runtime 0.000118   8 wide GCC vector extensions Kahan sum
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000670   Serial sum with double double knuth sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000239   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000225   8 wide GCC vector extensions Knuth sum
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000183   Pair-wise sum


  accurate sum 3276.8000032768   sum 3276.800003276825 diff  2.501e-11 relative diff  7.633e-15 runtime 0.001876   OpenMP sum
  accurate sum 3276.800003260374 sum 3276.800003260374 diff          0 relative diff          0 runtime 0.001776   OpenMP sum with bit truncation
  accurate sum 3276.8000032768   sum 3276.8000032768   diff  4.547e-13 relative diff  1.388e-16 runtime 0.003632   OpenMP sum with double double kahan sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.003610   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 131072 log 17 ndigits 6 ndigitsld 3 nbits 21 nbitsld 10
Initializing mesh with Leblanc problem, high values first
  accurate sum 6553.6000065536   sum 6553.600006562821 diff  9.221e-09 relative diff  1.407e-12 runtime 0.000218   Serial sum
  accurate sum 6553.6000065536   sum 6553.600006552631 diff -9.686e-10 relative diff -1.478e-13 runtime 0.000119   Serial sum (OpenMP SIMD pragma)
  accurate sum 6553.600007       sum 6553.600007       diff          0 relative diff          0 runtime 0.000219   Serial sum with digit truncation
  accurate sum 6553.600006103516 sum 6553.600006103516 diff          0 relative diff          0 runtime 0.000218   Serial sum with bit truncation
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.002486   Serial sum with long double accumulator
  accurate sum 6553.600006554    sum 6553.600006554    diff          0 relative diff          0 runtime 0.002493   Serial sum with long double accumulator with ndigit truncation
  accurate sum 6553.600006553344 sum 6553.600006553344 diff          0 relative diff          0 runtime 0.002483   Serial sum with long double accumulator with bit truncation
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000644   Serial sum with double double kahan sum accumulator
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000333   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 6553.6000065536   sum 6553.600006553599 diff -9.095e-13 relative diff -1.388e-16 runtime 0.000282   8 wide GCC vector extensions Kahan sum
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.001235   Serial sum with double double knuth sum accumulator
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000552   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000529   8 wide GCC vector extensions Knuth sum
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000342   Pair-wise sum


  accurate sum 6553.6000065536   sum 6553.60000655357  diff -3.001e-11 relative diff  -4.58e-15 runtime 0.001926   OpenMP sum
  accurate sum 6553.600006461143 sum 6553.600006461143 diff          0 relative diff          0 runtime 0.001733   OpenMP sum with bit truncation
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.003611   OpenMP sum with double double kahan sum accumulator
  accurate sum 6553.600006553599 sum 6553.600006553599 diff          0 relative diff          0 runtime 0.004010   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 262144 log 18 ndigits 6 ndigitsld 3 nbits 22 nbitsld 10
Initializing mesh with Leblanc problem, high values first
  accurate sum 13107.2000131072  sum 13107.20001314317 diff  3.597e-08 relative diff  2.745e-12 runtime 0.000434   Serial sum
  accurate sum 13107.2000131072  sum 13107.20001311436 diff   7.16e-09 relative diff  5.462e-13 runtime 0.000237   Serial sum (OpenMP SIMD pragma)
  accurate sum 13107.20001       sum 13107.20001       diff          0 relative diff          0 runtime 0.000435   Serial sum with digit truncation
  accurate sum 13107.20001220703 sum 13107.20001220703 diff          0 relative diff          0 runtime 0.000434   Serial sum with bit truncation
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.004917   Serial sum with long double accumulator
  accurate sum 13107.20001311    sum 13107.20001311    diff          0 relative diff          0 runtime 0.004961   Serial sum with long double accumulator with ndigit truncation
  accurate sum 13107.20001310669 sum 13107.20001310669 diff          0 relative diff          0 runtime 0.004914   Serial sum with long double accumulator with bit truncation
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.001255   Serial sum with double double kahan sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000623   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff -1.819e-12 relative diff -1.388e-16 runtime 0.000549   8 wide GCC vector extensions Kahan sum
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.002500   Serial sum with double double knuth sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.001032   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000944   8 wide GCC vector extensions Knuth sum
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000560   Pair-wise sum


  accurate sum 13107.2000131072  sum 13107.2000131068  diff  -4.02e-10 relative diff -3.067e-14 runtime 0.001871   OpenMP sum
  accurate sum 13107.20001268387 sum 13107.20001268387 diff          0 relative diff          0 runtime 0.001692   OpenMP sum with bit truncation
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.003541   OpenMP sum with double double kahan sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.003521   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 524288 log 19 ndigits 6 ndigitsld 3 nbits 23 nbitsld 11
Initializing mesh with Leblanc problem, high values first
  accurate sum 26214.4000262144  sum 26214.40002564823 diff -5.662e-07 relative diff  -2.16e-11 runtime 0.000869   Serial sum
  accurate sum 26214.4000262144  sum 26214.40002622848 diff  1.408e-08 relative diff  5.372e-13 runtime 0.000476   Serial sum (OpenMP SIMD pragma)
  accurate sum 26214.40003       sum 26214.40003       diff          0 relative diff          0 runtime 0.000868   Serial sum with digit truncation
  accurate sum 26214.40002441406 sum 26214.40002441406 diff          0 relative diff          0 runtime 0.000858   Serial sum with bit truncation
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.009882   Serial sum with long double accumulator
  accurate sum 26214.40002621    sum 26214.40002621    diff          0 relative diff          0 runtime 0.009940   Serial sum with long double accumulator with ndigit truncation
  accurate sum 26214.40002620965 sum 26214.40002620965 diff          0 relative diff          0 runtime 0.009946   Serial sum with long double accumulator with bit truncation
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.002538   Serial sum with double double kahan sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.001261   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff -3.638e-12 relative diff -1.388e-16 runtime 0.001103   8 wide GCC vector extensions Kahan sum
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.004990   Serial sum with double double knuth sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.002070   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.001913   8 wide GCC vector extensions Knuth sum
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.001135   Pair-wise sum


  accurate sum 26214.4000262144  sum 26214.40002621488 diff  4.802e-10 relative diff  1.832e-14 runtime 0.002091   OpenMP sum
  accurate sum 26214.40002441406 sum 26214.40002441406 diff          0 relative diff          0 runtime 0.002070   OpenMP sum with bit truncation
  accurate sum 26214.4000262144  sum 26214.4000262144  diff  3.638e-12 relative diff  1.388e-16 runtime 0.003439   OpenMP sum with double double kahan sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.003877   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 1048576 log 20 ndigits 7 ndigitsld 4 nbits 24 nbitsld 12
Initializing mesh with Leblanc problem, high values first
  accurate sum 52428.8000524288  sum 52428.80005292332 diff  4.945e-07 relative diff  9.432e-12 runtime 0.002275   Serial sum
  accurate sum 52428.8000524288  sum 52428.80005243071 diff  1.914e-09 relative diff   3.65e-14 runtime 0.001416   Serial sum (OpenMP SIMD pragma)
  accurate sum 52428.8001        sum 52428.8001        diff          0 relative diff          0 runtime 0.002134   Serial sum with digit truncation
  accurate sum 52428.80004882812 sum 52428.80004882812 diff          0 relative diff          0 runtime 0.001978   Serial sum with bit truncation
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.040406   Serial sum with long double accumulator
  accurate sum 52428.8000524     sum 52428.8000524     diff          0 relative diff          0 runtime 0.033997   Serial sum with long double accumulator with ndigit truncation
  accurate sum 52428.8000524044  sum 52428.8000524044  diff          0 relative diff          0 runtime 0.050343   Serial sum with long double accumulator with bit truncation
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.005152   Serial sum with double double kahan sum accumulator
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.002655   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 52428.8000524288  sum 52428.80005242879 diff -7.276e-12 relative diff -1.388e-16 runtime 0.002318   8 wide GCC vector extensions Kahan sum
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.024305   Serial sum with double double knuth sum accumulator
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.004306   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.003994   8 wide GCC vector extensions Knuth sum
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.002717   Pair-wise sum


  accurate sum 52428.8000524288  sum 52428.80005243524 diff  6.439e-09 relative diff  1.228e-13 runtime 0.001679   OpenMP sum
  accurate sum 52428.80004882812 sum 52428.80004882812 diff          0 relative diff          0 runtime 0.001913   OpenMP sum with bit truncation
  accurate sum 52428.8000524288  sum 52428.80005242881 diff  7.276e-12 relative diff  1.388e-16 runtime 0.002949   OpenMP sum with double double kahan sum accumulator
  accurate sum 52428.80005242879 sum 52428.80005242879 diff          0 relative diff          0 runtime 0.003182   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 2097152 log 21 ndigits 7 ndigitsld 4 nbits 25 nbitsld 12
Initializing mesh with Leblanc problem, high values first
  accurate sum 104857.6001048576 sum 104857.6001084272 diff   3.57e-06 relative diff  3.404e-11 runtime 0.004839   Serial sum
  accurate sum 104857.6001048576 sum 104857.6001048649 diff  7.305e-09 relative diff  6.967e-14 runtime 0.015297   Serial sum (OpenMP SIMD pragma)
  accurate sum 104857.6          sum 104857.6          diff          0 relative diff          0 runtime 0.005110   Serial sum with digit truncation
  accurate sum 104857.6000976562 sum 104857.6000976562 diff          0 relative diff          0 runtime 0.013858   Serial sum with bit truncation
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.061929   Serial sum with long double accumulator
  accurate sum 104857.600105     sum 104857.600105     diff          0 relative diff          0 runtime 0.041901   Serial sum with long double accumulator with ndigit truncation
  accurate sum 104857.6001048088 sum 104857.6001048088 diff          0 relative diff          0 runtime 0.041835   Serial sum with long double accumulator with bit truncation
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.011665   Serial sum with double double kahan sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.002815   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff -1.455e-11 relative diff -1.388e-16 runtime 0.001412   8 wide GCC vector extensions Kahan sum
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.021304   Serial sum with double double knuth sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.005263   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.002689   8 wide GCC vector extensions Knuth sum
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.001744   Pair-wise sum


  accurate sum 104857.6001048576 sum 104857.6001048499 diff -7.727e-09 relative diff -7.369e-14 runtime 0.005492   OpenMP sum
  accurate sum 104857.6000976562 sum 104857.6000976562 diff          0 relative diff          0 runtime 0.001510   OpenMP sum with bit truncation
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.002452   OpenMP sum with double double kahan sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.002444   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 4194304 log 22 ndigits 7 ndigitsld 4 nbits 26 nbitsld 13
Initializing mesh with Leblanc problem, high values first
  accurate sum 209715.2002097152 sum 209715.2001908246 diff -1.889e-05 relative diff -9.008e-11 runtime 0.009684   Serial sum
  accurate sum 209715.2002097152 sum 209715.2002101504 diff  4.352e-07 relative diff  2.075e-12 runtime 0.009354   Serial sum (OpenMP SIMD pragma)
  accurate sum 209715.2          sum 209715.2          diff          0 relative diff          0 runtime 0.010684   Serial sum with digit truncation
  accurate sum 209715.19921875   sum 209715.19921875   diff          0 relative diff          0 runtime 0.010326   Serial sum with bit truncation
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.083286   Serial sum with long double accumulator
  accurate sum 209715.20021      sum 209715.20021      diff          0 relative diff          0 runtime 0.080094   Serial sum with long double accumulator with ndigit truncation
  accurate sum 209715.2002096176 sum 209715.2002096176 diff          0 relative diff          0 runtime 0.067096   Serial sum with long double accumulator with bit truncation
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.021473   Serial sum with double double kahan sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.005292   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff  -2.91e-11 relative diff -1.388e-16 runtime 0.002839   8 wide GCC vector extensions Kahan sum
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.042406   Serial sum with double double knuth sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.010514   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.005392   8 wide GCC vector extensions Knuth sum
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.003848   Pair-wise sum


  accurate sum 209715.2002097152 sum 209715.2002096121 diff -1.031e-07 relative diff -4.916e-13 runtime 0.001892   OpenMP sum
  accurate sum 209715.2001953125 sum 209715.2001953125 diff          0 relative diff          0 runtime 0.002434   OpenMP sum with bit truncation
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.003953   OpenMP sum with double double kahan sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.003560   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 8388608 log 23 ndigits 7 ndigitsld 4 nbits 27 nbitsld 13
Initializing mesh with Leblanc problem, high values first
  accurate sum 419430.4004194304 sum 419430.400462431  diff    4.3e-05 relative diff  1.025e-10 runtime 0.020533   Serial sum
  accurate sum 419430.4004194304 sum 419430.4004126157 diff -6.815e-06 relative diff -1.625e-11 runtime 0.019377   Serial sum (OpenMP SIMD pragma)
  accurate sum 419430.4          sum 419430.4          diff          0 relative diff          0 runtime 0.020601   Serial sum with digit truncation
  accurate sum 419430.3984375    sum 419430.3984375    diff          0 relative diff          0 runtime 0.020051   Serial sum with bit truncation
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.151659   Serial sum with long double accumulator
  accurate sum 419430.400419     sum 419430.400419     diff          0 relative diff          0 runtime 0.133023   Serial sum with long double accumulator with ndigit truncation
  accurate sum 419430.4004192352 sum 419430.4004192352 diff          0 relative diff          0 runtime 0.133016   Serial sum with long double accumulator with bit truncation
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.043082   Serial sum with double double kahan sum accumulator
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.010582   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 419430.4004194304 sum 419430.4004194303 diff -5.821e-11 relative diff -1.388e-16 runtime 0.005749   8 wide GCC vector extensions Kahan sum
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.085245   Serial sum with double double knuth sum accumulator
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.021028   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.010819   8 wide GCC vector extensions Knuth sum
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.011003   Pair-wise sum


  accurate sum 419430.4004194304 sum 419430.4004195538 diff  1.234e-07 relative diff  2.942e-13 runtime 0.078562   OpenMP sum
  accurate sum 419430.400390625  sum 419430.400390625  diff          0 relative diff          0 runtime 0.001598   OpenMP sum with bit truncation
  accurate sum 419430.4004194304 sum 419430.4004194305 diff  5.821e-11 relative diff  1.388e-16 runtime 0.003198   OpenMP sum with double double kahan sum accumulator
  accurate sum 419430.4004194303 sum 419430.4004194303 diff          0 relative diff          0 runtime 0.003064   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 16777216 log 24 ndigits 7 ndigitsld 4 nbits 27 nbitsld 14
Initializing mesh with Leblanc problem, high values first
  accurate sum 838860.8008388608 sum 838860.800853056  diff   1.42e-05 relative diff  1.692e-11 runtime 0.048557   Serial sum
  accurate sum 838860.8008388608 sum 838860.8008490175 diff  1.016e-05 relative diff  1.211e-11 runtime 0.085018   Serial sum (OpenMP SIMD pragma)
  accurate sum 838860.801        sum 838860.801        diff          0 relative diff          0 runtime 0.039862   Serial sum with digit truncation
  accurate sum 838860.796875     sum 838860.796875     diff          0 relative diff          0 runtime 0.028549   Serial sum with bit truncation
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.266115   Serial sum with long double accumulator
  accurate sum 838860.800839     sum 838860.800839     diff          0 relative diff          0 runtime 0.266067   Serial sum with long double accumulator with ndigit truncation
  accurate sum 838860.8008384705 sum 838860.8008384705 diff          0 relative diff          0 runtime 0.266064   Serial sum with long double accumulator with bit truncation
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.084784   Serial sum with double double kahan sum accumulator
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.021208   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 838860.8008388608 sum 838860.8008388607 diff -1.164e-10 relative diff -1.388e-16 runtime 0.012384   8 wide GCC vector extensions Kahan sum
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.171171   Serial sum with double double knuth sum accumulator
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.045194   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.022656   8 wide GCC vector extensions Knuth sum
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.023979   Pair-wise sum


  accurate sum 838860.8008388608 sum 838860.8008405101 diff  1.649e-06 relative diff  1.966e-12 runtime 0.004267   OpenMP sum
  accurate sum 838860.80078125   sum 838860.80078125   diff          0 relative diff          0 runtime 0.002641   OpenMP sum with bit truncation
  accurate sum 838860.8008388608 sum 838860.8008388609 diff  1.164e-10 relative diff  1.388e-16 runtime 0.006305   OpenMP sum with double double kahan sum accumulator
  accurate sum 838860.8008388607 sum 838860.8008388607 diff          0 relative diff          0 runtime 0.004970   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 33554432 log 25 ndigits 8 ndigitsld 5 nbits 29 nbitsld 15
Initializing mesh with Leblanc problem, high values first
  accurate sum 1677721.601677722 sum 1677721.600413603 diff  -0.001264 relative diff -7.535e-10 runtime 0.084733   Serial sum
  accurate sum 1677721.601677722 sum 1677721.601698931 diff  2.121e-05 relative diff  1.264e-11 runtime 0.036920   Serial sum (OpenMP SIMD pragma)
  accurate sum 1677721.6         sum 1677721.6         diff          0 relative diff          0 runtime 0.057101   Serial sum with digit truncation
  accurate sum 1677721.5         sum 1677721.5         diff          0 relative diff          0 runtime 0.057147   Serial sum with bit truncation
  accurate sum 1677721.601677722 sum 1677721.601677722 diff -2.777e-20 relative diff -1.655e-26 runtime 0.532187   Serial sum with long double accumulator
  accurate sum 1677721.6017      sum 1677721.6017      diff          0 relative diff          0 runtime 0.537054   Serial sum with long double accumulator with ndigit truncation
  accurate sum 1677721.601676941 sum 1677721.601676941 diff          0 relative diff          0 runtime 0.532113   Serial sum with long double accumulator with bit truncation
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.171162   Serial sum with double double kahan sum accumulator
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.042496   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 1677721.601677722 sum 1677721.601677721 diff -2.328e-10 relative diff -1.388e-16 runtime 0.024138   8 wide GCC vector extensions Kahan sum
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.341457   Serial sum with double double knuth sum accumulator
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.084279   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.043501   8 wide GCC vector extensions Knuth sum
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.047578   Pair-wise sum


  accurate sum 1677721.601677722 sum 1677721.601675747 diff -1.975e-06 relative diff -1.177e-12 runtime 0.204172   OpenMP sum
  accurate sum 1677721.6015625   sum 1677721.6015625   diff          0 relative diff          0 runtime 0.017493   OpenMP sum with bit truncation
  accurate sum 1677721.601677722 sum 1677721.601677722 diff  2.328e-10 relative diff  1.388e-16 runtime 0.007514   OpenMP sum with double double kahan sum accumulator
  accurate sum 1677721.601677721 sum 1677721.601677721 diff          0 relative diff          0 runtime 0.007527   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 67108864 log 26 ndigits 8 ndigitsld 5 nbits 30 nbitsld 15
Initializing mesh with Leblanc problem, high values first
  accurate sum 3355443.203355443 sum 3355443.201976103 diff  -0.001379 relative diff -4.111e-10 runtime 0.120247   Serial sum
  accurate sum 3355443.203355443 sum 3355443.20301729  diff -0.0003382 relative diff -1.008e-10 runtime 0.036777   Serial sum (OpenMP SIMD pragma)
  accurate sum 3355443.2         sum 3355443.2         diff          0 relative diff          0 runtime 0.114435   Serial sum with digit truncation
  accurate sum 3355443           sum 3355443           diff          0 relative diff          0 runtime 0.114394   Serial sum with bit truncation
  accurate sum 3355443.203355443 sum 3355443.203355443 diff  6.115e-20 relative diff  1.822e-26 runtime 1.064309   Serial sum with long double accumulator
  accurate sum 3355443.2034      sum 3355443.2034      diff          0 relative diff          0 runtime 1.064165   Serial sum with long double accumulator with ndigit truncation
  accurate sum 3355443.203353882 sum 3355443.203353882 diff          0 relative diff          0 runtime 1.064255   Serial sum with long double accumulator with bit truncation
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.338548   Serial sum with double double kahan sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.085127   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff -4.657e-10 relative diff -1.388e-16 runtime 0.048838   8 wide GCC vector extensions Kahan sum
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.678946   Serial sum with double double knuth sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.168571   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.087034   8 wide GCC vector extensions Knuth sum
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.096612   Pair-wise sum


  accurate sum 3355443.203355443 sum 3355443.203329055 diff -2.639e-05 relative diff -7.864e-12 runtime 0.025709   OpenMP sum
  accurate sum 3355443.1875      sum 3355443.1875      diff          0 relative diff          0 runtime 0.020038   OpenMP sum with bit truncation
  accurate sum 3355443.203355443 sum 3355443.203355444 diff  4.657e-10 relative diff  1.388e-16 runtime 0.034578   OpenMP sum with double double kahan sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.026432   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 134217728 log 27 ndigits 8 ndigitsld 5 nbits 31 nbitsld 16
Initializing mesh with Leblanc problem, high values first
  accurate sum 6710886.406710886 sum 6710886.393382353 diff   -0.01333 relative diff -1.986e-09 runtime 0.229365   Serial sum
  accurate sum 6710886.406710886 sum 6710886.407973342 diff   0.001262 relative diff  1.881e-10 runtime 0.072655   Serial sum (OpenMP SIMD pragma)
  accurate sum 6710886.4         sum 6710886.4         diff          0 relative diff          0 runtime 0.229341   Serial sum with digit truncation
  accurate sum 6710886           sum 6710886           diff          0 relative diff          0 runtime 0.229542   Serial sum with bit truncation
  accurate sum 6710886.406710886 sum 6710886.406710886 diff  3.781e-19 relative diff  5.635e-26 runtime 2.129336   Serial sum with long double accumulator
  accurate sum 6710886.4067      sum 6710886.4067      diff          0 relative diff          0 runtime 2.136365   Serial sum with long double accumulator with ndigit truncation
  accurate sum 6710886.406677246 sum 6710886.406677246 diff          0 relative diff          0 runtime 2.135791   Serial sum with long double accumulator with bit truncation
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.679677   Serial sum with double double kahan sum accumulator
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.170136   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 6710886.406710886 sum 6710886.406710885 diff -9.313e-10 relative diff -1.388e-16 runtime 0.097632   8 wide GCC vector extensions Kahan sum
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 1.360570   Serial sum with double double knuth sum accumulator
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.337147   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.174102   8 wide GCC vector extensions Knuth sum
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.189999   Pair-wise sum


  accurate sum 6710886.406710886 sum 6710886.406742481 diff  3.159e-05 relative diff  4.708e-12 runtime 0.028420   OpenMP sum
  accurate sum 6710886.375       sum 6710886.375       diff          0 relative diff          0 runtime 0.020530   OpenMP sum with bit truncation
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.032518   OpenMP sum with double double kahan sum accumulator
  accurate sum 6710886.406710885 sum 6710886.406710885 diff          0 relative diff          0 runtime 0.029720   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 268435456 log 28 ndigits 8 ndigitsld 5 nbits 32 nbitsld 16
Initializing mesh with Leblanc problem, high values first
  accurate sum 13421772.81342177 sum 13421772.76838235 diff   -0.04504 relative diff -3.356e-09 runtime 0.459442   Serial sum
  accurate sum 13421772.81342177 sum 13421772.81422335 diff  0.0008016 relative diff  5.972e-11 runtime 0.144123   Serial sum (OpenMP SIMD pragma)
  accurate sum 13421773          sum 13421773          diff          0 relative diff          0 runtime 0.459349   Serial sum with digit truncation
  accurate sum 13421768          sum 13421768          diff          0 relative diff          0 runtime 0.458869   Serial sum with bit truncation
  accurate sum 13421772.81342177 sum 13421772.81342177 diff  -1.29e-18 relative diff -9.615e-26 runtime 4.256777   Serial sum with long double accumulator
  accurate sum 13421772.813      sum 13421772.813      diff          0 relative diff          0 runtime 4.257608   Serial sum with long double accumulator with ndigit truncation
  accurate sum 13421772.81335449 sum 13421772.81335449 diff          0 relative diff          0 runtime 4.262491   Serial sum with long double accumulator with bit truncation
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 1.360813   Serial sum with double double kahan sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.346172   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff -1.863e-09 relative diff -1.388e-16 runtime 0.191460   8 wide GCC vector extensions Kahan sum
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 2.722157   Serial sum with double double knuth sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.674533   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.354346   8 wide GCC vector extensions Knuth sum
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.375694   Pair-wise sum


  accurate sum 13421772.81342177 sum 13421772.81384399 diff  0.0004222 relative diff  3.146e-11 runtime 0.042985   OpenMP sum
  accurate sum 13421772.5        sum 13421772.5        diff          0 relative diff          0 runtime 0.036423   OpenMP sum with bit truncation
  accurate sum 13421772.81342177 sum 13421772.81342177 diff  1.863e-09 relative diff  1.388e-16 runtime 0.053966   OpenMP sum with double double kahan sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.048139   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 536870912 log 29 ndigits 8 ndigitsld 5 nbits 33 nbitsld 17
Initializing mesh with Leblanc problem, high values first
  accurate sum 26843545.62684355 sum 26843545.70588235 diff    0.07904 relative diff  2.944e-09 runtime 0.919617   Serial sum
  accurate sum 26843545.62684355 sum 26843545.59742646 diff   -0.02942 relative diff -1.096e-09 runtime 0.290271   Serial sum (OpenMP SIMD pragma)
  accurate sum 26843546          sum 26843546          diff          0 relative diff          0 runtime 0.919273   Serial sum with digit truncation
  accurate sum 26843520          sum 26843520          diff          0 relative diff          0 runtime 0.919880   Serial sum with bit truncation
  accurate sum 26843545.62684355 sum 26843545.62684355 diff  5.426e-18 relative diff  2.021e-25 runtime 8.519820   Serial sum with long double accumulator
  accurate sum 26843545.627      sum 26843545.627      diff          0 relative diff          0 runtime 8.529478   Serial sum with long double accumulator with ndigit truncation
  accurate sum 26843545.62646484 sum 26843545.62646484 diff          0 relative diff          0 runtime 8.524657   Serial sum with long double accumulator with bit truncation
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 2.718965   Serial sum with double double kahan sum accumulator
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 0.684998   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 26843545.62684355 sum 26843545.62684354 diff -3.725e-09 relative diff -1.388e-16 runtime 0.383919   8 wide GCC vector extensions Kahan sum
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 5.449776   Serial sum with double double knuth sum accumulator
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 1.354597   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 0.696112   8 wide GCC vector extensions Knuth sum
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 1.167620   Pair-wise sum


  accurate sum 26843545.62684355 sum 26843545.62633803 diff -0.0005055 relative diff -1.883e-11 runtime 0.053196   OpenMP sum
  accurate sum 26843544          sum 26843544          diff          0 relative diff          0 runtime 0.045006   OpenMP sum with bit truncation
  accurate sum 26843545.62684355 sum 26843545.62684355 diff  3.725e-09 relative diff  1.388e-16 runtime 0.060509   OpenMP sum with double double kahan sum accumulator
  accurate sum 26843545.62684354 sum 26843545.62684354 diff          0 relative diff          0 runtime 0.204835   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 1073741824 log 30 ndigits 9 ndigitsld 6 nbits 34 nbitsld 18
Initializing mesh with Leblanc problem, high values first
  accurate sum 53687091.25368709 sum 53687091.70588235 diff     0.4522 relative diff  8.423e-09 runtime 1.842679   Serial sum
  accurate sum 53687091.25368709 sum 53687091.22242646 diff   -0.03126 relative diff -5.823e-10 runtime 0.578475   Serial sum (OpenMP SIMD pragma)
  accurate sum 53687090          sum 53687090          diff          0 relative diff          0 runtime 1.838170   Serial sum with digit truncation
  accurate sum 53687040          sum 53687040          diff          0 relative diff          0 runtime 1.843074   Serial sum with bit truncation
  accurate sum 53687091.25368709 sum 53687091.25368709 diff  2.277e-17 relative diff  4.242e-25 runtime 17.039224   Serial sum with long double accumulator
  accurate sum 53687091.25       sum 53687091.25       diff          0 relative diff          0 runtime 17.053614   Serial sum with long double accumulator with ndigit truncation
  accurate sum 53687091.25195312 sum 53687091.25195312 diff          0 relative diff          0 runtime 17.054401   Serial sum with long double accumulator with bit truncation
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 5.429780   Serial sum with double double kahan sum accumulator
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 1.359645   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 53687091.25368709 sum 53687091.25368708 diff -7.451e-09 relative diff -1.388e-16 runtime 0.772594   8 wide GCC vector extensions Kahan sum
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 10.894301   Serial sum with double double knuth sum accumulator
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 2.698743   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 1.393366   8 wide GCC vector extensions Knuth sum
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 1.409613   Pair-wise sum


  accurate sum 53687091.25368709 sum 53687091.24693158 diff  -0.006756 relative diff -1.258e-10 runtime 0.085288   OpenMP sum
  accurate sum 53687088          sum 53687088          diff          0 relative diff          0 runtime 0.073331   OpenMP sum with bit truncation
  accurate sum 53687091.25368709 sum 53687091.2536871  diff  7.451e-09 relative diff  1.388e-16 runtime 0.086350   OpenMP sum with double double kahan sum accumulator
  accurate sum 53687091.25368708 sum 53687091.25368708 diff          0 relative diff          0 runtime 0.097731   OpenMP sum with double double kahan sum accumulator with bit truncation

Scanning dependencies of target distclean
Built target distclean
/usr/bin/modulecmd bash $*
MANPATH=/usr/share/man:/usr/local/share/man ;export MANPATH;PATH=/home/brobey/bin:/home/brobey/parsplice-install/bin:/home/brobey/bin:/home/brobey/parsplice-install/bin:/home/brobey/spack/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/opt/ibutils/bin ;export PATH;unset CC;unset CLANGROOT;unset CLANGVER;unset CPP;unset CXX;unset LD_LIBRARY_PATH;unset LLVMROOT;unset LOADEDMODULES;unset PYTHONPATH;unset _LMFILES_;
/usr/bin/modulecmd bash $*
/usr/bin/modulecmd bash $*
CC=gcc ;export CC;CPP=cpp ;export CPP;CXX=g++ ;export CXX;F77=gfortran ;export F77;F90=gfortran ;export F90;FC=gfortran ;export FC;LD_LIBRARY_PATH=/projects/opt/ppc64le/p9/gcc/9.1.0/lib64:/projects/opt/ppc64le/p9/gcc/9.1.0/lib ;export LD_LIBRARY_PATH;LOADEDMODULES=cmake/3.12.4:gcc/9.1.0 ;export LOADEDMODULES;MANPATH=/projects/opt/ppc64le/p9/gcc/9.1.0/share/man:/usr/share/man:/usr/local/share/man ;export MANPATH;PATH=/projects/opt/ppc64le/p9/gcc/9.1.0/bin:/projects/opt/ppc64le/cmake/3.12.4/bin:/home/brobey/bin:/home/brobey/parsplice-install/bin:/home/brobey/bin:/home/brobey/parsplice-install/bin:/home/brobey/spack/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/opt/ibutils/bin ;export PATH;_LMFILES_=/projects/darwin/modulefiles/ppc64le/cmake/3.12.4:/projects/darwin/modulefiles/ppc64le/gcc/9.1.0 ;export _LMFILES_;
-- The C compiler identification is GNU 9.1.0
-- The CXX compiler identification is GNU 9.1.0
-- Check for working C compiler: /projects/opt/ppc64le/p9/gcc/9.1.0/bin/gcc
-- Check for working C compiler: /projects/opt/ppc64le/p9/gcc/9.1.0/bin/gcc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /projects/opt/ppc64le/p9/gcc/9.1.0/bin/g++
-- Check for working CXX compiler: /projects/opt/ppc64le/p9/gcc/9.1.0/bin/g++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Found OpenMP_C: -fopenmp (found version "4.5") 
-- Found OpenMP_CXX: -fopenmp (found version "4.5") 
-- Found OpenMP: TRUE (found version "4.5")  
-- Trying Fog Vector Class -- fails
-- Trying X86_64 intrinsics -- fails
-- Trying GCC Vector Extensions -- works
-- Trying Quad math library -- works
-- Configuring done
-- Generating done
-- Build files have been written to: /home/brobey/GlobalSums
Scanning dependencies of target globalsums
[  4%] Building C object CMakeFiles/globalsums.dir/globalsums.c.o
/home/brobey/GlobalSums/globalsums.c:542:10: optimized: loop vectorized using 16 byte vectors
/home/brobey/GlobalSums/globalsums.c:542:10: optimized: loop vectorized using 16 byte vectors
/home/brobey/GlobalSums/globalsums.c:540:9: optimized: loop with 2 iterations completely unrolled (header execution count 65489339)
/home/brobey/GlobalSums/globalsums.c:540:9: optimized: loop with 8 iterations completely unrolled (header execution count 32546976)
/home/brobey/GlobalSums/globalsums.c:100:7: missed: statement clobbers memory: printf ("--- num openmp threads in parallel region: %d\n", _2);
/home/brobey/GlobalSums/globalsums.c:104:3: missed: couldn't vectorize loop
/home/brobey/GlobalSums/globalsums.c:104:3: missed: not vectorized: loop nest containing two or more consecutive inner loops cannot be vectorized
/home/brobey/GlobalSums/globalsums.c:488:7: missed: couldn't vectorize loop
/home/brobey/GlobalSums/globalsums.c:489:21: missed: not vectorized: no vectype for stmt: *_99 = 1.0000000000000000000000000000000000445733797301757921829e-10;
 scalar_type: _Float128
/home/brobey/GlobalSums/globalsums.c:488:7: missed: couldn't vectorize loop
/home/brobey/GlobalSums/globalsums.c:489:21: missed: not vectorized: no vectype for stmt: *_87 = 1.0000000000000000000000000000000000481482486096808963264e-1;
 scalar_type: _Float128
/home/brobey/GlobalSums/globalsums.c:137:7: optimized: loop vectorized using 16 byte vectors
/home/brobey/GlobalSums/globalsums.c:137:7: optimized: loop vectorized using 16 byte vectors
/home/brobey/GlobalSums/globalsums.c:137:7: optimized: loop with 2 iterations completely unrolled (header execution count 58285512)
/home/brobey/GlobalSums/globalsums.c:137:7: optimized: loop with 8 iterations completely unrolled (header execution count 28966808)
/home/brobey/GlobalSums/globalsums.c:89:9: missed: statement clobbers memory: nt_112 = omp_get_max_threads ();
/home/brobey/GlobalSums/globalsums.c:90:10: missed: statement clobbers memory: tid_114 = omp_get_thread_num ();
/home/brobey/GlobalSums/globalsums.c:92:9: missed: statement clobbers memory: printf ("--- max num openmp threads: %d\n", nt_112);
/home/brobey/GlobalSums/globalsums.c:82:5: missed: statement clobbers memory: __builtin_GOMP_parallel (main._omp_fn.0, &.omp_data_o.12, 0, 0);
/home/brobey/GlobalSums/globalsums.c:105:27: missed: statement clobbers memory: _2 = pow (2.0e+0, _1);
/home/brobey/GlobalSums/globalsums.c:108:37: missed: statement clobbers memory: _4 = log (_3);
/home/brobey/GlobalSums/globalsums.c:109:37: missed: statement clobbers memory: _8 = log (_3);
/home/brobey/GlobalSums/globalsums.c:110:40: missed: statement clobbers memory: _11 = log (_3);
/home/brobey/GlobalSums/globalsums.c:113:36: missed: statement clobbers memory: _15 = log (_3);
/home/brobey/GlobalSums/globalsums.c:114:36: missed: statement clobbers memory: _19 = log (_3);
/home/brobey/GlobalSums/globalsums.c:116:109: missed: statement clobbers memory: _22 = log2 (_3);
/home/brobey/GlobalSums/globalsums.c:116:7: missed: statement clobbers memory: printf ("SETTINGS INFO -- ncells %ld log %d ndigits %d ndigitsld %d nbits %d nbitsld %d\n", ncells_123, _23, ndigits_133, ndigitsld_135, nbits_126, nbitsld_128);
/home/brobey/GlobalSums/globalsums.c:133:34: missed: statement clobbers memory: energy_146 = malloc (_36);
/home/brobey/GlobalSums/globalsums.c:136:7: missed: statement clobbers memory: __builtin_puts (&"Initializing mesh with Leblanc problem, high values first"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:156:18: missed: statement clobbers memory: test_sum_151 = do_sum_novec (energy_146, ncells_123);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:160:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", accurate_sum_140, test_sum_151, _40, _41, result_439);
/home/brobey/GlobalSums/globalsums.c:162:7: missed: statement clobbers memory: __builtin_puts (&"   Serial sum"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:168:18: missed: statement clobbers memory: test_sum_158 = do_sum (energy_146, ncells_123);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:171:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", accurate_sum_140, test_sum_158, _42, _43, result_431);
/home/brobey/GlobalSums/globalsums.c:173:7: missed: statement clobbers memory: __builtin_puts (&"   Serial sum (OpenMP SIMD pragma)"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:179:18: missed: statement clobbers memory: test_sum_163 = do_sum_wdigittrunc (energy_146, ncells_123, ndigits_133);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:617:17: missed: statement clobbers memory: _594 = log10 (accurate_sum_140);
/home/brobey/GlobalSums/globalsums.c:620:21: missed: statement clobbers memory: mult_599 = pow (1.0e+1, _598);
/home/brobey/GlobalSums/globalsums.c:623:20: missed: statement clobbers memory: div_605 = pow (1.0e+1, _604);
/home/brobey/GlobalSums/globalsums.c:183:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", _609, test_sum_163, _44, _45, result_423);
/home/brobey/GlobalSums/globalsums.c:185:7: missed: statement clobbers memory: __builtin_puts (&"   Serial sum with digit truncation"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:191:18: missed: statement clobbers memory: test_sum_170 = do_sum_wbittrunc (energy_146, ncells_123, nbits_126);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:630:23: missed: not vectorized: more than one data ref in stmt: bitmask = *.LC0;
/home/brobey/GlobalSums/globalsums.c:196:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", var_407, test_sum_170, _46, _47, result_415);
/home/brobey/GlobalSums/globalsums.c:198:7: missed: statement clobbers memory: __builtin_puts (&"   Serial sum with bit truncation"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:204:20: missed: statement clobbers memory: test_ldsum_177 = do_ldsum (energy_146, ncells_123);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:207:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", _48, _49, _51, _53, result_401);
/home/brobey/GlobalSums/globalsums.c:209:7: missed: statement clobbers memory: __builtin_puts (&"   Serial sum with long double accumulator"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:215:20: missed: statement clobbers memory: test_ldsum_182 = do_ldsum_wdigittrunc (energy_146, ncells_123, ndigitsld_135);
/home/brobey/GlobalSums/globalsums.c:617:17: missed: statement clobbers memory: _578 = log10 (_48);
/home/brobey/GlobalSums/globalsums.c:620:21: missed: statement clobbers memory: mult_583 = pow (1.0e+1, _582);
/home/brobey/GlobalSums/globalsums.c:623:20: missed: statement clobbers memory: div_589 = pow (1.0e+1, _588);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:220:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", _593, _56, _58, _60, result_393);
/home/brobey/GlobalSums/globalsums.c:222:7: missed: statement clobbers memory: __builtin_puts (&"   Serial sum with long double accumulator with ndigit truncation"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:228:20: missed: statement clobbers memory: test_ldsum_189 = do_ldsum_wbittrunc (energy_146, ncells_123, nbitsld_128);
/home/brobey/GlobalSums/globalsums.c:630:23: missed: not vectorized: more than one data ref in stmt: bitmask = *.LC0;
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:233:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", var_385, _63, _65, _67, result_379);
/home/brobey/GlobalSums/globalsums.c:235:7: missed: statement clobbers memory: __builtin_puts (&"   Serial sum with long double accumulator with bit truncation"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:241:18: missed: statement clobbers memory: test_sum_196 = do_kahan_sum (energy_146, ncells_123);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:244:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", accurate_sum_140, test_sum_196, _68, _69, result_371);
/home/brobey/GlobalSums/globalsums.c:246:7: missed: statement clobbers memory: __builtin_puts (&"   Serial sum with double double kahan sum accumulator"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:266:18: missed: statement clobbers memory: test_sum_201 = do_kahan_sum_gcc_v (energy_146, ncells_123);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:269:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", accurate_sum_140, test_sum_201, _70, _71, result_363);
/home/brobey/GlobalSums/globalsums.c:271:7: missed: statement clobbers memory: __builtin_puts (&"   GCC Extensions Vectorized sum with double double kahan sum accumulator"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:309:18: missed: statement clobbers memory: test_sum_206 = do_kahan_sum_gcc_v8 (energy_146, ncells_123);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:313:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", accurate_sum_140, test_sum_206, _72, _73, result_355);
/home/brobey/GlobalSums/globalsums.c:315:7: missed: statement clobbers memory: __builtin_puts (&"   8 wide GCC vector extensions Kahan sum"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:336:18: missed: statement clobbers memory: test_sum_211 = do_knuth_sum (energy_146, ncells_123);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:339:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", accurate_sum_140, test_sum_211, _74, _75, result_347);
/home/brobey/GlobalSums/globalsums.c:341:7: missed: statement clobbers memory: __builtin_puts (&"   Serial sum with double double knuth sum accumulator"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:361:18: missed: statement clobbers memory: test_sum_216 = do_knuth_sum_gcc_v (energy_146, ncells_123);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:364:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", accurate_sum_140, test_sum_216, _76, _77, result_339);
/home/brobey/GlobalSums/globalsums.c:366:7: missed: statement clobbers memory: __builtin_puts (&"   GCC Extensions Vectorized sum with double double knuth sum accumulator"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:403:18: missed: statement clobbers memory: test_sum_221 = do_knuth_sum_gcc_v8 (energy_146, ncells_123);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:407:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", accurate_sum_140, test_sum_221, _78, _79, result_331);
/home/brobey/GlobalSums/globalsums.c:409:7: missed: statement clobbers memory: __builtin_puts (&"   8 wide GCC vector extensions Knuth sum"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:430:18: missed: statement clobbers memory: test_sum_226 = do_pair_sum (energy_146, ncells_123);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:433:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", accurate_sum_140, test_sum_226, _80, _81, result_323);
/home/brobey/GlobalSums/globalsums.c:435:7: missed: statement clobbers memory: __builtin_puts (&"   Pair-wise sum"[0]);
/home/brobey/GlobalSums/globalsums.c:439:7: missed: statement clobbers memory: __builtin_putchar (10);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:446:20: missed: statement clobbers memory: test_qdsum_232 = do_qdsum (energy_146, ncells_123);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:450:7: missed: statement clobbers memory: quadmath_snprintf (&quadstring1, 24, "%-25.24Qg", accurate_qdsum_144);
/home/brobey/GlobalSums/globalsums.c:451:7: missed: statement clobbers memory: quadmath_snprintf (&quadstring2, 24, "%-25.24Qg", test_qdsum_232);
/home/brobey/GlobalSums/globalsums.c:452:7: missed: statement clobbers memory: quadmath_snprintf (&quadstring3, 24, "%-20.14Qg", _82);
/home/brobey/GlobalSums/globalsums.c:453:7: missed: statement clobbers memory: quadmath_snprintf (&quadstring4, 24, "%-20.14Qg", _83);
/home/brobey/GlobalSums/globalsums.c:454:7: missed: statement clobbers memory: printf ("  accurate sum %-24s sum %-24s diff %-20s relative diff %-20s runtime %lf", &quadstring1, &quadstring2, &quadstring3, &quadstring4, result_315);
/home/brobey/GlobalSums/globalsums.c:456:7: missed: statement clobbers memory: __builtin_puts (&"   Serial sum with quad double accumulator"[0]);
/home/brobey/GlobalSums/globalsums.c:483:7: missed: statement clobbers memory: free (energy_146);
/home/brobey/GlobalSums/globalsums.c:486:43: missed: statement clobbers memory: energyq_242 = malloc (_84);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:496:20: missed: statement clobbers memory: test_qdsum_246 = do_full_qdsum (energyq_242, ncells_123);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:500:7: missed: statement clobbers memory: quadmath_snprintf (&quadstring1, 24, "%-25.24Qg", accurate_qdsum_144);
/home/brobey/GlobalSums/globalsums.c:501:7: missed: statement clobbers memory: quadmath_snprintf (&quadstring2, 24, "%-25.24Qg", test_qdsum_246);
/home/brobey/GlobalSums/globalsums.c:502:7: missed: statement clobbers memory: quadmath_snprintf (&quadstring3, 24, "%-20.14Qg", _88);
/home/brobey/GlobalSums/globalsums.c:503:7: missed: statement clobbers memory: quadmath_snprintf (&quadstring4, 24, "%-20.14Qg", _89);
/home/brobey/GlobalSums/globalsums.c:504:7: missed: statement clobbers memory: printf ("  accurate sum %-24s sum %-24s diff %-20s relative diff %-20s runtime %lf", &quadstring1, &quadstring2, &quadstring3, &quadstring4, result_487);
/home/brobey/GlobalSums/globalsums.c:506:7: missed: statement clobbers memory: __builtin_puts (&"   Serial sum with quad double accumulator and quad terms"[0]);
/home/brobey/GlobalSums/globalsums.c:532:7: missed: statement clobbers memory: free (energyq_242);
/home/brobey/GlobalSums/globalsums.c:535:7: missed: statement clobbers memory: __builtin_putchar (10);
/home/brobey/GlobalSums/globalsums.c:537:26: missed: statement clobbers memory: energy_258 = malloc (_36);
/home/brobey/GlobalSums/globalsums.c:82:5: missed: statement clobbers memory: __builtin_GOMP_parallel (main._omp_fn.1, &.omp_data_o.14, 0, 0);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:549:18: missed: statement clobbers memory: test_sum_268 = do_sum_omp (energy_258, ncells_123);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:552:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", accurate_sum_140, test_sum_268, _90, _91, result_479);
/home/brobey/GlobalSums/globalsums.c:554:7: missed: statement clobbers memory: __builtin_puts (&"   OpenMP sum"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:560:18: missed: statement clobbers memory: test_sum_275 = do_sum_omp_wbittrunc (energy_258, ncells_123, nbitsomp_130);
/home/brobey/GlobalSums/globalsums.c:630:23: missed: not vectorized: more than one data ref in stmt: bitmask = *.LC0;
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:566:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", var_471, test_sum_275, _92, _93, result_466);
/home/brobey/GlobalSums/globalsums.c:568:7: missed: statement clobbers memory: __builtin_puts (&"   OpenMP sum with bit truncation"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:574:18: missed: statement clobbers memory: test_sum_283 = do_kahan_sum_omp (energy_258, ncells_123);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:577:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", accurate_sum_140, test_sum_283, _94, _95, result_458);
/home/brobey/GlobalSums/globalsums.c:579:7: missed: statement clobbers memory: __builtin_puts (&"   OpenMP sum with double double kahan sum accumulator"[0]);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, &cpu_timer);
/home/brobey/GlobalSums/globalsums.c:585:18: missed: statement clobbers memory: test_sum_288 = do_kahan_sum_omp_wbittrunc (energy_258, ncells_123, 2);
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:590:7: missed: statement clobbers memory: printf ("  accurate sum %-17.16lg sum %-17.16lg diff %10.4lg relative diff %10.4lg runtime %lf", var_450, test_sum_288, _97, _98, result_447);
/home/brobey/GlobalSums/globalsums.c:592:7: missed: statement clobbers memory: __builtin_puts (&"   OpenMP sum with double double kahan sum accumulator with bit truncation"[0]);
/home/brobey/GlobalSums/globalsums.c:595:7: missed: statement clobbers memory: free (energy_258);
/home/brobey/GlobalSums/globalsums.c:597:7: missed: statement clobbers memory: __builtin_putchar (10);
/home/brobey/GlobalSums/globalsums.c:602:4: missed: statement clobbers memory: clock_gettime (1, tstart_cpu_2(D));
/home/brobey/GlobalSums/globalsums.c:607:4: missed: statement clobbers memory: clock_gettime (1, &tstop_cpu);
/home/brobey/GlobalSums/globalsums.c:617:17: missed: statement clobbers memory: _1 = log10 (var_13(D));
/home/brobey/GlobalSums/globalsums.c:620:21: missed: statement clobbers memory: mult_22 = pow (1.0e+1, _3);
/home/brobey/GlobalSums/globalsums.c:623:20: missed: statement clobbers memory: div_19 = pow (1.0e+1, _7);
/home/brobey/GlobalSums/globalsums.c:630:23: missed: not vectorized: more than one data ref in stmt: bitmask = *.LC0;
[  8%] Building C object CMakeFiles/globalsums.dir/do_kahan_sum.c.o
/home/brobey/GlobalSums/do_kahan_sum.c:10:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_kahan_sum.c:13:59: missed: not vectorized: unsupported use in stmt.
[ 12%] Building C object CMakeFiles/globalsums.dir/serial_sum_novec.c.o
[ 16%] Building C object CMakeFiles/globalsums.dir/do_kahan_sum_omp.c.o
/home/brobey/GlobalSums/do_kahan_sum_omp.c:10:31: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_kahan_sum_omp.c:10:9: missed: not vectorized: number of iterations cannot be computed.
/home/brobey/GlobalSums/do_kahan_sum_omp.c:19:10: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_kahan_sum_omp.c:21:62: missed: not vectorized: unsupported use in stmt.
/home/brobey/GlobalSums/do_kahan_sum_omp.c:10:9: missed: statement clobbers memory: _46 = __sync_val_compare_and_swap_8 (_39, _4, _44);
/home/brobey/GlobalSums/do_kahan_sum_omp.c:10:9: missed: statement clobbers memory: __builtin_GOMP_barrier ();
/home/brobey/GlobalSums/do_kahan_sum_omp.c:26:9: missed: statement clobbers memory: __builtin_GOMP_barrier ();
/home/brobey/GlobalSums/do_kahan_sum_omp.c:10:9: missed: statement clobbers memory: _41 = __atomic_load_8 (_39, 0);
/home/brobey/GlobalSums/do_kahan_sum_omp.c:10:9: missed: statement clobbers memory: _46 = __sync_val_compare_and_swap_8 (_39, _4, _44);
/home/brobey/GlobalSums/do_kahan_sum_omp.c:1:8: missed: statement clobbers memory: __builtin_GOMP_parallel (do_kahan_sum_omp._omp_fn.0, &.omp_data_o.3, 0, 0);
[ 20%] Building C object CMakeFiles/globalsums.dir/do_kahan_sum_omp_wbittrunc.c.o
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:23:10: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:25:62: missed: not vectorized: unsupported use in stmt.
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:14:9: missed: statement clobbers memory: __builtin_GOMP_barrier ();
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:37:9: missed: statement clobbers memory: __builtin_GOMP_barrier ();
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:14:9: missed: statement clobbers memory: __builtin_GOMP_atomic_start ();
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:14:9: missed: statement clobbers memory: __builtin_GOMP_atomic_end ();
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:14:9: optimized: basic block part vectorized using 16 byte vectors
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:4:8: missed: statement clobbers memory: __builtin_GOMP_parallel (do_kahan_sum_omp_wbittrunc._omp_fn.0, &.omp_data_o.3, 0, 0);
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:14:9: optimized: basic block part vectorized using 16 byte vectors
/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c:46:10: missed: statement clobbers memory: sum_13 = bittruncate (sum_9, nbits_11(D));
[ 25%] Building C object CMakeFiles/globalsums.dir/do_knuth_sum.c.o
/home/brobey/GlobalSums/do_knuth_sum.c:13:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_knuth_sum.c:15:9: missed: not vectorized: unsupported use in stmt.
[ 29%] Building C object CMakeFiles/globalsums.dir/do_ldsum.c.o
/home/brobey/GlobalSums/do_ldsum.c:5:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_ldsum.c:1:13: missed: not vectorized: unsupported data-type long double
[ 33%] Building C object CMakeFiles/globalsums.dir/do_ldsum_wbittrunc.c.o
/home/brobey/GlobalSums/do_ldsum_wbittrunc.c:8:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_ldsum_wbittrunc.c:4:13: missed: not vectorized: unsupported data-type long double
/home/brobey/GlobalSums/do_ldsum_wbittrunc.c:12:12: missed: statement clobbers memory: _7 = bittruncate (prephitmp_37, nbits_13(D));
[ 37%] Building C object CMakeFiles/globalsums.dir/do_ldsum_wdigittrunc.c.o
/home/brobey/GlobalSums/do_ldsum_wdigittrunc.c:7:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_ldsum_wdigittrunc.c:3:13: missed: not vectorized: unsupported data-type long double
/home/brobey/GlobalSums/do_ldsum_wdigittrunc.c:11:12: missed: statement clobbers memory: _7 = digitround (prephitmp_37, ndigits_13(D));
[ 41%] Building C object CMakeFiles/globalsums.dir/do_pair_sum.c.o
/home/brobey/GlobalSums/do_pair_sum.c:14:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_pair_sum.c:14:4: missed: not vectorized: control flow in loop.
/home/brobey/GlobalSums/do_pair_sum.c:16:7: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_pair_sum.c:16:7: missed: Loop costings may not be worthwhile.
/home/brobey/GlobalSums/do_pair_sum.c:10:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_pair_sum.c:10:4: missed: Loop costings may not be worthwhile.
/home/brobey/GlobalSums/do_pair_sum.c:7:30: missed: statement clobbers memory: pwsum_37 = malloc (_3);
/home/brobey/GlobalSums/do_pair_sum.c:14:23: missed: statement clobbers memory: _26 = log2 (_86);
/home/brobey/GlobalSums/do_pair_sum.c:22:4: missed: statement clobbers memory: free (pwsum_37);
[ 45%] Building C object CMakeFiles/globalsums.dir/do_sum.c.o
/home/brobey/GlobalSums/do_sum.c:5:9: optimized: Loop 1 distributed: split to 0 loops and 1 library calls.
/home/brobey/GlobalSums/do_sum.c:5:9: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_sum.c:5:9: missed: Loop costings may not be worthwhile.
/home/brobey/GlobalSums/do_sum.c:7:7: optimized: loop vectorized using 16 byte vectors
/home/brobey/GlobalSums/do_sum.c:1:8: optimized: loop with 1 iterations completely unrolled (header execution count 105119324)
/home/brobey/GlobalSums/do_sum.c:1:8: optimized: loop turned into non-loop; it never loops
/home/brobey/GlobalSums/do_sum.c:1:8: missed: statement clobbers memory: __builtin_memset (&D.2965, 0, _32);
[ 50%] Building C object CMakeFiles/globalsums.dir/do_sum_omp.c.o
/home/brobey/GlobalSums/do_sum_omp.c:5:35: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_sum_omp.c:5:9: missed: not vectorized: number of iterations cannot be computed.
/home/brobey/GlobalSums/do_sum_omp.c:7:7: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_sum_omp.c:7:7: missed: Loop costings may not be worthwhile.
/home/brobey/GlobalSums/do_sum_omp.c:5:9: missed: statement clobbers memory: _35 = __sync_val_compare_and_swap_8 (_28, _6, _33);
/home/brobey/GlobalSums/do_sum_omp.c:5:9: missed: statement clobbers memory: _30 = __atomic_load_8 (_28, 0);
/home/brobey/GlobalSums/do_sum_omp.c:5:9: missed: statement clobbers memory: _35 = __sync_val_compare_and_swap_8 (_28, _6, _33);
/home/brobey/GlobalSums/do_sum_omp.c:1:8: missed: statement clobbers memory: __builtin_GOMP_parallel (do_sum_omp._omp_fn.0, &.omp_data_o.3, 0, 0);
[ 54%] Building C object CMakeFiles/globalsums.dir/do_sum_omp_wbittrunc.c.o
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:8:35: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:8:9: missed: not vectorized: number of iterations cannot be computed.
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:10:7: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:10:7: missed: Loop costings may not be worthwhile.
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:8:9: missed: statement clobbers memory: _35 = __sync_val_compare_and_swap_8 (_28, _6, _33);
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:8:9: missed: statement clobbers memory: _30 = __atomic_load_8 (_28, 0);
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:8:9: missed: statement clobbers memory: _35 = __sync_val_compare_and_swap_8 (_28, _6, _33);
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:4:8: missed: statement clobbers memory: __builtin_GOMP_parallel (do_sum_omp_wbittrunc._omp_fn.0, &.omp_data_o.3, 0, 0);
/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c:13:10: missed: statement clobbers memory: sum_12 = bittruncate (sum_8, nbits_10(D));
[ 58%] Building C object CMakeFiles/globalsums.dir/do_sum_wbittrunc.c.o
/home/brobey/GlobalSums/do_sum_wbittrunc.c:8:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_sum_wbittrunc.c:8:4: missed: Loop costings may not be worthwhile.
/home/brobey/GlobalSums/do_sum_wbittrunc.c:12:10: missed: statement clobbers memory: sum_12 = bittruncate (sum_18, nbits_10(D));
[ 62%] Building C object CMakeFiles/globalsums.dir/do_sum_wdigittrunc.c.o
/home/brobey/GlobalSums/do_sum_wdigittrunc.c:7:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_sum_wdigittrunc.c:7:4: missed: Loop costings may not be worthwhile.
/home/brobey/GlobalSums/do_sum_wdigittrunc.c:11:10: missed: statement clobbers memory: sum_12 = digitround (sum_18, ndigits_10(D));
[ 66%] Building C object CMakeFiles/globalsums.dir/kahan_gcc_vector.c.o
/home/brobey/GlobalSums/kahan_gcc_vector.c:30:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/kahan_gcc_vector.c:33:63: missed: not vectorized: unsupported use in stmt.
/home/brobey/GlobalSums/kahan_gcc_vector.c:11:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/kahan_gcc_vector.c:12:14: missed: not vectorized: no vectype for stmt: var_v_28 = MEM[(vec4d *)_3];
 scalar_type: vec4d
/home/brobey/GlobalSums/kahan_gcc_vector.c:30:4: optimized: loop with 3 iterations completely unrolled (header execution count 118111601)
[ 70%] Building C object CMakeFiles/globalsums.dir/kahan_gcc_vector8.c.o
/home/brobey/GlobalSums/kahan_gcc_vector8.c:29:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/kahan_gcc_vector8.c:32:63: missed: not vectorized: unsupported use in stmt.
/home/brobey/GlobalSums/kahan_gcc_vector8.c:10:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/kahan_gcc_vector8.c:11:14: missed: not vectorized: no vectype for stmt: var_v_28 = MEM[(vec8d *)_3];
 scalar_type: vec8d
/home/brobey/GlobalSums/kahan_gcc_vector8.c:29:4: optimized: loop with 7 iterations completely unrolled (header execution count 118111604)
[ 75%] Building C object CMakeFiles/globalsums.dir/knuth_gcc_vector.c.o
/home/brobey/GlobalSums/knuth_gcc_vector.c:30:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/knuth_gcc_vector.c:33:12: missed: not vectorized: unsupported use in stmt.
/home/brobey/GlobalSums/knuth_gcc_vector.c:11:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/knuth_gcc_vector.c:12:13: missed: not vectorized: no vectype for stmt: var_v_28 = MEM[(vec4d *)_3];
 scalar_type: vec4d
/home/brobey/GlobalSums/knuth_gcc_vector.c:30:4: optimized: loop with 3 iterations completely unrolled (header execution count 118111601)
[ 79%] Building C object CMakeFiles/globalsums.dir/knuth_gcc_vector8.c.o
/home/brobey/GlobalSums/knuth_gcc_vector8.c:30:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/knuth_gcc_vector8.c:33:12: missed: not vectorized: unsupported use in stmt.
/home/brobey/GlobalSums/knuth_gcc_vector8.c:11:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/knuth_gcc_vector8.c:12:13: missed: not vectorized: no vectype for stmt: var_v_28 = MEM[(vec8d *)_3];
 scalar_type: vec8d
/home/brobey/GlobalSums/knuth_gcc_vector8.c:30:4: optimized: loop with 7 iterations completely unrolled (header execution count 118111604)
[ 83%] Building C object CMakeFiles/globalsums.dir/do_full_qdsum.c.o
/home/brobey/GlobalSums/do_full_qdsum.c:7:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_full_qdsum.c:8:32: missed: not vectorized: no vectype for stmt: _4 = *_3;
 scalar_type: _Float128
[ 87%] Building C object CMakeFiles/globalsums.dir/do_full_qdsum_wtrunc.c.o
/home/brobey/GlobalSums/do_full_qdsum_wtrunc.c:8:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_full_qdsum_wtrunc.c:9:32: missed: not vectorized: no vectype for stmt: _4 = *_3;
 scalar_type: _Float128
/home/brobey/GlobalSums/do_full_qdsum_wtrunc.c:12:17: missed: statement clobbers memory: _6 = log10 (prephitmp_43);
/home/brobey/GlobalSums/do_full_qdsum_wtrunc.c:13:22: missed: statement clobbers memory: _9 = pow (1.0e+1, _8);
[ 91%] Building C object CMakeFiles/globalsums.dir/do_qdsum.c.o
/home/brobey/GlobalSums/do_qdsum.c:7:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_qdsum.c:3:12: missed: not vectorized: unsupported data-type _Float128
[ 95%] Building C object CMakeFiles/globalsums.dir/do_qdsum_wtrunc.c.o
/home/brobey/GlobalSums/do_qdsum_wtrunc.c:8:4: missed: couldn't vectorize loop
/home/brobey/GlobalSums/do_qdsum_wtrunc.c:4:12: missed: not vectorized: unsupported data-type _Float128
/home/brobey/GlobalSums/do_qdsum_wtrunc.c:12:17: missed: statement clobbers memory: _7 = log10 (prephitmp_47);
/home/brobey/GlobalSums/do_qdsum_wtrunc.c:13:22: missed: statement clobbers memory: _10 = pow (1.0e+1, _9);
[100%] Linking C executable globalsums
[100%] Built target globalsums
--- max num openmp threads: 160
--- num openmp threads in parallel region: 160
SETTINGS INFO -- ncells 16 log 4 ndigits 3 ndigitsld 0 nbits 8 nbitsld 2
Initializing mesh with Leblanc problem, high values first
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Serial sum
  accurate sum 0.8000000008      sum 0.8000000008000001 diff   1.11e-16 relative diff  1.388e-16 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000003   Serial sum with digit truncation
  accurate sum 0.8000000007999972 sum 0.8000000007999972 diff          0 relative diff          0 runtime 0.000002   Serial sum with bit truncation
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000001   Serial sum with long double accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000001   Serial sum with long double accumulator with ndigit truncation
  accurate sum 0.8000000007999999 sum 0.8000000007999999 diff          0 relative diff          0 runtime 0.000001   Serial sum with long double accumulator with bit truncation
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double kahan sum accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 0.8000000008      sum 0.8000000007999999 diff  -1.11e-16 relative diff -1.388e-16 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double knuth sum accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000001   8 wide GCC vector extensions Knuth sum
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000002   Pair-wise sum

  accurate sum 0.8000000008             sum 0.800000000800000044408  diff 4.4408921014152e-17  relative diff 5.5511151212179e-17  runtime 0.000002   Serial sum with quad double accumulator
  accurate sum 0.8000000008             sum 0.8000000008             diff -2.8888949165809e-34 relative diff -3.6111186421149e-34 runtime 0.000002   Serial sum with quad double accumulator and quad terms

  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.005682   OpenMP sum
  accurate sum 0.8000000007999972 sum 0.8000000007999972 diff          0 relative diff          0 runtime 0.004728   OpenMP sum with bit truncation
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.007685   OpenMP sum with double double kahan sum accumulator
  accurate sum 0.8000000007999999 sum 0.8000000007999999 diff          0 relative diff          0 runtime 0.011718   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 32 log 5 ndigits 4 ndigitsld 1 nbits 9 nbitsld 3
Initializing mesh with Leblanc problem, high values first
  accurate sum 1.6000000016      sum 1.6000000016      diff  4.441e-16 relative diff  2.776e-16 runtime 0.000000   Serial sum
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000001   Serial sum with digit truncation
  accurate sum 1.600000001599938 sum 1.600000001599938 diff          0 relative diff          0 runtime 0.000000   Serial sum with bit truncation
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000001   Serial sum with long double accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000001   Serial sum with long double accumulator with ndigit truncation
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000001   Serial sum with long double accumulator with bit truncation
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double kahan sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff  -2.22e-16 relative diff -1.388e-16 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double knuth sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   8 wide GCC vector extensions Knuth sum
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000001   Pair-wise sum

  accurate sum 1.6000000016             sum 1.600000001600000088817  diff 8.8817842028304e-17  relative diff 5.5511151212179e-17  runtime 0.000002   Serial sum with quad double accumulator
  accurate sum 1.6000000016             sum 1.6000000016             diff 1.3481509610711e-33  relative diff 8.4259434982682e-34  runtime 0.000002   Serial sum with quad double accumulator and quad terms

  accurate sum 1.6000000016      sum 1.600000001600001 diff  6.661e-16 relative diff  4.163e-16 runtime 0.004518   OpenMP sum
  accurate sum 1.600000001599994 sum 1.600000001599994 diff          0 relative diff          0 runtime 0.004465   OpenMP sum with bit truncation
  accurate sum 1.6000000016      sum 1.600000001600001 diff  6.661e-16 relative diff  4.163e-16 runtime 0.009286   OpenMP sum with double double kahan sum accumulator
  accurate sum 1.6000000016      sum 1.600000001600001 diff  8.882e-16 relative diff  5.551e-16 runtime 0.011413   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 64 log 6 ndigits 4 ndigitsld 1 nbits 9 nbitsld 3
Initializing mesh with Leblanc problem, high values first
  accurate sum 3.2000000032      sum 3.200000003200002 diff  1.776e-15 relative diff  5.551e-16 runtime 0.000001   Serial sum
  accurate sum 3.2000000032      sum 3.200000003200001 diff  8.882e-16 relative diff  2.776e-16 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000002   Serial sum with digit truncation
  accurate sum 3.200000003199875 sum 3.200000003199875 diff          0 relative diff          0 runtime 0.000001   Serial sum with bit truncation
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000002   Serial sum with long double accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000002   Serial sum with long double accumulator with ndigit truncation
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000002   Serial sum with long double accumulator with bit truncation
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double kahan sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000001   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff -4.441e-16 relative diff -1.388e-16 runtime 0.000002   8 wide GCC vector extensions Kahan sum
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000001   Serial sum with double double knuth sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000001   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000002   8 wide GCC vector extensions Knuth sum
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000002   Pair-wise sum

  accurate sum 3.2000000032             sum 3.200000003200000177635  diff 1.7763568405661e-16  relative diff 5.5511151212179e-17  runtime 0.000006   Serial sum with quad double accumulator
  accurate sum 3.2000000032             sum 3.2000000032             diff 3.466673899897e-33   relative diff 1.0833355926345e-33  runtime 0.000005   Serial sum with quad double accumulator and quad terms

  accurate sum 3.2000000032      sum 3.200000003200002 diff   2.22e-15 relative diff  6.939e-16 runtime 0.006477   OpenMP sum
  accurate sum 3.200000003199989 sum 3.200000003199989 diff          0 relative diff          0 runtime 0.003151   OpenMP sum with bit truncation
  accurate sum 3.2000000032      sum 3.200000003200002 diff   2.22e-15 relative diff  6.939e-16 runtime 0.009546   OpenMP sum with double double kahan sum accumulator
  accurate sum 3.2000000032      sum 3.200000003200001 diff  1.776e-15 relative diff  5.551e-16 runtime 0.009081   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 128 log 7 ndigits 4 ndigitsld 1 nbits 11 nbitsld 4
Initializing mesh with Leblanc problem, high values first
  accurate sum 6.4000000064      sum 6.400000006399994 diff -6.217e-15 relative diff -9.714e-16 runtime 0.000000   Serial sum
  accurate sum 6.4000000064      sum 6.400000006400004 diff  3.553e-15 relative diff  5.551e-16 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000001   Serial sum with digit truncation
  accurate sum 6.400000006398841 sum 6.400000006398841 diff          0 relative diff          0 runtime 0.000000   Serial sum with bit truncation
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000002   Serial sum with long double accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000003   Serial sum with long double accumulator with ndigit truncation
  accurate sum 6.400000006399992 sum 6.400000006399992 diff          0 relative diff          0 runtime 0.000002   Serial sum with long double accumulator with bit truncation
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000001   Serial sum with double double kahan sum accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000001   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 6.4000000064      sum 6.400000006399999 diff -8.882e-16 relative diff -1.388e-16 runtime 0.000001   8 wide GCC vector extensions Kahan sum
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000001   Serial sum with double double knuth sum accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000001   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000001   8 wide GCC vector extensions Knuth sum
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000002   Pair-wise sum

  accurate sum 6.4000000064             sum 6.400000006400000355271  diff 3.5527136811322e-16  relative diff 5.5511151212179e-17  runtime 0.000009   Serial sum with quad double accumulator
  accurate sum 6.4000000064             sum 6.4000000064             diff -2.6192647243666e-32 relative diff -4.0926011277303e-33 runtime 0.000010   Serial sum with quad double accumulator and quad terms

  accurate sum 6.4000000064      sum 6.400000006399994 diff -6.217e-15 relative diff -9.714e-16 runtime 0.006363   OpenMP sum
  accurate sum 6.400000006399978 sum 6.400000006399978 diff          0 relative diff          0 runtime 0.002909   OpenMP sum with bit truncation
  accurate sum 6.4000000064      sum 6.400000006399995 diff -5.329e-15 relative diff -8.327e-16 runtime 0.009734   OpenMP sum with double double kahan sum accumulator
  accurate sum 6.400000006399999 sum 6.400000006399992 diff -7.105e-15 relative diff  -1.11e-15 runtime 0.009586   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 256 log 8 ndigits 4 ndigitsld 1 nbits 12 nbitsld 4
Initializing mesh with Leblanc problem, high values first
  accurate sum 12.8000000128     sum 12.80000001279997 diff -2.842e-14 relative diff  -2.22e-15 runtime 0.000001   Serial sum
  accurate sum 12.8000000128     sum 12.80000001279999 diff -1.243e-14 relative diff -9.714e-16 runtime 0.000001   Serial sum (OpenMP SIMD pragma)
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000002   Serial sum with digit truncation
  accurate sum 12.80000001279404 sum 12.80000001279404 diff          0 relative diff          0 runtime 0.000001   Serial sum with bit truncation
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000004   Serial sum with long double accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000005   Serial sum with long double accumulator with ndigit truncation
  accurate sum 12.80000001279998 sum 12.80000001279998 diff          0 relative diff          0 runtime 0.000004   Serial sum with long double accumulator with bit truncation
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000001   Serial sum with double double kahan sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000001   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff -1.776e-15 relative diff -1.388e-16 runtime 0.000001   8 wide GCC vector extensions Kahan sum
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000002   Serial sum with double double knuth sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000002   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000001   8 wide GCC vector extensions Knuth sum
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000002   Pair-wise sum

  accurate sum 12.8000000128            sum 12.80000001280000071054  diff 7.1054273622643e-16  relative diff 5.5511151212179e-17  runtime 0.000018   Serial sum with quad double accumulator
  accurate sum 12.8000000128            sum 12.8000000128            diff -6.6251990086921e-32 relative diff -5.1759367203648e-33 runtime 0.000020   Serial sum with quad double accumulator and quad terms

  accurate sum 12.8000000128     sum 12.80000001279999 diff -1.066e-14 relative diff -8.327e-16 runtime 0.004712   OpenMP sum
  accurate sum 12.8000000127995  sum 12.8000000127995  diff          0 relative diff          0 runtime 0.004934   OpenMP sum with bit truncation
  accurate sum 12.8000000128     sum 12.80000001279999 diff -1.066e-14 relative diff -8.327e-16 runtime 0.009213   OpenMP sum with double double kahan sum accumulator
  accurate sum 12.8000000128     sum 12.80000001279998 diff -1.421e-14 relative diff  -1.11e-15 runtime 0.011370   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 512 log 9 ndigits 4 ndigitsld 1 nbits 13 nbitsld 5
Initializing mesh with Leblanc problem, high values first
  accurate sum 25.6000000256     sum 25.60000002559964 diff -3.588e-13 relative diff -1.402e-14 runtime 0.000001   Serial sum
  accurate sum 25.6000000256     sum 25.60000002559994 diff -5.684e-14 relative diff  -2.22e-15 runtime 0.000001   Serial sum (OpenMP SIMD pragma)
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000001   Serial sum with digit truncation
  accurate sum 25.60000002558809 sum 25.60000002558809 diff          0 relative diff          0 runtime 0.000001   Serial sum with bit truncation
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000008   Serial sum with long double accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000008   Serial sum with long double accumulator with ndigit truncation
  accurate sum 25.60000002559991 sum 25.60000002559991 diff          0 relative diff          0 runtime 0.000008   Serial sum with long double accumulator with bit truncation
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000003   Serial sum with double double kahan sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000002   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff -3.553e-15 relative diff -1.388e-16 runtime 0.000001   8 wide GCC vector extensions Kahan sum
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000005   Serial sum with double double knuth sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000002   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000001   8 wide GCC vector extensions Knuth sum
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000001   Pair-wise sum

  accurate sum 25.6000000256            sum 25.60000002560000142108  diff 1.4210854724529e-15  relative diff 5.5511151212179e-17  runtime 0.000015   Serial sum with quad double accumulator
  accurate sum 25.6000000256            sum 25.6000000256            diff 3.9443045261051e-31  relative diff 1.540743953969e-32   runtime 0.000013   Serial sum with quad double accumulator and quad terms

  accurate sum 25.6000000256     sum 25.60000002559996 diff -3.908e-14 relative diff -1.527e-15 runtime 0.004462   OpenMP sum
  accurate sum 25.600000025599   sum 25.600000025599   diff          0 relative diff          0 runtime 0.004747   OpenMP sum with bit truncation
  accurate sum 25.6000000256     sum 25.60000002559995 diff -4.974e-14 relative diff -1.943e-15 runtime 0.009311   OpenMP sum with double double kahan sum accumulator
  accurate sum 25.6000000256     sum 25.60000002559994 diff -5.684e-14 relative diff  -2.22e-15 runtime 0.009230   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 1024 log 10 ndigits 5 ndigitsld 2 nbits 14 nbitsld 6
Initializing mesh with Leblanc problem, high values first
  accurate sum 51.2000000512     sum 51.20000005120137 diff  1.371e-12 relative diff  2.678e-14 runtime 0.000002   Serial sum
  accurate sum 51.2000000512     sum 51.20000005119928 diff -7.176e-13 relative diff -1.402e-14 runtime 0.000001   Serial sum (OpenMP SIMD pragma)
  accurate sum 51.200000051      sum 51.200000051      diff          0 relative diff          0 runtime 0.000002   Serial sum with digit truncation
  accurate sum 51.20000005117618 sum 51.20000005117618 diff          0 relative diff          0 runtime 0.000002   Serial sum with bit truncation
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000016   Serial sum with long double accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000017   Serial sum with long double accumulator with ndigit truncation
  accurate sum 51.20000005119982 sum 51.20000005119982 diff          0 relative diff          0 runtime 0.000016   Serial sum with long double accumulator with bit truncation
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000005   Serial sum with double double kahan sum accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000004   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 51.2000000512     sum 51.20000005119999 diff -7.105e-15 relative diff -1.388e-16 runtime 0.000003   8 wide GCC vector extensions Kahan sum
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000010   Serial sum with double double knuth sum accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000005   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000003   8 wide GCC vector extensions Knuth sum
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000001   Pair-wise sum

  accurate sum 51.2000000512            sum 51.20000005120000284217  diff 2.8421709449057e-15  relative diff 5.5511151212179e-17  runtime 0.000045   Serial sum with quad double accumulator
  accurate sum 51.2000000512            sum 51.2000000512            diff 1.0230539864585e-30  relative diff 1.9981523153036e-32  runtime 0.000079   Serial sum with quad double accumulator and quad terms

  accurate sum 51.2000000512     sum 51.20000005119992 diff -7.816e-14 relative diff -1.527e-15 runtime 0.006431   OpenMP sum
  accurate sum 51.20000005119073 sum 51.20000005119073 diff          0 relative diff          0 runtime 0.002983   OpenMP sum with bit truncation
  accurate sum 51.2000000512     sum 51.20000005119996 diff -4.263e-14 relative diff -8.327e-16 runtime 0.009557   OpenMP sum with double double kahan sum accumulator
  accurate sum 51.20000005119999 sum 51.20000005119996 diff -2.842e-14 relative diff -5.551e-16 runtime 0.011746   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 2048 log 11 ndigits 5 ndigitsld 2 nbits 15 nbitsld 6
Initializing mesh with Leblanc problem, high values first
  accurate sum 102.4000001024    sum 102.4000001024003 diff  2.842e-13 relative diff  2.776e-15 runtime 0.000004   Serial sum
  accurate sum 102.4000001024    sum 102.4000001024027 diff  2.743e-12 relative diff  2.678e-14 runtime 0.000002   Serial sum (OpenMP SIMD pragma)
  accurate sum 102.4000001       sum 102.4000001       diff          0 relative diff          0 runtime 0.000004   Serial sum with digit truncation
  accurate sum 102.4000001023524 sum 102.4000001023524 diff          0 relative diff          0 runtime 0.000003   Serial sum with bit truncation
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000032   Serial sum with long double accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000033   Serial sum with long double accumulator with ndigit truncation
  accurate sum 102.4000001023996 sum 102.4000001023996 diff          0 relative diff          0 runtime 0.000033   Serial sum with long double accumulator with bit truncation
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000011   Serial sum with double double kahan sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000008   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff -1.421e-14 relative diff -1.388e-16 runtime 0.000005   8 wide GCC vector extensions Kahan sum
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000021   Serial sum with double double knuth sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000010   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000005   8 wide GCC vector extensions Knuth sum
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000002   Pair-wise sum

  accurate sum 102.4000001024           sum 102.4000001024000056843  diff 5.6843418898115e-15  relative diff 5.5511151212179e-17  runtime 0.000045   Serial sum with quad double accumulator
  accurate sum 102.4000001024           sum 102.4000001024           diff -8.6281661508548e-32 relative diff -8.4259434982682e-34 runtime 0.000053   Serial sum with quad double accumulator and quad terms

  accurate sum 102.4000001024    sum 102.4000001023998 diff -2.416e-13 relative diff -2.359e-15 runtime 0.004752   OpenMP sum
  accurate sum 102.4000001023524 sum 102.4000001023524 diff          0 relative diff          0 runtime 0.004507   OpenMP sum with bit truncation
  accurate sum 102.4000001024    sum 102.4000001023997 diff -2.984e-13 relative diff -2.914e-15 runtime 0.009303   OpenMP sum with double double kahan sum accumulator
  accurate sum 102.4000001024    sum 102.4000001023997 diff -2.842e-13 relative diff -2.776e-15 runtime 0.008807   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 4096 log 12 ndigits 5 ndigitsld 2 nbits 15 nbitsld 7
Initializing mesh with Leblanc problem, high values first
  accurate sum 204.8000002048    sum 204.8000002047672 diff  -3.28e-11 relative diff -1.601e-13 runtime 0.000009   Serial sum
  accurate sum 204.8000002048    sum 204.8000002048006 diff  5.684e-13 relative diff  2.776e-15 runtime 0.000005   Serial sum (OpenMP SIMD pragma)
  accurate sum 204.8000002       sum 204.8000002       diff          0 relative diff          0 runtime 0.000009   Serial sum with digit truncation
  accurate sum 204.8000002047047 sum 204.8000002047047 diff          0 relative diff          0 runtime 0.000009   Serial sum with bit truncation
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000060   Serial sum with long double accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000061   Serial sum with long double accumulator with ndigit truncation
  accurate sum 204.8000002047993 sum 204.8000002047993 diff          0 relative diff          0 runtime 0.000060   Serial sum with long double accumulator with bit truncation
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000020   Serial sum with double double kahan sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000023   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff -2.842e-14 relative diff -1.388e-16 runtime 0.000017   8 wide GCC vector extensions Kahan sum
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000035   Serial sum with double double knuth sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000023   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000018   8 wide GCC vector extensions Knuth sum
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000020   Pair-wise sum

  accurate sum 204.8000002048           sum 204.8000002048000113686  diff 1.1368683779623e-14  relative diff 5.5511151212179e-17  runtime 0.000278   Serial sum with quad double accumulator
  accurate sum 204.8000002048           sum 204.8000002048           diff -2.9113897783313e-29 relative diff -1.4215770387793e-31 runtime 0.000308   Serial sum with quad double accumulator and quad terms

  accurate sum 204.8000002048    sum 204.8000002047998 diff -2.274e-13 relative diff  -1.11e-15 runtime 0.004229   OpenMP sum
  accurate sum 204.8000002047047 sum 204.8000002047047 diff          0 relative diff          0 runtime 0.004739   OpenMP sum with bit truncation
  accurate sum 204.8000002048    sum 204.8000002047998 diff -2.274e-13 relative diff  -1.11e-15 runtime 0.009192   OpenMP sum with double double kahan sum accumulator
  accurate sum 204.8000002048    sum 204.8000002047996 diff -3.411e-13 relative diff -1.665e-15 runtime 0.009056   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 8192 log 13 ndigits 5 ndigitsld 2 nbits 17 nbitsld 7
Initializing mesh with Leblanc problem, high values first
  accurate sum 409.6000004096    sum 409.6000004095737 diff -2.626e-11 relative diff -6.412e-14 runtime 0.000025   Serial sum
  accurate sum 409.6000004096    sum 409.6000004095344 diff  -6.56e-11 relative diff -1.601e-13 runtime 0.000013   Serial sum (OpenMP SIMD pragma)
  accurate sum 409.60000041      sum 409.60000041      diff          0 relative diff          0 runtime 0.000026   Serial sum with digit truncation
  accurate sum 409.6000004038215 sum 409.6000004038215 diff          0 relative diff          0 runtime 0.000025   Serial sum with bit truncation
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000136   Serial sum with long double accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000137   Serial sum with long double accumulator with ndigit truncation
  accurate sum 409.6000004095986 sum 409.6000004095986 diff          0 relative diff          0 runtime 0.000136   Serial sum with long double accumulator with bit truncation
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000041   Serial sum with double double kahan sum accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000046   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 409.6000004096    sum 409.6000004095999 diff -5.684e-14 relative diff -1.388e-16 runtime 0.000034   8 wide GCC vector extensions Kahan sum
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000069   Serial sum with double double knuth sum accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000047   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000036   8 wide GCC vector extensions Knuth sum
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000039   Pair-wise sum

  accurate sum 409.6000004096           sum 409.6000004096000227373  diff 2.2737367559246e-14  relative diff 5.5511151212179e-17  runtime 0.000346   Serial sum with quad double accumulator
  accurate sum 409.6000004096           sum 409.6000004096           diff 7.6864634452472e-29  relative diff 1.8765779876857e-31  runtime 0.000211   Serial sum with quad double accumulator and quad terms

  accurate sum 409.6000004096    sum 409.6000004095995 diff -5.116e-13 relative diff -1.249e-15 runtime 0.004551   OpenMP sum
  accurate sum 409.6000004094094 sum 409.6000004094094 diff          0 relative diff          0 runtime 0.004701   OpenMP sum with bit truncation
  accurate sum 409.6000004096    sum 409.6000004095996 diff -3.979e-13 relative diff -9.714e-16 runtime 0.009304   OpenMP sum with double double kahan sum accumulator
  accurate sum 409.6000004095999 sum 409.6000004095997 diff -2.274e-13 relative diff -5.551e-16 runtime 0.009256   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 16384 log 14 ndigits 5 ndigitsld 2 nbits 18 nbitsld 8
Initializing mesh with Leblanc problem, high values first
  accurate sum 819.2000008192    sum 819.2000008196816 diff  4.816e-10 relative diff  5.879e-13 runtime 0.000050   Serial sum
  accurate sum 819.2000008192    sum 819.2000008191475 diff -5.252e-11 relative diff -6.412e-14 runtime 0.000024   Serial sum (OpenMP SIMD pragma)
  accurate sum 819.20000082      sum 819.20000082      diff          0 relative diff          0 runtime 0.000050   Serial sum with digit truncation
  accurate sum 819.2000007927418 sum 819.2000007927418 diff          0 relative diff          0 runtime 0.000049   Serial sum with bit truncation
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000271   Serial sum with long double accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000272   Serial sum with long double accumulator with ndigit truncation
  accurate sum 819.2000008191972 sum 819.2000008191972 diff          0 relative diff          0 runtime 0.000260   Serial sum with long double accumulator with bit truncation
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000073   Serial sum with double double kahan sum accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000067   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 819.2000008192    sum 819.2000008191999 diff -1.137e-13 relative diff -1.388e-16 runtime 0.000048   8 wide GCC vector extensions Kahan sum
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000166   Serial sum with double double knuth sum accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000079   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000045   8 wide GCC vector extensions Knuth sum
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000041   Pair-wise sum

  accurate sum 819.2000008192           sum 819.2000008192000454747  diff 4.5474735118492e-14  relative diff 5.5511151212179e-17  runtime 0.000374   Serial sum with quad double accumulator
  accurate sum 819.2000008192           sum 819.2000008192           diff -1.9080573145033e-28 relative diff -2.3291715241641e-31 runtime 0.000422   Serial sum with quad double accumulator and quad terms

  accurate sum 819.2000008192    sum 819.2000008191961 diff -3.865e-12 relative diff -4.718e-15 runtime 0.004516   OpenMP sum
  accurate sum 819.2000008188188 sum 819.2000008188188 diff          0 relative diff          0 runtime 0.004420   OpenMP sum with bit truncation
  accurate sum 819.2000008192    sum 819.2000008191985 diff -1.478e-12 relative diff -1.804e-15 runtime 0.009202   OpenMP sum with double double kahan sum accumulator
  accurate sum 819.2000008191999 sum 819.2000008191981 diff -1.819e-12 relative diff  -2.22e-15 runtime 0.008650   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 32768 log 15 ndigits 6 ndigitsld 3 nbits 19 nbitsld 9
Initializing mesh with Leblanc problem, high values first
  accurate sum 1638.4000016384   sum 1638.400001638733 diff  3.331e-10 relative diff  2.033e-13 runtime 0.000097   Serial sum
  accurate sum 1638.4000016384   sum 1638.400001639363 diff  9.632e-10 relative diff  5.879e-13 runtime 0.000048   Serial sum (OpenMP SIMD pragma)
  accurate sum 1638.400002       sum 1638.400002       diff          0 relative diff          0 runtime 0.000098   Serial sum with digit truncation
  accurate sum 1638.400001525879 sum 1638.400001525879 diff          0 relative diff          0 runtime 0.000097   Serial sum with bit truncation
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000538   Serial sum with long double accumulator
  accurate sum 1638.400001638    sum 1638.400001638    diff          0 relative diff          0 runtime 0.000517   Serial sum with long double accumulator with ndigit truncation
  accurate sum 1638.400001638336 sum 1638.400001638336 diff          0 relative diff          0 runtime 0.000529   Serial sum with long double accumulator with bit truncation
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000172   Serial sum with double double kahan sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000123   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff -2.274e-13 relative diff -1.388e-16 runtime 0.000084   8 wide GCC vector extensions Kahan sum
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000346   Serial sum with double double knuth sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000157   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000088   8 wide GCC vector extensions Knuth sum
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000033   Pair-wise sum

  accurate sum 1638.4000016384          sum 1638.400001638400090949  diff 9.0949470236983e-14  relative diff 5.5511151212179e-17  runtime 0.000710   Serial sum with quad double accumulator
  accurate sum 1638.4000016384          sum 1638.4000016384          diff 6.8749227890011e-28  relative diff 4.1961198621376e-31  runtime 0.000843   Serial sum with quad double accumulator and quad terms

  accurate sum 1638.4000016384   sum 1638.4000016384   diff  2.274e-13 relative diff  1.388e-16 runtime 0.004339   OpenMP sum
  accurate sum 1638.400001630187 sum 1638.400001630187 diff          0 relative diff          0 runtime 0.004302   OpenMP sum with bit truncation
  accurate sum 1638.4000016384   sum 1638.4000016384   diff -4.547e-13 relative diff -2.776e-16 runtime 0.008674   OpenMP sum with double double kahan sum accumulator
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.008784   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 65536 log 16 ndigits 6 ndigitsld 3 nbits 20 nbitsld 9
Initializing mesh with Leblanc problem, high values first
  accurate sum 3276.8000032768   sum 3276.800003276371 diff -4.293e-10 relative diff  -1.31e-13 runtime 0.000205   Serial sum
  accurate sum 3276.8000032768   sum 3276.800003277466 diff  6.662e-10 relative diff  2.033e-13 runtime 0.000098   Serial sum (OpenMP SIMD pragma)
  accurate sum 3276.800003       sum 3276.800003       diff          0 relative diff          0 runtime 0.000206   Serial sum with digit truncation
  accurate sum 3276.800003051758 sum 3276.800003051758 diff          0 relative diff          0 runtime 0.000205   Serial sum with bit truncation
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.001028   Serial sum with long double accumulator
  accurate sum 3276.800003277    sum 3276.800003277    diff          0 relative diff          0 runtime 0.001040   Serial sum with long double accumulator with ndigit truncation
  accurate sum 3276.800003276672 sum 3276.800003276672 diff          0 relative diff          0 runtime 0.001038   Serial sum with long double accumulator with bit truncation
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000332   Serial sum with double double kahan sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000246   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff -4.547e-13 relative diff -1.388e-16 runtime 0.000167   8 wide GCC vector extensions Kahan sum
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000692   Serial sum with double double knuth sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000314   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000165   8 wide GCC vector extensions Knuth sum
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000070   Pair-wise sum

  accurate sum 3276.8000032768          sum 3276.800003276800181898  diff 1.8189894047397e-13  relative diff 5.5511151212179e-17  runtime 0.001422   Serial sum with quad double accumulator
  accurate sum 3276.8000032768          sum 3276.8000032768          diff -6.037546938109e-27  relative diff -1.8425131018285e-30 runtime 0.001686   Serial sum with quad double accumulator and quad terms

  accurate sum 3276.8000032768   sum 3276.800003276826 diff  2.638e-11 relative diff  8.049e-15 runtime 0.000767   OpenMP sum
  accurate sum 3276.800003260374 sum 3276.800003260374 diff          0 relative diff          0 runtime 0.000136   OpenMP sum with bit truncation
  accurate sum 3276.8000032768   sum 3276.800003276799 diff -1.364e-12 relative diff -4.163e-16 runtime 0.000295   OpenMP sum with double double kahan sum accumulator
  accurate sum 3276.8000032768   sum 3276.800003276798 diff -1.819e-12 relative diff -5.551e-16 runtime 0.000498   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 131072 log 17 ndigits 6 ndigitsld 3 nbits 21 nbitsld 10
Initializing mesh with Leblanc problem, high values first
  accurate sum 6553.6000065536   sum 6553.600006562821 diff  9.221e-09 relative diff  1.407e-12 runtime 0.000409   Serial sum
  accurate sum 6553.6000065536   sum 6553.600006552741 diff -8.586e-10 relative diff  -1.31e-13 runtime 0.000199   Serial sum (OpenMP SIMD pragma)
  accurate sum 6553.600007       sum 6553.600007       diff          0 relative diff          0 runtime 0.000334   Serial sum with digit truncation
  accurate sum 6553.600006103516 sum 6553.600006103516 diff          0 relative diff          0 runtime 0.000219   Serial sum with bit truncation
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.002087   Serial sum with long double accumulator
  accurate sum 6553.600006554    sum 6553.600006554    diff          0 relative diff          0 runtime 0.002095   Serial sum with long double accumulator with ndigit truncation
  accurate sum 6553.600006553344 sum 6553.600006553344 diff          0 relative diff          0 runtime 0.002085   Serial sum with long double accumulator with bit truncation
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000663   Serial sum with double double kahan sum accumulator
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000492   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 6553.6000065536   sum 6553.600006553599 diff -9.095e-13 relative diff -1.388e-16 runtime 0.000336   8 wide GCC vector extensions Kahan sum
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.001334   Serial sum with double double knuth sum accumulator
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000628   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000331   8 wide GCC vector extensions Knuth sum
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000131   Pair-wise sum

  accurate sum 6553.6000065536          sum 6553.600006553600363797  diff 3.6379788094793e-13  relative diff 5.5511151212179e-17  runtime 0.002838   Serial sum with quad double accumulator
  accurate sum 6553.6000065536          sum 6553.6000065536          diff 2.2517245678629e-26  relative diff 3.435859017351e-30   runtime 0.003376   Serial sum with quad double accumulator and quad terms

  accurate sum 6553.6000065536   sum 6553.600006553575 diff -2.547e-11 relative diff -3.886e-15 runtime 0.000155   OpenMP sum
  accurate sum 6553.600006461143 sum 6553.600006461143 diff          0 relative diff          0 runtime 0.000142   OpenMP sum with bit truncation
  accurate sum 6553.6000065536   sum 6553.600006553595 diff -4.547e-12 relative diff -6.939e-16 runtime 0.000282   OpenMP sum with double double kahan sum accumulator
  accurate sum 6553.600006553599 sum 6553.600006553595 diff -3.638e-12 relative diff -5.551e-16 runtime 0.000498   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 262144 log 18 ndigits 6 ndigitsld 3 nbits 22 nbitsld 10
Initializing mesh with Leblanc problem, high values first
  accurate sum 13107.2000131072  sum 13107.20001314317 diff  3.597e-08 relative diff  2.745e-12 runtime 0.000716   Serial sum
  accurate sum 13107.2000131072  sum 13107.20001312564 diff  1.844e-08 relative diff  1.407e-12 runtime 0.000216   Serial sum (OpenMP SIMD pragma)
  accurate sum 13107.20001       sum 13107.20001       diff          0 relative diff          0 runtime 0.000436   Serial sum with digit truncation
  accurate sum 13107.20001220703 sum 13107.20001220703 diff          0 relative diff          0 runtime 0.000436   Serial sum with bit truncation
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.004186   Serial sum with long double accumulator
  accurate sum 13107.20001311    sum 13107.20001311    diff          0 relative diff          0 runtime 0.004157   Serial sum with long double accumulator with ndigit truncation
  accurate sum 13107.20001310669 sum 13107.20001310669 diff          0 relative diff          0 runtime 0.004149   Serial sum with long double accumulator with bit truncation
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.001326   Serial sum with double double kahan sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000989   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff -1.819e-12 relative diff -1.388e-16 runtime 0.000670   8 wide GCC vector extensions Kahan sum
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.002769   Serial sum with double double knuth sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.001256   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000661   8 wide GCC vector extensions Knuth sum
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000255   Pair-wise sum

  accurate sum 13107.2000131072         sum 13107.20001310720072759  diff 7.2759576189587e-13  relative diff 5.5511151212179e-17  runtime 0.005678   Serial sum with quad double accumulator
  accurate sum 13107.2000131072         sum 13107.2000131072         diff 6.0240574166297e-26  relative diff 4.5959910664411e-30  runtime 0.006741   Serial sum with quad double accumulator and quad terms

  accurate sum 13107.2000131072  sum 13107.20001310678 diff -4.165e-10 relative diff -3.178e-14 runtime 0.000151   OpenMP sum
  accurate sum 13107.20001268387 sum 13107.20001268387 diff          0 relative diff          0 runtime 0.000141   OpenMP sum with bit truncation
  accurate sum 13107.2000131072  sum 13107.20001310718 diff -1.819e-11 relative diff -1.388e-15 runtime 0.000297   OpenMP sum with double double kahan sum accumulator
  accurate sum 13107.2000131072  sum 13107.20001310718 diff -1.455e-11 relative diff  -1.11e-15 runtime 0.000543   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 524288 log 19 ndigits 6 ndigitsld 3 nbits 23 nbitsld 11
Initializing mesh with Leblanc problem, high values first
  accurate sum 26214.4000262144  sum 26214.40002564823 diff -5.662e-07 relative diff  -2.16e-11 runtime 0.000921   Serial sum
  accurate sum 26214.4000262144  sum 26214.40002628635 diff  7.195e-08 relative diff  2.745e-12 runtime 0.000431   Serial sum (OpenMP SIMD pragma)
  accurate sum 26214.40003       sum 26214.40003       diff          0 relative diff          0 runtime 0.000873   Serial sum with digit truncation
  accurate sum 26214.40002441406 sum 26214.40002441406 diff          0 relative diff          0 runtime 0.000872   Serial sum with bit truncation
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.008306   Serial sum with long double accumulator
  accurate sum 26214.40002621    sum 26214.40002621    diff          0 relative diff          0 runtime 0.008305   Serial sum with long double accumulator with ndigit truncation
  accurate sum 26214.40002620965 sum 26214.40002620965 diff          0 relative diff          0 runtime 0.008299   Serial sum with long double accumulator with bit truncation
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.002675   Serial sum with double double kahan sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.001967   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff -3.638e-12 relative diff -1.388e-16 runtime 0.001340   8 wide GCC vector extensions Kahan sum
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.005505   Serial sum with double double knuth sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.002511   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.001323   8 wide GCC vector extensions Knuth sum
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.000525   Pair-wise sum

  accurate sum 26214.4000262144         sum 26214.40002621440145519  diff 1.4551915237917e-12  relative diff 5.5511151212179e-17  runtime 0.011352   Serial sum with quad double accumulator
  accurate sum 26214.4000262144         sum 26214.4000262144         diff -4.3299943998857e-25 relative diff -1.6517617780898e-29 runtime 0.013493   Serial sum with quad double accumulator and quad terms

  accurate sum 26214.4000262144  sum 26214.4000262148  diff  4.002e-10 relative diff  1.527e-14 runtime 0.000141   OpenMP sum
  accurate sum 26214.40002441406 sum 26214.40002441406 diff          0 relative diff          0 runtime 0.000150   OpenMP sum with bit truncation
  accurate sum 26214.4000262144  sum 26214.40002621441 diff  7.276e-12 relative diff  2.776e-16 runtime 0.000299   OpenMP sum with double double kahan sum accumulator
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.000528   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 1048576 log 20 ndigits 7 ndigitsld 4 nbits 24 nbitsld 12
Initializing mesh with Leblanc problem, high values first
  accurate sum 52428.8000524288  sum 52428.80005292332 diff  4.945e-07 relative diff  9.432e-12 runtime 0.001739   Serial sum
  accurate sum 52428.8000524288  sum 52428.80005129646 diff -1.132e-06 relative diff  -2.16e-11 runtime 0.000866   Serial sum (OpenMP SIMD pragma)
  accurate sum 52428.8001        sum 52428.8001        diff          0 relative diff          0 runtime 0.001746   Serial sum with digit truncation
  accurate sum 52428.80004882812 sum 52428.80004882812 diff          0 relative diff          0 runtime 0.001745   Serial sum with bit truncation
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.016607   Serial sum with long double accumulator
  accurate sum 52428.8000524     sum 52428.8000524     diff          0 relative diff          0 runtime 0.016607   Serial sum with long double accumulator with ndigit truncation
  accurate sum 52428.8000524044  sum 52428.8000524044  diff          0 relative diff          0 runtime 0.016605   Serial sum with long double accumulator with bit truncation
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.005505   Serial sum with double double kahan sum accumulator
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.003935   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 52428.8000524288  sum 52428.80005242879 diff -7.276e-12 relative diff -1.388e-16 runtime 0.002696   8 wide GCC vector extensions Kahan sum
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.010946   Serial sum with double double knuth sum accumulator
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.005022   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.002653   8 wide GCC vector extensions Knuth sum
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.001224   Pair-wise sum

  accurate sum 52428.8000524288         sum 52428.80005242880291038  diff 2.9103830475835e-12  relative diff 5.5511151212179e-17  runtime 0.022702   Serial sum with quad double accumulator
  accurate sum 52428.8000524288         sum 52428.8000524288         diff 5.4507764195875e-25  relative diff 1.039653094127e-29   runtime 0.026980   Serial sum with quad double accumulator and quad terms

  accurate sum 52428.8000524288  sum 52428.8000524353  diff  6.505e-09 relative diff  1.241e-13 runtime 0.000154   OpenMP sum
  accurate sum 52428.80004882812 sum 52428.80004882812 diff          0 relative diff          0 runtime 0.000156   OpenMP sum with bit truncation
  accurate sum 52428.8000524288  sum 52428.80005242887 diff  6.548e-11 relative diff  1.249e-15 runtime 0.000332   OpenMP sum with double double kahan sum accumulator
  accurate sum 52428.80005242879 sum 52428.80005242888 diff  8.731e-11 relative diff  1.665e-15 runtime 0.000557   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 2097152 log 21 ndigits 7 ndigitsld 4 nbits 25 nbitsld 12
Initializing mesh with Leblanc problem, high values first
  accurate sum 104857.6001048576 sum 104857.6001084272 diff   3.57e-06 relative diff  3.404e-11 runtime 0.003522   Serial sum
  accurate sum 104857.6001048576 sum 104857.6001058466 diff   9.89e-07 relative diff  9.432e-12 runtime 0.001758   Serial sum (OpenMP SIMD pragma)
  accurate sum 104857.6          sum 104857.6          diff          0 relative diff          0 runtime 0.003503   Serial sum with digit truncation
  accurate sum 104857.6000976562 sum 104857.6000976562 diff          0 relative diff          0 runtime 0.003494   Serial sum with bit truncation
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.033220   Serial sum with long double accumulator
  accurate sum 104857.600105     sum 104857.600105     diff          0 relative diff          0 runtime 0.033218   Serial sum with long double accumulator with ndigit truncation
  accurate sum 104857.6001048088 sum 104857.6001048088 diff          0 relative diff          0 runtime 0.033212   Serial sum with long double accumulator with bit truncation
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.010985   Serial sum with double double kahan sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.007879   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff -1.455e-11 relative diff -1.388e-16 runtime 0.005424   8 wide GCC vector extensions Kahan sum
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.021359   Serial sum with double double knuth sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.010051   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.005315   8 wide GCC vector extensions Knuth sum
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.002803   Pair-wise sum

  accurate sum 104857.6001048576        sum 104857.6001048576058207  diff 5.8207660951669e-12  relative diff 5.5511151212179e-17  runtime 0.045408   Serial sum with quad double accumulator
  accurate sum 104857.6001048576        sum 104857.6001048576        diff -3.2890451037923e-24 relative diff -3.1366778378517e-29 runtime 0.053948   Serial sum with quad double accumulator and quad terms

  accurate sum 104857.6001048576 sum 104857.6001048501 diff -7.523e-09 relative diff -7.175e-14 runtime 0.000164   OpenMP sum
  accurate sum 104857.6000976562 sum 104857.6000976562 diff          0 relative diff          0 runtime 0.000167   OpenMP sum with bit truncation
  accurate sum 104857.6001048576 sum 104857.6001048577 diff   1.31e-10 relative diff  1.249e-15 runtime 0.000359   OpenMP sum with double double kahan sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048576 diff  5.821e-11 relative diff  5.551e-16 runtime 0.000586   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 4194304 log 22 ndigits 7 ndigitsld 4 nbits 26 nbitsld 13
Initializing mesh with Leblanc problem, high values first
  accurate sum 209715.2002097152 sum 209715.2001908246 diff -1.889e-05 relative diff -9.008e-11 runtime 0.007005   Serial sum
  accurate sum 209715.2002097152 sum 209715.2002168543 diff  7.139e-06 relative diff  3.404e-11 runtime 0.003519   Serial sum (OpenMP SIMD pragma)
  accurate sum 209715.2          sum 209715.2          diff          0 relative diff          0 runtime 0.006987   Serial sum with digit truncation
  accurate sum 209715.19921875   sum 209715.19921875   diff          0 relative diff          0 runtime 0.006975   Serial sum with bit truncation
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.066439   Serial sum with long double accumulator
  accurate sum 209715.20021      sum 209715.20021      diff          0 relative diff          0 runtime 0.067281   Serial sum with long double accumulator with ndigit truncation
  accurate sum 209715.2002096176 sum 209715.2002096176 diff          0 relative diff          0 runtime 0.066420   Serial sum with long double accumulator with bit truncation
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.021221   Serial sum with double double kahan sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.015772   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff  -2.91e-11 relative diff -1.388e-16 runtime 0.010873   8 wide GCC vector extensions Kahan sum
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.042719   Serial sum with double double knuth sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.020099   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.010614   8 wide GCC vector extensions Knuth sum
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.004786   Pair-wise sum

  accurate sum 209715.2002097152        sum 209715.2002097152116415  diff 1.1641532190334e-11  relative diff 5.5511151212179e-17  runtime 0.090817   Serial sum with quad double accumulator
  accurate sum 209715.2002097152        sum 209715.2002097152        diff 2.3784295131933e-23  relative diff 1.1341235689234e-28  runtime 0.107920   Serial sum with quad double accumulator and quad terms

  accurate sum 209715.2002097152 sum 209715.2002096125 diff -1.027e-07 relative diff -4.899e-13 runtime 0.000190   OpenMP sum
  accurate sum 209715.2001953125 sum 209715.2001953125 diff          0 relative diff          0 runtime 0.000187   OpenMP sum with bit truncation
  accurate sum 209715.2002097152 sum 209715.2002097153 diff  1.455e-10 relative diff  6.939e-16 runtime 0.000425   OpenMP sum with double double kahan sum accumulator
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.000893   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 8388608 log 23 ndigits 7 ndigitsld 4 nbits 27 nbitsld 13
Initializing mesh with Leblanc problem, high values first
  accurate sum 419430.4004194304 sum 419430.400462431  diff    4.3e-05 relative diff  1.025e-10 runtime 0.013980   Serial sum
  accurate sum 419430.4004194304 sum 419430.4003816492 diff -3.778e-05 relative diff -9.008e-11 runtime 0.007196   Serial sum (OpenMP SIMD pragma)
  accurate sum 419430.4          sum 419430.4          diff          0 relative diff          0 runtime 0.013992   Serial sum with digit truncation
  accurate sum 419430.3984375    sum 419430.3984375    diff          0 relative diff          0 runtime 0.013978   Serial sum with bit truncation
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.132849   Serial sum with long double accumulator
  accurate sum 419430.400419     sum 419430.400419     diff          0 relative diff          0 runtime 0.132855   Serial sum with long double accumulator with ndigit truncation
  accurate sum 419430.4004192352 sum 419430.4004192352 diff          0 relative diff          0 runtime 0.132846   Serial sum with long double accumulator with bit truncation
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.042434   Serial sum with double double kahan sum accumulator
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.031524   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 419430.4004194304 sum 419430.4004194303 diff -5.821e-11 relative diff -1.388e-16 runtime 0.021707   8 wide GCC vector extensions Kahan sum
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.086024   Serial sum with double double knuth sum accumulator
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.040187   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.021194   8 wide GCC vector extensions Knuth sum
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.012973   Pair-wise sum

  accurate sum 419430.4004194304        sum 419430.4004194304232830  diff 2.3283064380668e-11  relative diff 5.5511151212179e-17  runtime 0.181620   Serial sum with quad double accumulator
  accurate sum 419430.4004194304        sum 419430.4004194304        diff 1.1756526599141e-23  relative diff 2.8029743641339e-29  runtime 0.215877   Serial sum with quad double accumulator and quad terms

  accurate sum 419430.4004194304 sum 419430.4004195535 diff  1.231e-07 relative diff  2.934e-13 runtime 0.004728   OpenMP sum
  accurate sum 419430.400390625  sum 419430.400390625  diff          0 relative diff          0 runtime 0.004562   OpenMP sum with bit truncation
  accurate sum 419430.4004194304 sum 419430.4004194309 diff  4.657e-10 relative diff   1.11e-15 runtime 0.009599   OpenMP sum with double double kahan sum accumulator
  accurate sum 419430.4004194303 sum 419430.4004194308 diff  4.657e-10 relative diff   1.11e-15 runtime 0.004126   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 16777216 log 24 ndigits 7 ndigitsld 4 nbits 27 nbitsld 14
Initializing mesh with Leblanc problem, high values first
  accurate sum 838860.8008388608 sum 838860.800853056  diff   1.42e-05 relative diff  1.692e-11 runtime 0.028017   Serial sum
  accurate sum 838860.8008388608 sum 838860.800924862  diff    8.6e-05 relative diff  1.025e-10 runtime 0.014393   Serial sum (OpenMP SIMD pragma)
  accurate sum 838860.801        sum 838860.801        diff          0 relative diff          0 runtime 0.028051   Serial sum with digit truncation
  accurate sum 838860.796875     sum 838860.796875     diff          0 relative diff          0 runtime 0.028014   Serial sum with bit truncation
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.265734   Serial sum with long double accumulator
  accurate sum 838860.800839     sum 838860.800839     diff          0 relative diff          0 runtime 0.268154   Serial sum with long double accumulator with ndigit truncation
  accurate sum 838860.8008384705 sum 838860.8008384705 diff          0 relative diff          0 runtime 0.266529   Serial sum with long double accumulator with bit truncation
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.084904   Serial sum with double double kahan sum accumulator
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.063091   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 838860.8008388608 sum 838860.8008388607 diff -1.164e-10 relative diff -1.388e-16 runtime 0.043445   8 wide GCC vector extensions Kahan sum
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.170912   Serial sum with double double knuth sum accumulator
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.080406   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.042430   8 wide GCC vector extensions Knuth sum
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.025013   Pair-wise sum

  accurate sum 838860.8008388608        sum 838860.8008388608465661  diff 4.6566128761335e-11  relative diff 5.5511151212179e-17  runtime 0.363347   Serial sum with quad double accumulator
  accurate sum 838860.8008388608        sum 838860.8008388608        diff -3.8768739581042e-23 relative diff -4.6215938976137e-29 runtime 0.431689   Serial sum with quad double accumulator and quad terms

  accurate sum 838860.8008388608 sum 838860.8008405092 diff  1.648e-06 relative diff  1.965e-12 runtime 0.005002   OpenMP sum
  accurate sum 838860.80078125   sum 838860.80078125   diff          0 relative diff          0 runtime 0.004544   OpenMP sum with bit truncation
  accurate sum 838860.8008388608 sum 838860.8008388598 diff -1.048e-09 relative diff -1.249e-15 runtime 0.007776   OpenMP sum with double double kahan sum accumulator
  accurate sum 838860.8008388607 sum 838860.8008388598 diff -9.313e-10 relative diff  -1.11e-15 runtime 0.006454   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 33554432 log 25 ndigits 8 ndigitsld 5 nbits 29 nbitsld 15
Initializing mesh with Leblanc problem, high values first
  accurate sum 1677721.601677722 sum 1677721.600413603 diff  -0.001264 relative diff -7.535e-10 runtime 0.056081   Serial sum
  accurate sum 1677721.601677722 sum 1677721.601706112 diff  2.839e-05 relative diff  1.692e-11 runtime 0.028766   Serial sum (OpenMP SIMD pragma)
  accurate sum 1677721.6         sum 1677721.6         diff          0 relative diff          0 runtime 0.056099   Serial sum with digit truncation
  accurate sum 1677721.5         sum 1677721.5         diff          0 relative diff          0 runtime 0.056037   Serial sum with bit truncation
  accurate sum 1677721.601677722 sum 1677721.601677722 diff -2.777e-20 relative diff -1.655e-26 runtime 0.532231   Serial sum with long double accumulator
  accurate sum 1677721.6017      sum 1677721.6017      diff          0 relative diff          0 runtime 0.531402   Serial sum with long double accumulator with ndigit truncation
  accurate sum 1677721.601676941 sum 1677721.601676941 diff          0 relative diff          0 runtime 0.532016   Serial sum with long double accumulator with bit truncation
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.169850   Serial sum with double double kahan sum accumulator
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.126230   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 1677721.601677722 sum 1677721.601677721 diff -2.328e-10 relative diff -1.388e-16 runtime 0.086842   8 wide GCC vector extensions Kahan sum
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.341793   Serial sum with double double knuth sum accumulator
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.160841   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.084898   8 wide GCC vector extensions Knuth sum
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.051678   Pair-wise sum

  accurate sum 1677721.6016777216       sum 1677721.601677721693132  diff 9.3132257522671e-11  relative diff 5.5511151212179e-17  runtime 0.729857   Serial sum with quad double accumulator
  accurate sum 1677721.6016777216       sum 1677721.6016777216       diff 4.9545533752512e-22  relative diff 2.9531439365725e-28  runtime 0.866756   Serial sum with quad double accumulator and quad terms

  accurate sum 1677721.601677722 sum 1677721.601675749 diff -1.973e-06 relative diff -1.176e-12 runtime 0.001225   OpenMP sum
  accurate sum 1677721.6015625   sum 1677721.6015625   diff          0 relative diff          0 runtime 0.000730   OpenMP sum with bit truncation
  accurate sum 1677721.601677722 sum 1677721.601677724 diff  2.095e-09 relative diff  1.249e-15 runtime 0.001371   OpenMP sum with double double kahan sum accumulator
  accurate sum 1677721.601677721 sum 1677721.601677723 diff  1.863e-09 relative diff   1.11e-15 runtime 0.001577   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 67108864 log 26 ndigits 8 ndigitsld 5 nbits 30 nbitsld 15
Initializing mesh with Leblanc problem, high values first
  accurate sum 3355443.203355443 sum 3355443.201976103 diff  -0.001379 relative diff -4.111e-10 runtime 0.112147   Serial sum
  accurate sum 3355443.203355443 sum 3355443.200827206 diff  -0.002528 relative diff -7.535e-10 runtime 0.057427   Serial sum (OpenMP SIMD pragma)
  accurate sum 3355443.2         sum 3355443.2         diff          0 relative diff          0 runtime 0.112177   Serial sum with digit truncation
  accurate sum 3355443           sum 3355443           diff          0 relative diff          0 runtime 0.112129   Serial sum with bit truncation
  accurate sum 3355443.203355443 sum 3355443.203355443 diff  6.115e-20 relative diff  1.822e-26 runtime 1.065702   Serial sum with long double accumulator
  accurate sum 3355443.2034      sum 3355443.2034      diff          0 relative diff          0 runtime 1.062857   Serial sum with long double accumulator with ndigit truncation
  accurate sum 3355443.203353882 sum 3355443.203353882 diff          0 relative diff          0 runtime 1.062824   Serial sum with long double accumulator with bit truncation
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.339708   Serial sum with double double kahan sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.252434   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff -4.657e-10 relative diff -1.388e-16 runtime 0.173751   8 wide GCC vector extensions Kahan sum
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.683534   Serial sum with double double knuth sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.321740   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.170527   8 wide GCC vector extensions Knuth sum
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.103870   Pair-wise sum

  accurate sum 3355443.2033554432       sum 3355443.203355443386264  diff 1.8626451504534e-10  relative diff 5.5511151212179e-17  runtime 1.452990   Serial sum with quad double accumulator
  accurate sum 3355443.2033554432       sum 3355443.2033554432       diff 1.987420167313e-21   relative diff 5.9229736486839e-28  runtime 1.727108   Serial sum with quad double accumulator and quad terms

  accurate sum 3355443.203355443 sum 3355443.203329054 diff -2.639e-05 relative diff -7.865e-12 runtime 0.002675   OpenMP sum
  accurate sum 3355443.1875      sum 3355443.1875      diff          0 relative diff          0 runtime 0.002032   OpenMP sum with bit truncation
  accurate sum 3355443.203355443 sum 3355443.20335545  diff  6.519e-09 relative diff  1.943e-15 runtime 0.002367   OpenMP sum with double double kahan sum accumulator
  accurate sum 3355443.203355443 sum 3355443.20335545  diff  7.451e-09 relative diff   2.22e-15 runtime 0.002672   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 134217728 log 27 ndigits 8 ndigitsld 5 nbits 31 nbitsld 16
Initializing mesh with Leblanc problem, high values first
  accurate sum 6710886.406710886 sum 6710886.393382353 diff   -0.01333 relative diff -1.986e-09 runtime 0.224306   Serial sum
  accurate sum 6710886.406710886 sum 6710886.403952206 diff  -0.002759 relative diff -4.111e-10 runtime 0.114908   Serial sum (OpenMP SIMD pragma)
  accurate sum 6710886.4         sum 6710886.4         diff          0 relative diff          0 runtime 0.224276   Serial sum with digit truncation
  accurate sum 6710886           sum 6710886           diff          0 relative diff          0 runtime 0.224267   Serial sum with bit truncation
  accurate sum 6710886.406710886 sum 6710886.406710886 diff  3.781e-19 relative diff  5.635e-26 runtime 2.126407   Serial sum with long double accumulator
  accurate sum 6710886.4067      sum 6710886.4067      diff          0 relative diff          0 runtime 2.129816   Serial sum with long double accumulator with ndigit truncation
  accurate sum 6710886.406677246 sum 6710886.406677246 diff          0 relative diff          0 runtime 2.133499   Serial sum with long double accumulator with bit truncation
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.681202   Serial sum with double double kahan sum accumulator
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.504899   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 6710886.406710886 sum 6710886.406710885 diff -9.313e-10 relative diff -1.388e-16 runtime 0.353219   8 wide GCC vector extensions Kahan sum
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 1.366948   Serial sum with double double knuth sum accumulator
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.643460   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.342566   8 wide GCC vector extensions Knuth sum
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.205777   Pair-wise sum

  accurate sum 6710886.4067108864       sum 6710886.406710886772529  diff 3.7252903009068e-10  relative diff 5.5511151212179e-17  runtime 2.905806   Serial sum with quad double accumulator
  accurate sum 6710886.4067108864       sum 6710886.4067108864       diff -3.22980998523e-20   relative diff -4.8127919167284e-27 runtime 3.453599   Serial sum with quad double accumulator and quad terms

  accurate sum 6710886.406710886 sum 6710886.406742472 diff  3.159e-05 relative diff  4.707e-12 runtime 0.004870   OpenMP sum
  accurate sum 6710886.375       sum 6710886.375       diff          0 relative diff          0 runtime 0.003896   OpenMP sum with bit truncation
  accurate sum 6710886.406710886 sum 6710886.406710881 diff -5.588e-09 relative diff -8.327e-16 runtime 0.004745   OpenMP sum with double double kahan sum accumulator
  accurate sum 6710886.406710885 sum 6710886.406710878 diff -7.451e-09 relative diff  -1.11e-15 runtime 0.004994   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 268435456 log 28 ndigits 8 ndigitsld 5 nbits 32 nbitsld 16
Initializing mesh with Leblanc problem, high values first
  accurate sum 13421772.81342177 sum 13421772.76838235 diff   -0.04504 relative diff -3.356e-09 runtime 0.448338   Serial sum
  accurate sum 13421772.81342177 sum 13421772.78676471 diff   -0.02666 relative diff -1.986e-09 runtime 0.229762   Serial sum (OpenMP SIMD pragma)
  accurate sum 13421773          sum 13421773          diff          0 relative diff          0 runtime 0.448403   Serial sum with digit truncation
  accurate sum 13421768          sum 13421768          diff          0 relative diff          0 runtime 0.448403   Serial sum with bit truncation
  accurate sum 13421772.81342177 sum 13421772.81342177 diff  -1.29e-18 relative diff -9.615e-26 runtime 4.251823   Serial sum with long double accumulator
  accurate sum 13421772.813      sum 13421772.813      diff          0 relative diff          0 runtime 4.251904   Serial sum with long double accumulator with ndigit truncation
  accurate sum 13421772.81335449 sum 13421772.81335449 diff          0 relative diff          0 runtime 4.254554   Serial sum with long double accumulator with bit truncation
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 1.363801   Serial sum with double double kahan sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 1.009707   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff -1.863e-09 relative diff -1.388e-16 runtime 0.700690   8 wide GCC vector extensions Kahan sum
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 2.733890   Serial sum with double double knuth sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 1.286846   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.684926   8 wide GCC vector extensions Knuth sum
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.389464   Pair-wise sum

  accurate sum 13421772.8134217728      sum 13421772.81342177354505  diff 7.4505806018137e-10  relative diff 5.5511151212179e-17  runtime 5.812330   Serial sum with quad double accumulator
  accurate sum 13421772.8134217728      sum 13421772.8134217728      diff 2.787986889892e-20   relative diff 2.0772121005535e-27  runtime 6.906553   Serial sum with quad double accumulator and quad terms

  accurate sum 13421772.81342177 sum 13421772.81384401 diff  0.0004222 relative diff  3.146e-11 runtime 0.008823   OpenMP sum
  accurate sum 13421772.5        sum 13421772.5        diff          0 relative diff          0 runtime 0.007582   OpenMP sum with bit truncation
  accurate sum 13421772.81342177 sum 13421772.81342176 diff -1.118e-08 relative diff -8.327e-16 runtime 0.008931   OpenMP sum with double double kahan sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342176 diff  -1.49e-08 relative diff  -1.11e-15 runtime 0.009389   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 536870912 log 29 ndigits 8 ndigitsld 5 nbits 33 nbitsld 17
Initializing mesh with Leblanc problem, high values first
  accurate sum 26843545.62684355 sum 26843545.70588235 diff    0.07904 relative diff  2.944e-09 runtime 0.898422   Serial sum
  accurate sum 26843545.62684355 sum 26843545.53676471 diff   -0.09008 relative diff -3.356e-09 runtime 0.459296   Serial sum (OpenMP SIMD pragma)
  accurate sum 26843546          sum 26843546          diff          0 relative diff          0 runtime 0.896294   Serial sum with digit truncation
  accurate sum 26843520          sum 26843520          diff          0 relative diff          0 runtime 0.896272   Serial sum with bit truncation
  accurate sum 26843545.62684355 sum 26843545.62684355 diff  5.426e-18 relative diff  2.021e-25 runtime 8.508658   Serial sum with long double accumulator
  accurate sum 26843545.627      sum 26843545.627      diff          0 relative diff          0 runtime 8.513545   Serial sum with long double accumulator with ndigit truncation
  accurate sum 26843545.62646484 sum 26843545.62646484 diff          0 relative diff          0 runtime 8.513394   Serial sum with long double accumulator with bit truncation
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 2.722271   Serial sum with double double kahan sum accumulator
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 2.018743   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 26843545.62684355 sum 26843545.62684354 diff -3.725e-09 relative diff -1.388e-16 runtime 1.394891   8 wide GCC vector extensions Kahan sum
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 5.473038   Serial sum with double double knuth sum accumulator
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 2.573317   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 1.363495   8 wide GCC vector extensions Knuth sum
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 0.749404   Pair-wise sum

  accurate sum 26843545.6268435456      sum 26843545.62684354709011  diff 1.4901161203627e-09  relative diff 5.5511151212179e-17  runtime 11.627103   Serial sum with quad double accumulator
  accurate sum 26843545.6268435456      sum 26843545.6268435456      diff 2.0244591179446e-19  relative diff 7.5416979041701e-27  runtime 13.814680   Serial sum with quad double accumulator and quad terms

  accurate sum 26843545.62684355 sum 26843545.62633804 diff -0.0005055 relative diff -1.883e-11 runtime 0.015907   OpenMP sum
  accurate sum 26843544          sum 26843544          diff          0 relative diff          0 runtime 0.015034   OpenMP sum with bit truncation
  accurate sum 26843545.62684355 sum 26843545.62684357 diff  2.608e-08 relative diff  9.714e-16 runtime 0.017359   OpenMP sum with double double kahan sum accumulator
  accurate sum 26843545.62684354 sum 26843545.62684356 diff   1.49e-08 relative diff  5.551e-16 runtime 0.016678   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 1073741824 log 30 ndigits 9 ndigitsld 6 nbits 34 nbitsld 18
Initializing mesh with Leblanc problem, high values first
  accurate sum 53687091.25368709 sum 53687091.70588235 diff     0.4522 relative diff  8.423e-09 runtime 1.793869   Serial sum
  accurate sum 53687091.25368709 sum 53687091.4117647  diff     0.1581 relative diff  2.944e-09 runtime 0.924870   Serial sum (OpenMP SIMD pragma)
  accurate sum 53687090          sum 53687090          diff          0 relative diff          0 runtime 1.793989   Serial sum with digit truncation
  accurate sum 53687040          sum 53687040          diff          0 relative diff          0 runtime 1.794732   Serial sum with bit truncation
  accurate sum 53687091.25368709 sum 53687091.25368709 diff  2.277e-17 relative diff  4.242e-25 runtime 17.016154   Serial sum with long double accumulator
  accurate sum 53687091.25       sum 53687091.25       diff          0 relative diff          0 runtime 17.033984   Serial sum with long double accumulator with ndigit truncation
  accurate sum 53687091.25195312 sum 53687091.25195312 diff          0 relative diff          0 runtime 17.031782   Serial sum with long double accumulator with bit truncation
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 5.451886   Serial sum with double double kahan sum accumulator
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 4.045113   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 53687091.25368709 sum 53687091.25368708 diff -7.451e-09 relative diff -1.388e-16 runtime 2.785349   8 wide GCC vector extensions Kahan sum
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 10.951587   Serial sum with double double knuth sum accumulator
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 5.157734   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 2.718994   8 wide GCC vector extensions Knuth sum
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 1.502968   Pair-wise sum

  accurate sum 53687091.2536870912      sum 53687091.25368709418023  diff 2.9802322407255e-09  relative diff 5.5511151212179e-17  runtime 23.274322   Serial sum with quad double accumulator
  accurate sum 53687091.2536870912      sum 53687091.2536870912      diff -1.0747252611427e-18 relative diff -2.0018317924216e-26 runtime 27.640168   Serial sum with quad double accumulator and quad terms

  accurate sum 53687091.25368709 sum 53687091.24693161 diff  -0.006755 relative diff -1.258e-10 runtime 0.030752   OpenMP sum
  accurate sum 53687088          sum 53687088          diff          0 relative diff          0 runtime 0.029888   OpenMP sum with bit truncation
  accurate sum 53687091.25368709 sum 53687091.25368716 diff  6.706e-08 relative diff  1.249e-15 runtime 0.033007   OpenMP sum with double double kahan sum accumulator
  accurate sum 53687091.25368708 sum 53687091.25368714 diff   5.96e-08 relative diff   1.11e-15 runtime 0.033111   OpenMP sum with double double kahan sum accumulator with bit truncation

Scanning dependencies of target distclean
Built target distclean
/usr/bin/modulecmd bash $*
MANPATH=/usr/share/man:/usr/local/share/man ;export MANPATH;PATH=/home/brobey/bin:/home/brobey/parsplice-install/bin:/home/brobey/bin:/home/brobey/parsplice-install/bin:/home/brobey/spack/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/opt/ibutils/bin ;export PATH;unset CC;unset CPP;unset CXX;unset F77;unset F90;unset FC;unset LD_LIBRARY_PATH;unset LOADEDMODULES;unset _LMFILES_;
/usr/bin/modulecmd bash $*
/usr/bin/modulecmd bash $*
CC=xlc ;export CC;CXX=xlc++ ;export CXX;F77=f77 ;export F77;F90=xlf90_r ;export F90;FC=xlf_r ;export FC;LD_LIBRARY_PATH=/projects/opt/ppc64le/ibm/xlf-16.1.1.3/xlf/16.1.1/lib:/projects/opt/ppc64le/ibm/xlc-16.1.1.3/xlC/16.1.1/lib ;export LD_LIBRARY_PATH;LOADEDMODULES=cmake/3.12.4:ibm/xlc-16.1.1.3-xlf-16.1.1.3 ;export LOADEDMODULES;MANPATH=/projects/opt/ppc64le/ibm/xlf-16.1.1.3/xlf/16.1.1/man/en_US.utf8:/projects/opt/ppc64le/ibm/xlc-16.1.1.3/xlC/16.1.1/man/en_US.utf8:/usr/share/man:/usr/local/share/man ;export MANPATH;PATH=/projects/opt/ppc64le/ibm/xlf-16.1.1.3/xlf/16.1.1/bin:/projects/opt/ppc64le/ibm/xlc-16.1.1.3/xlC/16.1.1/bin:/projects/opt/ppc64le/cmake/3.12.4/bin:/home/brobey/bin:/home/brobey/parsplice-install/bin:/home/brobey/bin:/home/brobey/parsplice-install/bin:/home/brobey/spack/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/opt/ibutils/bin ;export PATH;_LMFILES_=/projects/darwin/modulefiles/ppc64le/cmake/3.12.4:/projects/darwin/modulefiles/ppc64le/ibm/xlc-16.1.1.3-xlf-16.1.1.3 ;export _LMFILES_;
-- The C compiler identification is XL 16.1.1.3
-- The CXX compiler identification is XL 16.1.1.3
-- Check for working C compiler: /projects/opt/ppc64le/ibm/xlc-16.1.1.3/xlC/16.1.1/bin/xlc
-- Check for working C compiler: /projects/opt/ppc64le/ibm/xlc-16.1.1.3/xlC/16.1.1/bin/xlc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /projects/opt/ppc64le/ibm/xlc-16.1.1.3/xlC/16.1.1/bin/xlc++
-- Check for working CXX compiler: /projects/opt/ppc64le/ibm/xlc-16.1.1.3/xlC/16.1.1/bin/xlc++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Found OpenMP_C: -qsmp=omp (found version "3.1") 
-- Found OpenMP_CXX: -qsmp=omp (found version "3.1") 
-- Found OpenMP: TRUE (found version "3.1")  
-- Trying Fog Vector Class -- fails
-- Trying X86_64 intrinsics -- fails
-- Trying GCC Vector Extensions -- works
-- Trying Quad math library -- fails
-- Configuring done
-- Generating done
-- Build files have been written to: /home/brobey/GlobalSums
Scanning dependencies of target globalsums
[  5%] Building C object CMakeFiles/globalsums.dir/globalsums.c.o
"/home/brobey/GlobalSums/globalsums.c", line 541: 1586-358 (I) Loop was parallelized.
[ 10%] Building C object CMakeFiles/globalsums.dir/do_kahan_sum.c.o
[ 15%] Building C object CMakeFiles/globalsums.dir/serial_sum_novec.c.o
[ 20%] Building C object CMakeFiles/globalsums.dir/do_kahan_sum_omp.c.o
"/home/brobey/GlobalSums/do_kahan_sum_omp.c", line 18: 1586-358 (I) Loop was parallelized.
[ 25%] Building C object CMakeFiles/globalsums.dir/do_kahan_sum_omp_wbittrunc.c.o
"/home/brobey/GlobalSums/do_kahan_sum_omp_wbittrunc.c", line 22: 1586-358 (I) Loop was parallelized.
[ 30%] Building C object CMakeFiles/globalsums.dir/do_knuth_sum.c.o
[ 35%] Building C object CMakeFiles/globalsums.dir/do_ldsum.c.o
[ 40%] Building C object CMakeFiles/globalsums.dir/do_ldsum_wbittrunc.c.o
[ 45%] Building C object CMakeFiles/globalsums.dir/do_ldsum_wdigittrunc.c.o
[ 50%] Building C object CMakeFiles/globalsums.dir/do_pair_sum.c.o
[ 55%] Building C object CMakeFiles/globalsums.dir/do_sum.c.o
[ 60%] Building C object CMakeFiles/globalsums.dir/do_sum_omp.c.o
"/home/brobey/GlobalSums/do_sum_omp.c", line 6: 1586-358 (I) Loop was parallelized.
[ 65%] Building C object CMakeFiles/globalsums.dir/do_sum_omp_wbittrunc.c.o
"/home/brobey/GlobalSums/do_sum_omp_wbittrunc.c", line 9: 1586-358 (I) Loop was parallelized.
[ 70%] Building C object CMakeFiles/globalsums.dir/do_sum_wbittrunc.c.o
[ 75%] Building C object CMakeFiles/globalsums.dir/do_sum_wdigittrunc.c.o
[ 80%] Building C object CMakeFiles/globalsums.dir/kahan_gcc_vector.c.o
/home/brobey/GlobalSums/kahan_gcc_vector.c:5:41: warning: unknown attribute 'vector_size' ignored [-Wunknown-attributes]
   typedef double vec4d __attribute__ ((vector_size(4 * sizeof(double))));
                                        ^
1 warning generated.
[ 85%] Building C object CMakeFiles/globalsums.dir/kahan_gcc_vector8.c.o
/home/brobey/GlobalSums/kahan_gcc_vector8.c:5:41: warning: unknown attribute 'vector_size' ignored [-Wunknown-attributes]
   typedef double vec8d __attribute__ ((vector_size(8 * sizeof(double))));
                                        ^
1 warning generated.
[ 90%] Building C object CMakeFiles/globalsums.dir/knuth_gcc_vector.c.o
/home/brobey/GlobalSums/knuth_gcc_vector.c:5:41: warning: unknown attribute 'vector_size' ignored [-Wunknown-attributes]
   typedef double vec4d __attribute__ ((vector_size(4 * sizeof(double))));
                                        ^
1 warning generated.
[ 95%] Building C object CMakeFiles/globalsums.dir/knuth_gcc_vector8.c.o
/home/brobey/GlobalSums/knuth_gcc_vector8.c:5:42: warning: unknown attribute 'vector_size' ignored [-Wunknown-attributes]
    typedef double vec8d __attribute__ ((vector_size(8 * sizeof(double))));
                                         ^
1 warning generated.
[100%] Linking C executable globalsums
[100%] Built target globalsums
--- max num openmp threads: 160
--- num openmp threads in parallel region: 160
SETTINGS INFO -- ncells 16 log 4 ndigits 3 ndigitsld 0 nbits 8 nbitsld 2
Initializing mesh with Leblanc problem, high values first
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000001   Serial sum
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000006   Serial sum with digit truncation
  accurate sum 0.8000000007999972 sum 0.8000000007999972 diff          0 relative diff          0 runtime 0.000001   Serial sum with bit truncation
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000008   Serial sum with long double accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000003   Serial sum with long double accumulator with ndigit truncation
  accurate sum 0.8000000007999999 sum 0.8000000007999999 diff          0 relative diff          0 runtime 0.000002   Serial sum with long double accumulator with bit truncation
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double kahan sum accumulator
  accurate sum 0.8000000008      sum 0.2000000002      diff       -0.6 relative diff      -0.75 runtime 0.000000   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 0.8000000008      sum 0.1000000001      diff       -0.7 relative diff     -0.875 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double knuth sum accumulator
  accurate sum 0.8000000008      sum 0.2000000002      diff       -0.6 relative diff      -0.75 runtime 0.000000   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 0.8000000008      sum 0.1000000001      diff       -0.7 relative diff     -0.875 runtime 0.000000   8 wide GCC vector extensions Knuth sum
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000004   Pair-wise sum


  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000075   OpenMP sum
  accurate sum 0.8000000007999972 sum 0.8000000007999972 diff          0 relative diff          0 runtime 0.000073   OpenMP sum with bit truncation
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000174   OpenMP sum with double double kahan sum accumulator
  accurate sum 0.8000000007999999 sum 0.8000000007999999 diff          0 relative diff          0 runtime 0.000151   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 32 log 5 ndigits 4 ndigitsld 1 nbits 9 nbitsld 3
Initializing mesh with Leblanc problem, high values first
  accurate sum 1.6000000016      sum 1.6000000016      diff  4.441e-16 relative diff  2.776e-16 runtime 0.000000   Serial sum
  accurate sum 1.6000000016      sum 1.6000000016      diff  4.441e-16 relative diff  2.776e-16 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000002   Serial sum with digit truncation
  accurate sum 1.600000001599938 sum 1.600000001599938 diff          0 relative diff          0 runtime 0.000000   Serial sum with bit truncation
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000001   Serial sum with long double accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000003   Serial sum with long double accumulator with ndigit truncation
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000001   Serial sum with long double accumulator with bit truncation
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000001   Serial sum with double double kahan sum accumulator
  accurate sum 1.6000000016      sum 0.4000000004      diff       -1.2 relative diff      -0.75 runtime 0.000000   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 1.6000000016      sum 0.2000000002      diff       -1.4 relative diff     -0.875 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000001   Serial sum with double double knuth sum accumulator
  accurate sum 1.6000000016      sum 0.4000000004      diff       -1.2 relative diff      -0.75 runtime 0.000000   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 1.6000000016      sum 0.2000000002      diff       -1.4 relative diff     -0.875 runtime 0.000000   8 wide GCC vector extensions Knuth sum
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000002   Pair-wise sum


  accurate sum 1.6000000016      sum 1.6000000016      diff  4.441e-16 relative diff  2.776e-16 runtime 0.000045   OpenMP sum
  accurate sum 1.600000001599994 sum 1.600000001599994 diff          0 relative diff          0 runtime 0.000070   OpenMP sum with bit truncation
  accurate sum 1.6000000016      sum 1.6000000016      diff  4.441e-16 relative diff  2.776e-16 runtime 0.000148   OpenMP sum with double double kahan sum accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000148   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 64 log 6 ndigits 4 ndigitsld 1 nbits 9 nbitsld 3
Initializing mesh with Leblanc problem, high values first
  accurate sum 3.2000000032      sum 3.200000003200002 diff  1.776e-15 relative diff  5.551e-16 runtime 0.000000   Serial sum
  accurate sum 3.2000000032      sum 3.200000003200002 diff  1.776e-15 relative diff  5.551e-16 runtime 0.000001   Serial sum (OpenMP SIMD pragma)
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000002   Serial sum with digit truncation
  accurate sum 3.200000003199875 sum 3.200000003199875 diff          0 relative diff          0 runtime 0.000000   Serial sum with bit truncation
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000002   Serial sum with long double accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000004   Serial sum with long double accumulator with ndigit truncation
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000002   Serial sum with long double accumulator with bit truncation
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000001   Serial sum with double double kahan sum accumulator
  accurate sum 3.2000000032      sum 0.8000000008      diff       -2.4 relative diff      -0.75 runtime 0.000000   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 3.2000000032      sum 0.4000000004      diff       -2.8 relative diff     -0.875 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000001   Serial sum with double double knuth sum accumulator
  accurate sum 3.2000000032      sum 0.8000000008      diff       -2.4 relative diff      -0.75 runtime 0.000000   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 3.2000000032      sum 0.4000000004      diff       -2.8 relative diff     -0.875 runtime 0.000000   8 wide GCC vector extensions Knuth sum
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000001   Pair-wise sum


  accurate sum 3.2000000032      sum 3.200000003200002 diff  1.776e-15 relative diff  5.551e-16 runtime 0.000059   OpenMP sum
  accurate sum 3.200000003199989 sum 3.200000003199989 diff          0 relative diff          0 runtime 0.000070   OpenMP sum with bit truncation
  accurate sum 3.2000000032      sum 3.200000003200002 diff  1.776e-15 relative diff  5.551e-16 runtime 0.000147   OpenMP sum with double double kahan sum accumulator
  accurate sum 3.2000000032      sum 3.200000003200001 diff  1.776e-15 relative diff  5.551e-16 runtime 0.000145   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 128 log 7 ndigits 4 ndigitsld 1 nbits 11 nbitsld 4
Initializing mesh with Leblanc problem, high values first
  accurate sum 6.4000000064      sum 6.400000006399994 diff -6.217e-15 relative diff -9.714e-16 runtime 0.000000   Serial sum
  accurate sum 6.4000000064      sum 6.400000006399994 diff -6.217e-15 relative diff -9.714e-16 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000001   Serial sum with digit truncation
  accurate sum 6.400000006398841 sum 6.400000006398841 diff          0 relative diff          0 runtime 0.000001   Serial sum with bit truncation
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000003   Serial sum with long double accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000005   Serial sum with long double accumulator with ndigit truncation
  accurate sum 6.400000006399992 sum 6.400000006399992 diff          0 relative diff          0 runtime 0.000003   Serial sum with long double accumulator with bit truncation
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000001   Serial sum with double double kahan sum accumulator
  accurate sum 6.4000000064      sum 1.6000000016      diff       -4.8 relative diff      -0.75 runtime 0.000000   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 6.4000000064      sum 0.8000000008      diff       -5.6 relative diff     -0.875 runtime 0.000001   8 wide GCC vector extensions Kahan sum
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000001   Serial sum with double double knuth sum accumulator
  accurate sum 6.4000000064      sum 1.6000000016      diff       -4.8 relative diff      -0.75 runtime 0.000000   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 6.4000000064      sum 0.8000000008      diff       -5.6 relative diff     -0.875 runtime 0.000000   8 wide GCC vector extensions Knuth sum
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000002   Pair-wise sum


  accurate sum 6.4000000064      sum 6.400000006399994 diff -6.217e-15 relative diff -9.714e-16 runtime 0.000056   OpenMP sum
  accurate sum 6.400000006399978 sum 6.400000006399978 diff          0 relative diff          0 runtime 0.000071   OpenMP sum with bit truncation
  accurate sum 6.4000000064      sum 6.400000006399994 diff -6.217e-15 relative diff -9.714e-16 runtime 0.000150   OpenMP sum with double double kahan sum accumulator
  accurate sum 6.400000006399999 sum 6.400000006399992 diff -7.105e-15 relative diff  -1.11e-15 runtime 0.000142   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 256 log 8 ndigits 4 ndigitsld 1 nbits 12 nbitsld 4
Initializing mesh with Leblanc problem, high values first
  accurate sum 12.8000000128     sum 12.80000001279997 diff -2.842e-14 relative diff  -2.22e-15 runtime 0.000000   Serial sum
  accurate sum 12.8000000128     sum 12.80000001279997 diff -2.842e-14 relative diff  -2.22e-15 runtime 0.000001   Serial sum (OpenMP SIMD pragma)
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000002   Serial sum with digit truncation
  accurate sum 12.80000001279404 sum 12.80000001279404 diff          0 relative diff          0 runtime 0.000001   Serial sum with bit truncation
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000007   Serial sum with long double accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000008   Serial sum with long double accumulator with ndigit truncation
  accurate sum 12.80000001279998 sum 12.80000001279998 diff          0 relative diff          0 runtime 0.000007   Serial sum with long double accumulator with bit truncation
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000002   Serial sum with double double kahan sum accumulator
  accurate sum 12.8000000128     sum 3.2000000032      diff       -9.6 relative diff      -0.75 runtime 0.000001   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 12.8000000128     sum 1.6000000016      diff      -11.2 relative diff     -0.875 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000003   Serial sum with double double knuth sum accumulator
  accurate sum 12.8000000128     sum 3.2000000032      diff       -9.6 relative diff      -0.75 runtime 0.000001   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 12.8000000128     sum 1.6000000016      diff      -11.2 relative diff     -0.875 runtime 0.000000   8 wide GCC vector extensions Knuth sum
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000002   Pair-wise sum


  accurate sum 12.8000000128     sum 12.80000001279999 diff -1.243e-14 relative diff -9.714e-16 runtime 0.000054   OpenMP sum
  accurate sum 12.8000000127995  sum 12.8000000127995  diff          0 relative diff          0 runtime 0.000096   OpenMP sum with bit truncation
  accurate sum 12.8000000128     sum 12.80000001279999 diff -1.243e-14 relative diff -9.714e-16 runtime 0.000147   OpenMP sum with double double kahan sum accumulator
  accurate sum 12.8000000128     sum 12.80000001279998 diff -1.421e-14 relative diff  -1.11e-15 runtime 0.000157   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 512 log 9 ndigits 4 ndigitsld 1 nbits 13 nbitsld 5
Initializing mesh with Leblanc problem, high values first
  accurate sum 25.6000000256     sum 25.60000002559964 diff -3.588e-13 relative diff -1.402e-14 runtime 0.000001   Serial sum
  accurate sum 25.6000000256     sum 25.60000002559964 diff -3.588e-13 relative diff -1.402e-14 runtime 0.000001   Serial sum (OpenMP SIMD pragma)
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000003   Serial sum with digit truncation
  accurate sum 25.60000002558809 sum 25.60000002558809 diff          0 relative diff          0 runtime 0.000001   Serial sum with bit truncation
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000013   Serial sum with long double accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000014   Serial sum with long double accumulator with ndigit truncation
  accurate sum 25.60000002559991 sum 25.60000002559991 diff          0 relative diff          0 runtime 0.000013   Serial sum with long double accumulator with bit truncation
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000003   Serial sum with double double kahan sum accumulator
  accurate sum 25.6000000256     sum 6.4000000064      diff      -19.2 relative diff      -0.75 runtime 0.000001   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 25.6000000256     sum 3.2000000032      diff      -22.4 relative diff     -0.875 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000006   Serial sum with double double knuth sum accumulator
  accurate sum 25.6000000256     sum 6.4000000064      diff      -19.2 relative diff      -0.75 runtime 0.000002   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 25.6000000256     sum 3.2000000032      diff      -22.4 relative diff     -0.875 runtime 0.000001   8 wide GCC vector extensions Knuth sum
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000002   Pair-wise sum


  accurate sum 25.6000000256     sum 25.60000002559989 diff -1.137e-13 relative diff -4.441e-15 runtime 0.000049   OpenMP sum
  accurate sum 25.600000025599   sum 25.600000025599   diff          0 relative diff          0 runtime 0.000084   OpenMP sum with bit truncation
  accurate sum 25.6000000256     sum 25.60000002559989 diff -1.137e-13 relative diff -4.441e-15 runtime 0.000152   OpenMP sum with double double kahan sum accumulator
  accurate sum 25.6000000256     sum 25.60000002559988 diff -1.137e-13 relative diff -4.441e-15 runtime 0.000157   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 1024 log 10 ndigits 5 ndigitsld 2 nbits 14 nbitsld 6
Initializing mesh with Leblanc problem, high values first
  accurate sum 51.2000000512     sum 51.20000005120137 diff  1.371e-12 relative diff  2.678e-14 runtime 0.000002   Serial sum
  accurate sum 51.2000000512     sum 51.20000005120137 diff  1.371e-12 relative diff  2.678e-14 runtime 0.000002   Serial sum (OpenMP SIMD pragma)
  accurate sum 51.200000051      sum 51.200000051      diff          0 relative diff          0 runtime 0.000003   Serial sum with digit truncation
  accurate sum 51.20000005117618 sum 51.20000005117618 diff          0 relative diff          0 runtime 0.000003   Serial sum with bit truncation
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000025   Serial sum with long double accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000026   Serial sum with long double accumulator with ndigit truncation
  accurate sum 51.20000005119982 sum 51.20000005119982 diff          0 relative diff          0 runtime 0.000025   Serial sum with long double accumulator with bit truncation
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000007   Serial sum with double double kahan sum accumulator
  accurate sum 51.2000000512     sum 12.8000000128     diff      -38.4 relative diff      -0.75 runtime 0.000002   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 51.2000000512     sum 6.4000000064      diff      -44.8 relative diff     -0.875 runtime 0.000001   8 wide GCC vector extensions Kahan sum
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000011   Serial sum with double double knuth sum accumulator
  accurate sum 51.2000000512     sum 12.8000000128     diff      -38.4 relative diff      -0.75 runtime 0.000003   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 51.2000000512     sum 6.4000000064      diff      -44.8 relative diff     -0.875 runtime 0.000002   8 wide GCC vector extensions Knuth sum
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000004   Pair-wise sum


  accurate sum 51.2000000512     sum 51.20000005119975 diff -2.487e-13 relative diff -4.857e-15 runtime 0.000055   OpenMP sum
  accurate sum 51.20000005119073 sum 51.20000005119073 diff          0 relative diff          0 runtime 0.000081   OpenMP sum with bit truncation
  accurate sum 51.2000000512     sum 51.20000005119975 diff -2.487e-13 relative diff -4.857e-15 runtime 0.000158   OpenMP sum with double double kahan sum accumulator
  accurate sum 51.20000005119999 sum 51.20000005119974 diff -2.558e-13 relative diff -4.996e-15 runtime 0.000153   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 2048 log 11 ndigits 5 ndigitsld 2 nbits 15 nbitsld 6
Initializing mesh with Leblanc problem, high values first
  accurate sum 102.4000001024    sum 102.4000001024003 diff  2.842e-13 relative diff  2.776e-15 runtime 0.000003   Serial sum
  accurate sum 102.4000001024    sum 102.4000001024003 diff  2.842e-13 relative diff  2.776e-15 runtime 0.000004   Serial sum (OpenMP SIMD pragma)
  accurate sum 102.4000001       sum 102.4000001       diff          0 relative diff          0 runtime 0.000006   Serial sum with digit truncation
  accurate sum 102.4000001023524 sum 102.4000001023524 diff          0 relative diff          0 runtime 0.000005   Serial sum with bit truncation
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000048   Serial sum with long double accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000050   Serial sum with long double accumulator with ndigit truncation
  accurate sum 102.4000001023996 sum 102.4000001023996 diff          0 relative diff          0 runtime 0.000049   Serial sum with long double accumulator with bit truncation
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000013   Serial sum with double double kahan sum accumulator
  accurate sum 102.4000001024    sum 25.6000000256     diff      -76.8 relative diff      -0.75 runtime 0.000003   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 102.4000001024    sum 12.8000000128     diff      -89.6 relative diff     -0.875 runtime 0.000002   8 wide GCC vector extensions Kahan sum
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000023   Serial sum with double double knuth sum accumulator
  accurate sum 102.4000001024    sum 25.6000000256     diff      -76.8 relative diff      -0.75 runtime 0.000006   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 102.4000001024    sum 12.8000000128     diff      -89.6 relative diff     -0.875 runtime 0.000003   8 wide GCC vector extensions Knuth sum
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000006   Pair-wise sum


  accurate sum 102.4000001024    sum 102.4000001023994 diff -6.111e-13 relative diff -5.967e-15 runtime 0.000053   OpenMP sum
  accurate sum 102.4000001023524 sum 102.4000001023524 diff          0 relative diff          0 runtime 0.000076   OpenMP sum with bit truncation
  accurate sum 102.4000001024    sum 102.4000001023994 diff -6.111e-13 relative diff -5.967e-15 runtime 0.000144   OpenMP sum with double double kahan sum accumulator
  accurate sum 102.4000001024    sum 102.4000001023994 diff -6.253e-13 relative diff -6.106e-15 runtime 0.000150   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 4096 log 12 ndigits 5 ndigitsld 2 nbits 15 nbitsld 7
Initializing mesh with Leblanc problem, high values first
  accurate sum 204.8000002048    sum 204.8000002047672 diff  -3.28e-11 relative diff -1.601e-13 runtime 0.000008   Serial sum
  accurate sum 204.8000002048    sum 204.8000002047672 diff  -3.28e-11 relative diff -1.601e-13 runtime 0.000009   Serial sum (OpenMP SIMD pragma)
  accurate sum 204.8000002       sum 204.8000002       diff          0 relative diff          0 runtime 0.000010   Serial sum with digit truncation
  accurate sum 204.8000002047047 sum 204.8000002047047 diff          0 relative diff          0 runtime 0.000008   Serial sum with bit truncation
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000086   Serial sum with long double accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000098   Serial sum with long double accumulator with ndigit truncation
  accurate sum 204.8000002047993 sum 204.8000002047993 diff          0 relative diff          0 runtime 0.000097   Serial sum with long double accumulator with bit truncation
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000025   Serial sum with double double kahan sum accumulator
  accurate sum 204.8000002048    sum 51.2000000512     diff     -153.6 relative diff      -0.75 runtime 0.000006   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 204.8000002048    sum 25.6000000256     diff     -179.2 relative diff     -0.875 runtime 0.000003   8 wide GCC vector extensions Kahan sum
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000045   Serial sum with double double knuth sum accumulator
  accurate sum 204.8000002048    sum 51.2000000512     diff     -153.6 relative diff      -0.75 runtime 0.000012   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 204.8000002048    sum 25.6000000256     diff     -179.2 relative diff     -0.875 runtime 0.000006   8 wide GCC vector extensions Knuth sum
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000011   Pair-wise sum


  accurate sum 204.8000002048    sum 204.8000002047997 diff -3.126e-13 relative diff -1.527e-15 runtime 0.000055   OpenMP sum
  accurate sum 204.8000002047047 sum 204.8000002047047 diff          0 relative diff          0 runtime 0.000081   OpenMP sum with bit truncation
  accurate sum 204.8000002048    sum 204.8000002047997 diff -3.126e-13 relative diff -1.527e-15 runtime 0.000153   OpenMP sum with double double kahan sum accumulator
  accurate sum 204.8000002048    sum 204.8000002047996 diff -3.411e-13 relative diff -1.665e-15 runtime 0.000157   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 8192 log 13 ndigits 5 ndigitsld 2 nbits 17 nbitsld 7
Initializing mesh with Leblanc problem, high values first
  accurate sum 409.6000004096    sum 409.6000004095737 diff -2.626e-11 relative diff -6.412e-14 runtime 0.000015   Serial sum
  accurate sum 409.6000004096    sum 409.6000004095737 diff -2.626e-11 relative diff -6.412e-14 runtime 0.000016   Serial sum (OpenMP SIMD pragma)
  accurate sum 409.60000041      sum 409.60000041      diff          0 relative diff          0 runtime 0.000017   Serial sum with digit truncation
  accurate sum 409.6000004038215 sum 409.6000004038215 diff          0 relative diff          0 runtime 0.000016   Serial sum with bit truncation
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000193   Serial sum with long double accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000172   Serial sum with long double accumulator with ndigit truncation
  accurate sum 409.6000004095986 sum 409.6000004095986 diff          0 relative diff          0 runtime 0.000173   Serial sum with long double accumulator with bit truncation
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000050   Serial sum with double double kahan sum accumulator
  accurate sum 409.6000004096    sum 102.4000001024    diff     -307.2 relative diff      -0.75 runtime 0.000013   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 409.6000004096    sum 51.2000000512     diff     -358.4 relative diff     -0.875 runtime 0.000006   8 wide GCC vector extensions Kahan sum
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000084   Serial sum with double double knuth sum accumulator
  accurate sum 409.6000004096    sum 102.4000001024    diff     -307.2 relative diff      -0.75 runtime 0.000022   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 409.6000004096    sum 51.2000000512     diff     -358.4 relative diff     -0.875 runtime 0.000011   8 wide GCC vector extensions Knuth sum
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000028   Pair-wise sum


  accurate sum 409.6000004096    sum 409.6000004095998 diff -1.705e-13 relative diff -4.163e-16 runtime 0.000058   OpenMP sum
  accurate sum 409.6000004094094 sum 409.6000004094094 diff          0 relative diff          0 runtime 0.000082   OpenMP sum with bit truncation
  accurate sum 409.6000004096    sum 409.6000004095998 diff -1.705e-13 relative diff -4.163e-16 runtime 0.000155   OpenMP sum with double double kahan sum accumulator
  accurate sum 409.6000004095999 sum 409.6000004095997 diff -2.274e-13 relative diff -5.551e-16 runtime 0.000177   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 16384 log 14 ndigits 5 ndigitsld 2 nbits 18 nbitsld 8
Initializing mesh with Leblanc problem, high values first
  accurate sum 819.2000008192    sum 819.2000008196816 diff  4.816e-10 relative diff  5.879e-13 runtime 0.000030   Serial sum
  accurate sum 819.2000008192    sum 819.2000008196816 diff  4.816e-10 relative diff  5.879e-13 runtime 0.000030   Serial sum (OpenMP SIMD pragma)
  accurate sum 819.20000082      sum 819.20000082      diff          0 relative diff          0 runtime 0.000028   Serial sum with digit truncation
  accurate sum 819.2000007927418 sum 819.2000007927418 diff          0 relative diff          0 runtime 0.000025   Serial sum with bit truncation
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000356   Serial sum with long double accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000367   Serial sum with long double accumulator with ndigit truncation
  accurate sum 819.2000008191972 sum 819.2000008191972 diff          0 relative diff          0 runtime 0.000383   Serial sum with long double accumulator with bit truncation
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000098   Serial sum with double double kahan sum accumulator
  accurate sum 819.2000008192    sum 204.8000002048    diff     -614.4 relative diff      -0.75 runtime 0.000025   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 819.2000008192    sum 102.4000001024    diff     -716.8 relative diff     -0.875 runtime 0.000013   8 wide GCC vector extensions Kahan sum
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000174   Serial sum with double double knuth sum accumulator
  accurate sum 819.2000008192    sum 204.8000002048    diff     -614.4 relative diff      -0.75 runtime 0.000047   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 819.2000008192    sum 102.4000001024    diff     -716.8 relative diff     -0.875 runtime 0.000023   8 wide GCC vector extensions Knuth sum
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000072   Pair-wise sum


  accurate sum 819.2000008192    sum 819.2000008191953 diff -4.661e-12 relative diff  -5.69e-15 runtime 0.000057   OpenMP sum
  accurate sum 819.2000008188188 sum 819.2000008188188 diff          0 relative diff          0 runtime 0.000083   OpenMP sum with bit truncation
  accurate sum 819.2000008192    sum 819.200000819199  diff -1.023e-12 relative diff -1.249e-15 runtime 0.000182   OpenMP sum with double double kahan sum accumulator
  accurate sum 819.2000008191999 sum 819.200000819199  diff -9.095e-13 relative diff  -1.11e-15 runtime 0.000160   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 32768 log 15 ndigits 6 ndigitsld 3 nbits 19 nbitsld 9
Initializing mesh with Leblanc problem, high values first
  accurate sum 1638.4000016384   sum 1638.400001638733 diff  3.331e-10 relative diff  2.033e-13 runtime 0.000062   Serial sum
  accurate sum 1638.4000016384   sum 1638.400001638733 diff  3.331e-10 relative diff  2.033e-13 runtime 0.000065   Serial sum (OpenMP SIMD pragma)
  accurate sum 1638.400002       sum 1638.400002       diff          0 relative diff          0 runtime 0.000061   Serial sum with digit truncation
  accurate sum 1638.400001525879 sum 1638.400001525879 diff          0 relative diff          0 runtime 0.000062   Serial sum with bit truncation
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000770   Serial sum with long double accumulator
  accurate sum 1638.400001638    sum 1638.400001638    diff          0 relative diff          0 runtime 0.000770   Serial sum with long double accumulator with ndigit truncation
  accurate sum 1638.400001638336 sum 1638.400001638336 diff          0 relative diff          0 runtime 0.000771   Serial sum with long double accumulator with bit truncation
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000206   Serial sum with double double kahan sum accumulator
  accurate sum 1638.4000016384   sum 409.6000004096    diff      -1229 relative diff      -0.75 runtime 0.000049   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 1638.4000016384   sum 204.8000002048    diff      -1434 relative diff     -0.875 runtime 0.000026   8 wide GCC vector extensions Kahan sum
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000354   Serial sum with double double knuth sum accumulator
  accurate sum 1638.4000016384   sum 409.6000004096    diff      -1229 relative diff      -0.75 runtime 0.000092   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 1638.4000016384   sum 204.8000002048    diff      -1434 relative diff     -0.875 runtime 0.000045   8 wide GCC vector extensions Knuth sum
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000078   Pair-wise sum


  accurate sum 1638.4000016384   sum 1638.4000016384   diff -2.274e-13 relative diff -1.388e-16 runtime 0.000051   OpenMP sum
  accurate sum 1638.400001630187 sum 1638.400001630187 diff          0 relative diff          0 runtime 0.000086   OpenMP sum with bit truncation
  accurate sum 1638.4000016384   sum 1638.400001638399 diff -6.821e-13 relative diff -4.163e-16 runtime 0.000159   OpenMP sum with double double kahan sum accumulator
  accurate sum 1638.4000016384   sum 1638.400001638399 diff -9.095e-13 relative diff -5.551e-16 runtime 0.000180   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 65536 log 16 ndigits 6 ndigitsld 3 nbits 20 nbitsld 9
Initializing mesh with Leblanc problem, high values first
  accurate sum 3276.8000032768   sum 3276.800003276371 diff -4.293e-10 relative diff  -1.31e-13 runtime 0.000124   Serial sum
  accurate sum 3276.8000032768   sum 3276.800003276371 diff -4.293e-10 relative diff  -1.31e-13 runtime 0.000124   Serial sum (OpenMP SIMD pragma)
  accurate sum 3276.800003       sum 3276.800003       diff          0 relative diff          0 runtime 0.000121   Serial sum with digit truncation
  accurate sum 3276.800003051758 sum 3276.800003051758 diff          0 relative diff          0 runtime 0.000118   Serial sum with bit truncation
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.001536   Serial sum with long double accumulator
  accurate sum 3276.800003277    sum 3276.800003277    diff          0 relative diff          0 runtime 0.001561   Serial sum with long double accumulator with ndigit truncation
  accurate sum 3276.800003276672 sum 3276.800003276672 diff          0 relative diff          0 runtime 0.001502   Serial sum with long double accumulator with bit truncation
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000397   Serial sum with double double kahan sum accumulator
  accurate sum 3276.8000032768   sum 819.2000008192    diff      -2458 relative diff      -0.75 runtime 0.000103   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 3276.8000032768   sum 409.6000004096    diff      -2867 relative diff     -0.875 runtime 0.000052   8 wide GCC vector extensions Kahan sum
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000703   Serial sum with double double knuth sum accumulator
  accurate sum 3276.8000032768   sum 819.2000008192    diff      -2458 relative diff      -0.75 runtime 0.000182   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 3276.8000032768   sum 409.6000004096    diff      -2867 relative diff     -0.875 runtime 0.000086   8 wide GCC vector extensions Knuth sum
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000161   Pair-wise sum


  accurate sum 3276.8000032768   sum 3276.800003276826 diff  2.638e-11 relative diff  8.049e-15 runtime 0.000051   OpenMP sum
  accurate sum 3276.800003260374 sum 3276.800003260374 diff          0 relative diff          0 runtime 0.000090   OpenMP sum with bit truncation
  accurate sum 3276.8000032768   sum 3276.800003276799 diff -1.364e-12 relative diff -4.163e-16 runtime 0.000173   OpenMP sum with double double kahan sum accumulator
  accurate sum 3276.8000032768   sum 3276.800003276798 diff -1.819e-12 relative diff -5.551e-16 runtime 0.000160   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 131072 log 17 ndigits 6 ndigitsld 3 nbits 21 nbitsld 10
Initializing mesh with Leblanc problem, high values first
  accurate sum 6553.6000065536   sum 6553.600006562821 diff  9.221e-09 relative diff  1.407e-12 runtime 0.000241   Serial sum
  accurate sum 6553.6000065536   sum 6553.600006562821 diff  9.221e-09 relative diff  1.407e-12 runtime 0.000250   Serial sum (OpenMP SIMD pragma)
  accurate sum 6553.600007       sum 6553.600007       diff          0 relative diff          0 runtime 0.000238   Serial sum with digit truncation
  accurate sum 6553.600006103516 sum 6553.600006103516 diff          0 relative diff          0 runtime 0.000247   Serial sum with bit truncation
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.003042   Serial sum with long double accumulator
  accurate sum 6553.600006554    sum 6553.600006554    diff          0 relative diff          0 runtime 0.003033   Serial sum with long double accumulator with ndigit truncation
  accurate sum 6553.600006553344 sum 6553.600006553344 diff          0 relative diff          0 runtime 0.003061   Serial sum with long double accumulator with bit truncation
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000798   Serial sum with double double kahan sum accumulator
  accurate sum 6553.6000065536   sum 1638.4000016384   diff      -4915 relative diff      -0.75 runtime 0.000206   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 6553.6000065536   sum 819.2000008192    diff      -5734 relative diff     -0.875 runtime 0.000102   8 wide GCC vector extensions Kahan sum
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.001414   Serial sum with double double knuth sum accumulator
  accurate sum 6553.6000065536   sum 1638.4000016384   diff      -4915 relative diff      -0.75 runtime 0.000365   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 6553.6000065536   sum 819.2000008192    diff      -5734 relative diff     -0.875 runtime 0.002198   8 wide GCC vector extensions Knuth sum
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.003547   Pair-wise sum


  accurate sum 6553.6000065536   sum 6553.600006553569 diff -3.092e-11 relative diff -4.718e-15 runtime 0.000047   OpenMP sum
  accurate sum 6553.600006461143 sum 6553.600006461143 diff          0 relative diff          0 runtime 0.000054   OpenMP sum with bit truncation
  accurate sum 6553.6000065536   sum 6553.600006553591 diff -9.095e-12 relative diff -1.388e-15 runtime 0.000141   OpenMP sum with double double kahan sum accumulator
  accurate sum 6553.600006553599 sum 6553.600006553588 diff -1.091e-11 relative diff -1.665e-15 runtime 0.000143   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 262144 log 18 ndigits 6 ndigitsld 3 nbits 22 nbitsld 10
Initializing mesh with Leblanc problem, high values first
  accurate sum 13107.2000131072  sum 13107.20001314317 diff  3.597e-08 relative diff  2.745e-12 runtime 0.000499   Serial sum
  accurate sum 13107.2000131072  sum 13107.20001314317 diff  3.597e-08 relative diff  2.745e-12 runtime 0.000490   Serial sum (OpenMP SIMD pragma)
  accurate sum 13107.20001       sum 13107.20001       diff          0 relative diff          0 runtime 0.000482   Serial sum with digit truncation
  accurate sum 13107.20001220703 sum 13107.20001220703 diff          0 relative diff          0 runtime 0.000486   Serial sum with bit truncation
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.006165   Serial sum with long double accumulator
  accurate sum 13107.20001311    sum 13107.20001311    diff          0 relative diff          0 runtime 0.006180   Serial sum with long double accumulator with ndigit truncation
  accurate sum 13107.20001310669 sum 13107.20001310669 diff          0 relative diff          0 runtime 0.006471   Serial sum with long double accumulator with bit truncation
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.001583   Serial sum with double double kahan sum accumulator
  accurate sum 13107.2000131072  sum 3276.8000032768   diff      -9830 relative diff      -0.75 runtime 0.000407   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 13107.2000131072  sum 1638.4000016384   diff -1.147e+04 relative diff     -0.875 runtime 0.000207   8 wide GCC vector extensions Kahan sum
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.002828   Serial sum with double double knuth sum accumulator
  accurate sum 13107.2000131072  sum 3276.8000032768   diff      -9830 relative diff      -0.75 runtime 0.000737   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 13107.2000131072  sum 1638.4000016384   diff -1.147e+04 relative diff     -0.875 runtime 0.000366   8 wide GCC vector extensions Knuth sum
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000642   Pair-wise sum


  accurate sum 13107.2000131072  sum 13107.2000131068  diff -4.002e-10 relative diff -3.053e-14 runtime 0.000131   OpenMP sum
  accurate sum 13107.20001268387 sum 13107.20001268387 diff          0 relative diff          0 runtime 0.000049   OpenMP sum with bit truncation
  accurate sum 13107.2000131072  sum 13107.20001310718 diff -2.365e-11 relative diff -1.804e-15 runtime 0.000151   OpenMP sum with double double kahan sum accumulator
  accurate sum 13107.2000131072  sum 13107.20001310718 diff -2.183e-11 relative diff -1.665e-15 runtime 0.000150   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 524288 log 19 ndigits 6 ndigitsld 3 nbits 23 nbitsld 11
Initializing mesh with Leblanc problem, high values first
  accurate sum 26214.4000262144  sum 26214.40002564823 diff -5.662e-07 relative diff  -2.16e-11 runtime 0.000962   Serial sum
  accurate sum 26214.4000262144  sum 26214.40002564823 diff -5.662e-07 relative diff  -2.16e-11 runtime 0.000919   Serial sum (OpenMP SIMD pragma)
  accurate sum 26214.40003       sum 26214.40003       diff          0 relative diff          0 runtime 0.000938   Serial sum with digit truncation
  accurate sum 26214.40002441406 sum 26214.40002441406 diff          0 relative diff          0 runtime 0.000948   Serial sum with bit truncation
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.012282   Serial sum with long double accumulator
  accurate sum 26214.40002621    sum 26214.40002621    diff          0 relative diff          0 runtime 0.012071   Serial sum with long double accumulator with ndigit truncation
  accurate sum 26214.40002620965 sum 26214.40002620965 diff          0 relative diff          0 runtime 0.012139   Serial sum with long double accumulator with bit truncation
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.003222   Serial sum with double double kahan sum accumulator
  accurate sum 26214.4000262144  sum 6553.6000065536   diff -1.966e+04 relative diff      -0.75 runtime 0.000818   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 26214.4000262144  sum 3276.8000032768   diff -2.294e+04 relative diff     -0.875 runtime 0.000416   8 wide GCC vector extensions Kahan sum
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.005669   Serial sum with double double knuth sum accumulator
  accurate sum 26214.4000262144  sum 6553.6000065536   diff -1.966e+04 relative diff      -0.75 runtime 0.001450   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 26214.4000262144  sum 3276.8000032768   diff -2.294e+04 relative diff     -0.875 runtime 0.000726   8 wide GCC vector extensions Knuth sum
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.001270   Pair-wise sum


  accurate sum 26214.4000262144  sum 26214.40002621475 diff  3.529e-10 relative diff  1.346e-14 runtime 0.000205   OpenMP sum
  accurate sum 26214.40002441406 sum 26214.40002441406 diff          0 relative diff          0 runtime 0.000070   OpenMP sum with bit truncation
  accurate sum 26214.4000262144  sum 26214.40002621435 diff -5.093e-11 relative diff -1.943e-15 runtime 0.000200   OpenMP sum with double double kahan sum accumulator
  accurate sum 26214.4000262144  sum 26214.40002621434 diff -5.821e-11 relative diff  -2.22e-15 runtime 0.000201   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 1048576 log 20 ndigits 7 ndigitsld 4 nbits 24 nbitsld 12
Initializing mesh with Leblanc problem, high values first
  accurate sum 52428.8000524288  sum 52428.80005292332 diff  4.945e-07 relative diff  9.432e-12 runtime 0.002070   Serial sum
  accurate sum 52428.8000524288  sum 52428.80005292332 diff  4.945e-07 relative diff  9.432e-12 runtime 0.002065   Serial sum (OpenMP SIMD pragma)
  accurate sum 52428.8001        sum 52428.8001        diff          0 relative diff          0 runtime 0.002037   Serial sum with digit truncation
  accurate sum 52428.80004882812 sum 52428.80004882812 diff          0 relative diff          0 runtime 0.001998   Serial sum with bit truncation
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.024375   Serial sum with long double accumulator
  accurate sum 52428.8000524     sum 52428.8000524     diff          0 relative diff          0 runtime 0.024691   Serial sum with long double accumulator with ndigit truncation
  accurate sum 52428.8000524044  sum 52428.8000524044  diff          0 relative diff          0 runtime 0.024769   Serial sum with long double accumulator with bit truncation
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.006670   Serial sum with double double kahan sum accumulator
  accurate sum 52428.8000524288  sum 13107.2000131072  diff -3.932e+04 relative diff      -0.75 runtime 0.001826   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 52428.8000524288  sum 6553.6000065536   diff -4.588e+04 relative diff     -0.875 runtime 0.000990   8 wide GCC vector extensions Kahan sum
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.011492   Serial sum with double double knuth sum accumulator
  accurate sum 52428.8000524288  sum 13107.2000131072  diff -3.932e+04 relative diff      -0.75 runtime 0.003074   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 52428.8000524288  sum 6553.6000065536   diff -4.588e+04 relative diff     -0.875 runtime 0.001565   8 wide GCC vector extensions Knuth sum
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.002947   Pair-wise sum


  accurate sum 52428.8000524288  sum 52428.80005243534 diff  6.541e-09 relative diff  1.248e-13 runtime 0.000464   OpenMP sum
  accurate sum 52428.80004882812 sum 52428.80004882812 diff          0 relative diff          0 runtime 0.000116   OpenMP sum with bit truncation
  accurate sum 52428.8000524288  sum 52428.80005242893 diff   1.31e-10 relative diff  2.498e-15 runtime 0.000382   OpenMP sum with double double kahan sum accumulator
  accurate sum 52428.80005242879 sum 52428.80005242891 diff  1.164e-10 relative diff   2.22e-15 runtime 0.000324   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 2097152 log 21 ndigits 7 ndigitsld 4 nbits 25 nbitsld 12
Initializing mesh with Leblanc problem, high values first
  accurate sum 104857.6001048576 sum 104857.6001084272 diff   3.57e-06 relative diff  3.404e-11 runtime 0.004523   Serial sum
  accurate sum 104857.6001048576 sum 104857.6001084272 diff   3.57e-06 relative diff  3.404e-11 runtime 0.004675   Serial sum (OpenMP SIMD pragma)
  accurate sum 104857.6          sum 104857.6          diff          0 relative diff          0 runtime 0.004660   Serial sum with digit truncation
  accurate sum 104857.6000976562 sum 104857.6000976562 diff          0 relative diff          0 runtime 0.006776   Serial sum with bit truncation
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.049738   Serial sum with long double accumulator
  accurate sum 104857.600105     sum 104857.600105     diff          0 relative diff          0 runtime 0.049492   Serial sum with long double accumulator with ndigit truncation
  accurate sum 104857.6001048088 sum 104857.6001048088 diff          0 relative diff          0 runtime 0.049621   Serial sum with long double accumulator with bit truncation
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.014021   Serial sum with double double kahan sum accumulator
  accurate sum 104857.6001048576 sum 26214.4000262144  diff -7.864e+04 relative diff      -0.75 runtime 0.004089   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 104857.6001048576 sum 13107.2000131072  diff -9.175e+04 relative diff     -0.875 runtime 0.002544   8 wide GCC vector extensions Kahan sum
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.023533   Serial sum with double double knuth sum accumulator
  accurate sum 104857.6001048576 sum 26214.4000262144  diff -7.864e+04 relative diff      -0.75 runtime 0.006730   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 104857.6001048576 sum 13107.2000131072  diff -9.175e+04 relative diff     -0.875 runtime 0.003610   8 wide GCC vector extensions Knuth sum
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.006566   Pair-wise sum


  accurate sum 104857.6001048576 sum 104857.6001048505 diff -7.116e-09 relative diff -6.786e-14 runtime 0.000399   OpenMP sum
  accurate sum 104857.6000976562 sum 104857.6000976562 diff          0 relative diff          0 runtime 0.000157   OpenMP sum with bit truncation
  accurate sum 104857.6001048576 sum 104857.6001048579 diff  3.347e-10 relative diff  3.192e-15 runtime 0.000578   OpenMP sum with double double kahan sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048579 diff  3.492e-10 relative diff  3.331e-15 runtime 0.000540   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 4194304 log 22 ndigits 7 ndigitsld 4 nbits 26 nbitsld 13
Initializing mesh with Leblanc problem, high values first
  accurate sum 209715.2002097152 sum 209715.2001908246 diff -1.889e-05 relative diff -9.008e-11 runtime 0.009148   Serial sum
  accurate sum 209715.2002097152 sum 209715.2001908246 diff -1.889e-05 relative diff -9.008e-11 runtime 0.009816   Serial sum (OpenMP SIMD pragma)
  accurate sum 209715.2          sum 209715.2          diff          0 relative diff          0 runtime 0.010388   Serial sum with digit truncation
  accurate sum 209715.19921875   sum 209715.19921875   diff          0 relative diff          0 runtime 0.010291   Serial sum with bit truncation
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.099588   Serial sum with long double accumulator
  accurate sum 209715.20021      sum 209715.20021      diff          0 relative diff          0 runtime 0.099580   Serial sum with long double accumulator with ndigit truncation
  accurate sum 209715.2002096176 sum 209715.2002096176 diff          0 relative diff          0 runtime 0.102060   Serial sum with long double accumulator with bit truncation
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.027614   Serial sum with double double kahan sum accumulator
  accurate sum 209715.2002097152 sum 52428.8000524288  diff -1.573e+05 relative diff      -0.75 runtime 0.007947   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 209715.2002097152 sum 26214.4000262144  diff -1.835e+05 relative diff     -0.875 runtime 0.005179   8 wide GCC vector extensions Kahan sum
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.047089   Serial sum with double double knuth sum accumulator
  accurate sum 209715.2002097152 sum 52428.8000524288  diff -1.573e+05 relative diff      -0.75 runtime 0.012922   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 209715.2002097152 sum 26214.4000262144  diff -1.835e+05 relative diff     -0.875 runtime 0.007288   8 wide GCC vector extensions Knuth sum
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.013724   Pair-wise sum


  accurate sum 209715.2002097152 sum 209715.200209613  diff -1.022e-07 relative diff -4.874e-13 runtime 0.001567   OpenMP sum
  accurate sum 209715.2001953125 sum 209715.2001953125 diff          0 relative diff          0 runtime 0.000306   OpenMP sum with bit truncation
  accurate sum 209715.2002097152 sum 209715.200209716  diff  8.149e-10 relative diff  3.886e-15 runtime 0.001244   OpenMP sum with double double kahan sum accumulator
  accurate sum 209715.2002097152 sum 209715.200209716  diff  8.149e-10 relative diff  3.886e-15 runtime 0.001011   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 8388608 log 23 ndigits 7 ndigitsld 4 nbits 27 nbitsld 13
Initializing mesh with Leblanc problem, high values first
  accurate sum 419430.4004194304 sum 419430.400462431  diff    4.3e-05 relative diff  1.025e-10 runtime 0.019064   Serial sum
  accurate sum 419430.4004194304 sum 419430.400462431  diff    4.3e-05 relative diff  1.025e-10 runtime 0.019660   Serial sum (OpenMP SIMD pragma)
  accurate sum 419430.4          sum 419430.4          diff          0 relative diff          0 runtime 0.020138   Serial sum with digit truncation
  accurate sum 419430.3984375    sum 419430.3984375    diff          0 relative diff          0 runtime 0.018143   Serial sum with bit truncation
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.201511   Serial sum with long double accumulator
  accurate sum 419430.400419     sum 419430.400419     diff          0 relative diff          0 runtime 0.201179   Serial sum with long double accumulator with ndigit truncation
  accurate sum 419430.4004192352 sum 419430.4004192352 diff          0 relative diff          0 runtime 0.205512   Serial sum with long double accumulator with bit truncation
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.056743   Serial sum with double double kahan sum accumulator
  accurate sum 419430.4004194304 sum 104857.6001048576 diff -3.146e+05 relative diff      -0.75 runtime 0.016549   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 419430.4004194304 sum 52428.8000524288  diff  -3.67e+05 relative diff     -0.875 runtime 0.011514   8 wide GCC vector extensions Kahan sum
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.099305   Serial sum with double double knuth sum accumulator
  accurate sum 419430.4004194304 sum 104857.6001048576 diff -3.146e+05 relative diff      -0.75 runtime 0.026441   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 419430.4004194304 sum 52428.8000524288  diff  -3.67e+05 relative diff     -0.875 runtime 0.014921   8 wide GCC vector extensions Knuth sum
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.033807   Pair-wise sum


  accurate sum 419430.4004194304 sum 419430.4004195532 diff  1.228e-07 relative diff  2.928e-13 runtime 0.001417   OpenMP sum
  accurate sum 419430.400390625  sum 419430.400390625  diff          0 relative diff          0 runtime 0.000597   OpenMP sum with bit truncation
  accurate sum 419430.4004194304 sum 419430.4004194307 diff   2.91e-10 relative diff  6.939e-16 runtime 0.002440   OpenMP sum with double double kahan sum accumulator
  accurate sum 419430.4004194303 sum 419430.4004194306 diff  2.328e-10 relative diff  5.551e-16 runtime 0.001942   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 16777216 log 24 ndigits 7 ndigitsld 4 nbits 27 nbitsld 14
Initializing mesh with Leblanc problem, high values first
  accurate sum 838860.8008388608 sum 838860.800853056  diff   1.42e-05 relative diff  1.692e-11 runtime 0.038696   Serial sum
  accurate sum 838860.8008388608 sum 838860.800853056  diff   1.42e-05 relative diff  1.692e-11 runtime 0.042776   Serial sum (OpenMP SIMD pragma)
  accurate sum 838860.801        sum 838860.801        diff          0 relative diff          0 runtime 0.040382   Serial sum with digit truncation
  accurate sum 838860.796875     sum 838860.796875     diff          0 relative diff          0 runtime 0.040408   Serial sum with bit truncation
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.410388   Serial sum with long double accumulator
  accurate sum 838860.800839     sum 838860.800839     diff          0 relative diff          0 runtime 0.411797   Serial sum with long double accumulator with ndigit truncation
  accurate sum 838860.8008384705 sum 838860.8008384705 diff          0 relative diff          0 runtime 0.417774   Serial sum with long double accumulator with bit truncation
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.120659   Serial sum with double double kahan sum accumulator
  accurate sum 838860.8008388608 sum 209715.2002097152 diff -6.291e+05 relative diff      -0.75 runtime 0.037830   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 838860.8008388608 sum 104857.6001048576 diff  -7.34e+05 relative diff     -0.875 runtime 0.026081   8 wide GCC vector extensions Kahan sum
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.199386   Serial sum with double double knuth sum accumulator
  accurate sum 838860.8008388608 sum 209715.2002097152 diff -6.291e+05 relative diff      -0.75 runtime 0.059272   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 838860.8008388608 sum 104857.6001048576 diff  -7.34e+05 relative diff     -0.875 runtime 0.034891   8 wide GCC vector extensions Knuth sum
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.071084   Pair-wise sum


  accurate sum 838860.8008388608 sum 838860.8008405066 diff  1.646e-06 relative diff  1.962e-12 runtime 0.004795   OpenMP sum
  accurate sum 838860.80078125   sum 838860.80078125   diff          0 relative diff          0 runtime 0.001395   OpenMP sum with bit truncation
  accurate sum 838860.8008388608 sum 838860.8008388577 diff -3.143e-09 relative diff -3.747e-15 runtime 0.005360   OpenMP sum with double double kahan sum accumulator
  accurate sum 838860.8008388607 sum 838860.8008388574 diff  -3.26e-09 relative diff -3.886e-15 runtime 0.002895   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 33554432 log 25 ndigits 8 ndigitsld 5 nbits 29 nbitsld 15
Initializing mesh with Leblanc problem, high values first
  accurate sum 1677721.601677722 sum 1677721.600413603 diff  -0.001264 relative diff -7.535e-10 runtime 0.074552   Serial sum
  accurate sum 1677721.601677722 sum 1677721.600413603 diff  -0.001264 relative diff -7.535e-10 runtime 0.075757   Serial sum (OpenMP SIMD pragma)
  accurate sum 1677721.6         sum 1677721.6         diff          0 relative diff          0 runtime 0.075554   Serial sum with digit truncation
  accurate sum 1677721.5         sum 1677721.5         diff          0 relative diff          0 runtime 0.075516   Serial sum with bit truncation
  accurate sum 1677721.601677722 sum 1677721.601677722 diff -2.777e-20 relative diff -1.655e-26 runtime 0.796808   Serial sum with long double accumulator
  accurate sum 1677721.6017      sum 1677721.6017      diff          0 relative diff          0 runtime 0.798223   Serial sum with long double accumulator with ndigit truncation
  accurate sum 1677721.601676941 sum 1677721.601676941 diff          0 relative diff          0 runtime 0.793746   Serial sum with long double accumulator with bit truncation
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.232163   Serial sum with double double kahan sum accumulator
  accurate sum 1677721.601677722 sum 419430.4004194304 diff -1.258e+06 relative diff      -0.75 runtime 0.071710   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 1677721.601677722 sum 209715.2002097152 diff -1.468e+06 relative diff     -0.875 runtime 0.048840   8 wide GCC vector extensions Kahan sum
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.392632   Serial sum with double double knuth sum accumulator
  accurate sum 1677721.601677722 sum 419430.4004194304 diff -1.258e+06 relative diff      -0.75 runtime 0.113377   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 1677721.601677722 sum 209715.2002097152 diff -1.468e+06 relative diff     -0.875 runtime 0.065393   8 wide GCC vector extensions Knuth sum
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.134705   Pair-wise sum


  accurate sum 1677721.601677722 sum 1677721.601675748 diff -1.973e-06 relative diff -1.176e-12 runtime 0.003996   OpenMP sum
  accurate sum 1677721.6015625   sum 1677721.6015625   diff          0 relative diff          0 runtime 0.002412   OpenMP sum with bit truncation
  accurate sum 1677721.601677722 sum 1677721.601677723 diff  1.397e-09 relative diff  8.327e-16 runtime 0.005758   OpenMP sum with double double kahan sum accumulator
  accurate sum 1677721.601677721 sum 1677721.601677722 diff  9.313e-10 relative diff  5.551e-16 runtime 0.004801   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 67108864 log 26 ndigits 8 ndigitsld 5 nbits 30 nbitsld 15
Initializing mesh with Leblanc problem, high values first
  accurate sum 3355443.203355443 sum 3355443.201976103 diff  -0.001379 relative diff -4.111e-10 runtime 0.151703   Serial sum
  accurate sum 3355443.203355443 sum 3355443.201976103 diff  -0.001379 relative diff -4.111e-10 runtime 0.147361   Serial sum (OpenMP SIMD pragma)
  accurate sum 3355443.2         sum 3355443.2         diff          0 relative diff          0 runtime 0.148181   Serial sum with digit truncation
  accurate sum 3355443           sum 3355443           diff          0 relative diff          0 runtime 0.147493   Serial sum with bit truncation
  accurate sum 3355443.203355443 sum 3355443.203355443 diff  6.115e-20 relative diff  1.822e-26 runtime 1.585775   Serial sum with long double accumulator
  accurate sum 3355443.2034      sum 3355443.2034      diff          0 relative diff          0 runtime 1.602026   Serial sum with long double accumulator with ndigit truncation
  accurate sum 3355443.203353882 sum 3355443.203353882 diff          0 relative diff          0 runtime 1.581467   Serial sum with long double accumulator with bit truncation
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.456361   Serial sum with double double kahan sum accumulator
  accurate sum 3355443.203355443 sum 838860.8008388608 diff -2.517e+06 relative diff      -0.75 runtime 0.139067   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 3355443.203355443 sum 419430.4004194304 diff -2.936e+06 relative diff     -0.875 runtime 0.093825   8 wide GCC vector extensions Kahan sum
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.778795   Serial sum with double double knuth sum accumulator
  accurate sum 3355443.203355443 sum 838860.8008388608 diff -2.517e+06 relative diff      -0.75 runtime 0.220063   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 3355443.203355443 sum 419430.4004194304 diff -2.936e+06 relative diff     -0.875 runtime 0.127268   8 wide GCC vector extensions Knuth sum
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.269894   Pair-wise sum


  accurate sum 3355443.203355443 sum 3355443.203329059 diff -2.638e-05 relative diff -7.863e-12 runtime 0.006558   OpenMP sum
  accurate sum 3355443.1875      sum 3355443.1875      diff          0 relative diff          0 runtime 0.004070   OpenMP sum with bit truncation
  accurate sum 3355443.203355443 sum 3355443.20335545  diff  6.519e-09 relative diff  1.943e-15 runtime 0.012801   OpenMP sum with double double kahan sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355448 diff  5.588e-09 relative diff  1.665e-15 runtime 0.010054   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 134217728 log 27 ndigits 8 ndigitsld 5 nbits 31 nbitsld 16
Initializing mesh with Leblanc problem, high values first
  accurate sum 6710886.406710886 sum 6710886.393382353 diff   -0.01333 relative diff -1.986e-09 runtime 0.288511   Serial sum
  accurate sum 6710886.406710886 sum 6710886.393382353 diff   -0.01333 relative diff -1.986e-09 runtime 0.292462   Serial sum (OpenMP SIMD pragma)
  accurate sum 6710886.4         sum 6710886.4         diff          0 relative diff          0 runtime 0.291154   Serial sum with digit truncation
  accurate sum 6710886           sum 6710886           diff          0 relative diff          0 runtime 0.291584   Serial sum with bit truncation
  accurate sum 6710886.406710886 sum 6710886.406710886 diff  3.781e-19 relative diff  5.635e-26 runtime 3.054684   Serial sum with long double accumulator
  accurate sum 6710886.4067      sum 6710886.4067      diff          0 relative diff          0 runtime 3.092115   Serial sum with long double accumulator with ndigit truncation
  accurate sum 6710886.406677246 sum 6710886.406677246 diff          0 relative diff          0 runtime 3.087010   Serial sum with long double accumulator with bit truncation
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.901998   Serial sum with double double kahan sum accumulator
  accurate sum 6710886.406710886 sum 1677721.601677722 diff -5.033e+06 relative diff      -0.75 runtime 0.270037   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 6710886.406710886 sum 838860.8008388608 diff -5.872e+06 relative diff     -0.875 runtime 0.176707   8 wide GCC vector extensions Kahan sum
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 1.568346   Serial sum with double double knuth sum accumulator
  accurate sum 6710886.406710886 sum 1677721.601677722 diff -5.033e+06 relative diff      -0.75 runtime 0.431839   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 6710886.406710886 sum 838860.8008388608 diff -5.872e+06 relative diff     -0.875 runtime 0.245833   8 wide GCC vector extensions Knuth sum
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.509753   Pair-wise sum


  accurate sum 6710886.406710886 sum 6710886.406742472 diff  3.159e-05 relative diff  4.707e-12 runtime 0.017195   OpenMP sum
  accurate sum 6710886.375       sum 6710886.375       diff          0 relative diff          0 runtime 0.008248   OpenMP sum with bit truncation
  accurate sum 6710886.406710886 sum 6710886.406710881 diff -5.588e-09 relative diff -8.327e-16 runtime 0.027045   OpenMP sum with double double kahan sum accumulator
  accurate sum 6710886.406710885 sum 6710886.406710878 diff -7.451e-09 relative diff  -1.11e-15 runtime 0.015813   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 268435456 log 28 ndigits 8 ndigitsld 5 nbits 32 nbitsld 16
Initializing mesh with Leblanc problem, high values first
  accurate sum 13421772.81342177 sum 13421772.76838235 diff   -0.04504 relative diff -3.356e-09 runtime 0.574725   Serial sum
  accurate sum 13421772.81342177 sum 13421772.76838235 diff   -0.04504 relative diff -3.356e-09 runtime 0.574582   Serial sum (OpenMP SIMD pragma)
  accurate sum 13421773          sum 13421773          diff          0 relative diff          0 runtime 0.575737   Serial sum with digit truncation
  accurate sum 13421768          sum 13421768          diff          0 relative diff          0 runtime 0.575554   Serial sum with bit truncation
  accurate sum 13421772.81342177 sum 13421772.81342177 diff  -1.29e-18 relative diff -9.615e-26 runtime 6.112387   Serial sum with long double accumulator
  accurate sum 13421772.813      sum 13421772.813      diff          0 relative diff          0 runtime 6.115750   Serial sum with long double accumulator with ndigit truncation
  accurate sum 13421772.81335449 sum 13421772.81335449 diff          0 relative diff          0 runtime 6.137824   Serial sum with long double accumulator with bit truncation
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 1.812691   Serial sum with double double kahan sum accumulator
  accurate sum 13421772.81342177 sum 3355443.203355443 diff -1.007e+07 relative diff      -0.75 runtime 0.534407   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 13421772.81342177 sum 1677721.601677722 diff -1.174e+07 relative diff     -0.875 runtime 0.350994   8 wide GCC vector extensions Kahan sum
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 3.160666   Serial sum with double double knuth sum accumulator
  accurate sum 13421772.81342177 sum 3355443.203355443 diff -1.007e+07 relative diff      -0.75 runtime 0.875170   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 13421772.81342177 sum 1677721.601677722 diff -1.174e+07 relative diff     -0.875 runtime 0.487426   8 wide GCC vector extensions Knuth sum
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 1.004981   Pair-wise sum


  accurate sum 13421772.81342177 sum 13421772.81384401 diff  0.0004222 relative diff  3.146e-11 runtime 0.017108   OpenMP sum
  accurate sum 13421772.5        sum 13421772.5        diff          0 relative diff          0 runtime 0.016405   OpenMP sum with bit truncation
  accurate sum 13421772.81342177 sum 13421772.81342176 diff -1.118e-08 relative diff -8.327e-16 runtime 0.028757   OpenMP sum with double double kahan sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342176 diff  -1.49e-08 relative diff  -1.11e-15 runtime 0.027889   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 536870912 log 29 ndigits 8 ndigitsld 5 nbits 33 nbitsld 17
Initializing mesh with Leblanc problem, high values first
  accurate sum 26843545.62684355 sum 26843545.70588235 diff    0.07904 relative diff  2.944e-09 runtime 1.159443   Serial sum
  accurate sum 26843545.62684355 sum 26843545.70588235 diff    0.07904 relative diff  2.944e-09 runtime 1.158433   Serial sum (OpenMP SIMD pragma)
  accurate sum 26843546          sum 26843546          diff          0 relative diff          0 runtime 1.154916   Serial sum with digit truncation
  accurate sum 26843520          sum 26843520          diff          0 relative diff          0 runtime 1.146868   Serial sum with bit truncation
  accurate sum 26843545.62684355 sum 26843545.62684355 diff  5.426e-18 relative diff  2.021e-25 runtime 12.215489   Serial sum with long double accumulator
  accurate sum 26843545.627      sum 26843545.627      diff          0 relative diff          0 runtime 12.249010   Serial sum with long double accumulator with ndigit truncation
  accurate sum 26843545.62646484 sum 26843545.62646484 diff          0 relative diff          0 runtime 11.725394   Serial sum with long double accumulator with bit truncation
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 3.655114   Serial sum with double double kahan sum accumulator
  accurate sum 26843545.62684355 sum 6710886.406710886 diff -2.013e+07 relative diff      -0.75 runtime 0.909257   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 26843545.62684355 sum 3355443.203355443 diff -2.349e+07 relative diff     -0.875 runtime 0.542383   8 wide GCC vector extensions Kahan sum
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 6.146773   Serial sum with double double knuth sum accumulator
  accurate sum 26843545.62684355 sum 6710886.406710886 diff -2.013e+07 relative diff      -0.75 runtime 1.596046   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 26843545.62684355 sum 3355443.203355443 diff -2.349e+07 relative diff     -0.875 runtime 0.848125   8 wide GCC vector extensions Knuth sum
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 1.434765   Pair-wise sum


  accurate sum 26843545.62684355 sum 26843545.62633808 diff -0.0005055 relative diff -1.883e-11 runtime 0.026532   OpenMP sum
  accurate sum 26843544          sum 26843544          diff          0 relative diff          0 runtime 0.023603   OpenMP sum with bit truncation
  accurate sum 26843545.62684355 sum 26843545.62684359 diff   4.47e-08 relative diff  1.665e-15 runtime 0.051761   OpenMP sum with double double kahan sum accumulator
  accurate sum 26843545.62684354 sum 26843545.62684359 diff   4.47e-08 relative diff  1.665e-15 runtime 0.054560   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 1073741824 log 30 ndigits 9 ndigitsld 6 nbits 34 nbitsld 18
Initializing mesh with Leblanc problem, high values first
  accurate sum 53687091.25368709 sum 53687091.70588235 diff     0.4522 relative diff  8.423e-09 runtime 2.087731   Serial sum
  accurate sum 53687091.25368709 sum 53687091.70588235 diff     0.4522 relative diff  8.423e-09 runtime 2.085652   Serial sum (OpenMP SIMD pragma)
  accurate sum 53687090          sum 53687090          diff          0 relative diff          0 runtime 2.084573   Serial sum with digit truncation
  accurate sum 53687040          sum 53687040          diff          0 relative diff          0 runtime 2.077413   Serial sum with bit truncation
  accurate sum 53687091.25368709 sum 53687091.25368709 diff  2.277e-17 relative diff  4.242e-25 runtime 22.365599   Serial sum with long double accumulator
  accurate sum 53687091.25       sum 53687091.25       diff          0 relative diff          0 runtime 22.372098   Serial sum with long double accumulator with ndigit truncation
  accurate sum 53687091.25195312 sum 53687091.25195312 diff          0 relative diff          0 runtime 22.400915   Serial sum with long double accumulator with bit truncation
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 6.557491   Serial sum with double double kahan sum accumulator
  accurate sum 53687091.25368709 sum 13421772.81342177 diff -4.027e+07 relative diff      -0.75 runtime 1.835872   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 53687091.25368709 sum 6710886.406710886 diff -4.698e+07 relative diff     -0.875 runtime 1.099761   8 wide GCC vector extensions Kahan sum
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 12.311831   Serial sum with double double knuth sum accumulator
  accurate sum 53687091.25368709 sum 13421772.81342177 diff -4.027e+07 relative diff      -0.75 runtime 3.220029   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 53687091.25368709 sum 6710886.406710886 diff -4.698e+07 relative diff     -0.875 runtime 1.744627   8 wide GCC vector extensions Knuth sum
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 2.885877   Pair-wise sum


  accurate sum 53687091.25368709 sum 53687091.24693158 diff  -0.006756 relative diff -1.258e-10 runtime 0.044805   OpenMP sum
  accurate sum 53687088          sum 53687088          diff          0 relative diff          0 runtime 0.045739   OpenMP sum with bit truncation
  accurate sum 53687091.25368709 sum 53687091.25368714 diff  5.215e-08 relative diff  9.714e-16 runtime 0.086003   OpenMP sum with double double kahan sum accumulator
  accurate sum 53687091.25368708 sum 53687091.25368714 diff   5.96e-08 relative diff   1.11e-15 runtime 0.092960   OpenMP sum with double double kahan sum accumulator with bit truncation

Scanning dependencies of target distclean
Built target distclean
/usr/bin/modulecmd bash $*
MANPATH=/usr/share/man:/usr/local/share/man ;export MANPATH;PATH=/home/brobey/bin:/home/brobey/parsplice-install/bin:/home/brobey/bin:/home/brobey/parsplice-install/bin:/home/brobey/spack/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/opt/ibutils/bin ;export PATH;unset CC;unset CXX;unset F77;unset F90;unset FC;unset LD_LIBRARY_PATH;unset LOADEDMODULES;unset _LMFILES_;
/usr/bin/modulecmd bash $*
/usr/bin/modulecmd bash $*
CC=pgcc ;export CC;CPP=pgcc\ -E ;export CPP;CXX=pgc++ ;export CXX;F77=pgf77 ;export F77;FC=pgfortran ;export FC;LD_LIBRARY_PATH=/projects/opt/ppc64le/pgi/linuxpower/19.3/lib ;export LD_LIBRARY_PATH;LM_LICENSE_FILE=/projects/opt/ppc64le/pgi/pgi_ppc641e_license-532385.dat ;export LM_LICENSE_FILE;LOADEDMODULES=cmake/3.12.4:pgi/19.3 ;export LOADEDMODULES;MANPATH=/projects/opt/ppc64le/pgi/linuxpower/19.3/man:/usr/share/man:/usr/local/share/man ;export MANPATH;PATH=/projects/opt/ppc64le/pgi/linuxpower/19.3/bin:/projects/opt/ppc64le/cmake/3.12.4/bin:/home/brobey/bin:/home/brobey/parsplice-install/bin:/home/brobey/bin:/home/brobey/parsplice-install/bin:/home/brobey/spack/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/opt/ibutils/bin ;export PATH;PGROUPD_LICENSE_FILE=/projects/opt/ppc64le/pgi/pgi_ppc641e_license-532385.dat ;export PGROUPD_LICENSE_FILE;_LMFILES_=/projects/darwin/modulefiles/ppc64le/cmake/3.12.4:/projects/darwin/modulefiles/ppc64le/pgi/19.3 ;export _LMFILES_;f90=pgf90 ;export f90;
-- The C compiler identification is PGI 19.3.0
-- The CXX compiler identification is PGI 19.3.0
-- Check for working C compiler: /projects/opt/ppc64le/pgi/linuxpower/19.3/bin/pgcc
-- Check for working C compiler: /projects/opt/ppc64le/pgi/linuxpower/19.3/bin/pgcc -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /projects/opt/ppc64le/pgi/linuxpower/19.3/bin/pgc++
-- Check for working CXX compiler: /projects/opt/ppc64le/pgi/linuxpower/19.3/bin/pgc++ -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Found OpenMP_C: -mp (found version "4.0") 
-- Found OpenMP_CXX: -mp (found version "4.0") 
-- Found OpenMP: TRUE (found version "4.0")  
-- Trying Fog Vector Class -- fails
-- Trying X86_64 intrinsics -- fails
-- Trying GCC Vector Extensions -- works
-- Trying Quad math library -- fails
-- Configuring done
-- Generating done
-- Build files have been written to: /home/brobey/GlobalSums
Scanning dependencies of target globalsums
[  5%] Building C object CMakeFiles/globalsums.dir/globalsums.c.o
PGC-W-0114-More than one type specified (/home/brobey/GlobalSums/globalsums.c: 36)
PGC-W-0143-Useless typedef declaration (no declarators present) (/home/brobey/GlobalSums/globalsums.c: 36)
main:
    104, Loop not vectorized/parallelized: contains call
    137, Loop not vectorized: data dependency
    154, cpu_timer_start inlined, size=2 (inline) file /home/brobey/GlobalSums/globalsums.c (601)
    158, cpu_timer_stop inlined, size=7 (inline) file /home/brobey/GlobalSums/globalsums.c (605)
    166, cpu_timer_start inlined, size=2 (inline) file /home/brobey/GlobalSums/globalsums.c (601)
    170, cpu_timer_stop inlined, size=7 (inline) file /home/brobey/GlobalSums/globalsums.c (605)
    177, cpu_timer_start inlined, size=2 (inline) file /home/brobey/GlobalSums/globalsums.c (601)
    181, cpu_timer_stop inlined, size=7 (inline) file /home/brobey/GlobalSums/globalsums.c (605)
    182, digitround inlined, size=10 (inline) file /home/brobey/GlobalSums/globalsums.c (616)
    189, cpu_timer_start inlined, size=2 (inline) file /home/brobey/GlobalSums/globalsums.c (601)
    193, cpu_timer_stop inlined, size=7 (inline) file /home/brobey/GlobalSums/globalsums.c (605)
    195, bittruncate inlined, size=28 (inline) file /home/brobey/GlobalSums/globalsums.c (629)
    202, cpu_timer_start inlined, size=2 (inline) file /home/brobey/GlobalSums/globalsums.c (601)
    206, cpu_timer_stop inlined, size=7 (inline) file /home/brobey/GlobalSums/globalsums.c (605)
    213, cpu_timer_start inlined, size=2 (inline) file /home/brobey/GlobalSums/globalsums.c (601)
    217, digitround inlined, size=10 (inline) file /home/brobey/GlobalSums/globalsums.c (616)
    219, cpu_timer_stop inlined, size=7 (inline) file /home/brobey/GlobalSums/globalsums.c (605)
    226, cpu_timer_start inlined, size=2 (inline) file /home/brobey/GlobalSums/globalsums.c (601)
    230, bittruncate inlined, size=28 (inline) file /home/brobey/GlobalSums/globalsums.c (629)
    232, cpu_timer_stop inlined, size=7 (inline) file /home/brobey/GlobalSums/globalsums.c (605)
    239, cpu_timer_start inlined, size=2 (inline) file /home/brobey/GlobalSums/globalsums.c (601)
    243, cpu_timer_stop inlined, size=7 (inline) file /home/brobey/GlobalSums/globalsums.c (605)
    264, cpu_timer_start inlined, size=2 (inline) file /home/brobey/GlobalSums/globalsums.c (601)
    268, cpu_timer_stop inlined, size=7 (inline) file /home/brobey/GlobalSums/globalsums.c (605)
    307, cpu_timer_start inlined, size=2 (inline) file /home/brobey/GlobalSums/globalsums.c (601)
    311, cpu_timer_stop inlined, size=7 (inline) file /home/brobey/GlobalSums/globalsums.c (605)
    334, cpu_timer_start inlined, size=2 (inline) file /home/brobey/GlobalSums/globalsums.c (601)
    338, cpu_timer_stop inlined, size=7 (inline) file /home/brobey/GlobalSums/globalsums.c (605)
    359, cpu_timer_start inlined, size=2 (inline) file /home/brobey/GlobalSums/globalsums.c (601)
    363, cpu_timer_stop inlined, size=7 (inline) file /home/brobey/GlobalSums/globalsums.c (605)
    401, cpu_timer_start inlined, size=2 (inline) file /home/brobey/GlobalSums/globalsums.c (601)
    405, cpu_timer_stop inlined, size=7 (inline) file /home/brobey/GlobalSums/globalsums.c (605)
    428, cpu_timer_start inlined, size=2 (inline) file /home/brobey/GlobalSums/globalsums.c (601)
    432, cpu_timer_stop inlined, size=7 (inline) file /home/brobey/GlobalSums/globalsums.c (605)
    541, Loop not vectorized: data dependency
    547, cpu_timer_start inlined, size=2 (inline) file /home/brobey/GlobalSums/globalsums.c (601)
    551, cpu_timer_stop inlined, size=7 (inline) file /home/brobey/GlobalSums/globalsums.c (605)
    558, cpu_timer_start inlined, size=2 (inline) file /home/brobey/GlobalSums/globalsums.c (601)
    562, bittruncate inlined, size=28 (inline) file /home/brobey/GlobalSums/globalsums.c (629)
    564, cpu_timer_stop inlined, size=7 (inline) file /home/brobey/GlobalSums/globalsums.c (605)
    572, cpu_timer_start inlined, size=2 (inline) file /home/brobey/GlobalSums/globalsums.c (601)
    576, cpu_timer_stop inlined, size=7 (inline) file /home/brobey/GlobalSums/globalsums.c (605)
    583, cpu_timer_start inlined, size=2 (inline) file /home/brobey/GlobalSums/globalsums.c (601)
    587, bittruncate inlined, size=28 (inline) file /home/brobey/GlobalSums/globalsums.c (629)
    589, cpu_timer_stop inlined, size=7 (inline) file /home/brobey/GlobalSums/globalsums.c (605)
PGC/power Linux 19.3-0: compilation completed with warnings
[ 10%] Building C object CMakeFiles/globalsums.dir/do_kahan_sum.c.o
[ 15%] Building C object CMakeFiles/globalsums.dir/serial_sum_novec.c.o
[ 20%] Building C object CMakeFiles/globalsums.dir/do_kahan_sum_omp.c.o
do_kahan_sum_omp:
     29, Loop not vectorized/parallelized: contains a parallel region
[ 25%] Building C object CMakeFiles/globalsums.dir/do_kahan_sum_omp_wbittrunc.c.o
do_kahan_sum_omp_wbittrunc:
     46, Loop not vectorized/parallelized: contains a parallel region
[ 30%] Building C object CMakeFiles/globalsums.dir/do_knuth_sum.c.o
[ 35%] Building C object CMakeFiles/globalsums.dir/do_ldsum.c.o
do_ldsum:
      5, Loop not vectorized: may not be beneficial
[ 40%] Building C object CMakeFiles/globalsums.dir/do_ldsum_wbittrunc.c.o
do_ldsum_wbittrunc:
      8, Loop not vectorized: may not be beneficial
[ 45%] Building C object CMakeFiles/globalsums.dir/do_ldsum_wdigittrunc.c.o
do_ldsum_wdigittrunc:
      7, Loop not vectorized: may not be beneficial
[ 50%] Building C object CMakeFiles/globalsums.dir/do_pair_sum.c.o
do_pair_sum:
     14, Loop not vectorized/parallelized: contains call
     16, Loop not vectorized: data dependency
[ 55%] Building C object CMakeFiles/globalsums.dir/do_sum.c.o
do_sum:
      6, Generated vector simd code for the loop containing reductions
     10, Loop not vectorized/parallelized: contains a parallel region
[ 60%] Building C object CMakeFiles/globalsums.dir/do_sum_omp.c.o
do_sum_omp:
      6, Generated vector simd code for the loop containing reductions
      9, Loop not vectorized/parallelized: contains a parallel region
[ 65%] Building C object CMakeFiles/globalsums.dir/do_sum_omp_wbittrunc.c.o
do_sum_omp_wbittrunc:
      9, Generated vector simd code for the loop containing reductions
     13, Loop not vectorized/parallelized: contains a parallel region
[ 70%] Building C object CMakeFiles/globalsums.dir/do_sum_wbittrunc.c.o
do_sum_wbittrunc:
      8, Generated vector simd code for the loop containing reductions
[ 75%] Building C object CMakeFiles/globalsums.dir/do_sum_wdigittrunc.c.o
do_sum_wdigittrunc:
      7, Generated vector simd code for the loop containing reductions
[ 80%] Building C object CMakeFiles/globalsums.dir/kahan_gcc_vector.c.o
[ 85%] Building C object CMakeFiles/globalsums.dir/kahan_gcc_vector8.c.o
[ 90%] Building C object CMakeFiles/globalsums.dir/knuth_gcc_vector.c.o
[ 95%] Building C object CMakeFiles/globalsums.dir/knuth_gcc_vector8.c.o
[100%] Linking C executable globalsums
[100%] Built target globalsums
--- max num openmp threads: 160
--- num openmp threads in parallel region: 160
SETTINGS INFO -- ncells 16 log 4 ndigits 3 ndigitsld 0 nbits 8 nbitsld 2
Initializing mesh with Leblanc problem, high values first
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Serial sum
  accurate sum 0.8000000008      sum 0.8000000008000001 diff   1.11e-16 relative diff  1.388e-16 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000008   Serial sum with digit truncation
  accurate sum 0.8000000007999972 sum 0.8000000007999972 diff          0 relative diff          0 runtime 0.000001   Serial sum with bit truncation
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000001   Serial sum with long double accumulator
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000001   Serial sum with long double accumulator with ndigit truncation
  accurate sum 0.8000000007999999 sum 0.8000000007999999 diff          0 relative diff          0 runtime 0.000001   Serial sum with long double accumulator with bit truncation
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double kahan sum accumulator
  accurate sum 0.8000000008      sum 0.2000000002      diff       -0.6 relative diff      -0.75 runtime 0.000000   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 0.8000000008      sum 0.1000000001      diff       -0.7 relative diff     -0.875 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double knuth sum accumulator
  accurate sum 0.8000000008      sum 0.2000000002      diff       -0.6 relative diff      -0.75 runtime 0.000000   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 0.8000000008      sum 0.1000000001      diff       -0.7 relative diff     -0.875 runtime 0.000000   8 wide GCC vector extensions Knuth sum
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.000003   Pair-wise sum


  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.030006   OpenMP sum
  accurate sum 0.8000000007999972 sum 0.8000000007999972 diff          0 relative diff          0 runtime 0.027150   OpenMP sum with bit truncation
  accurate sum 0.8000000008      sum 0.8000000008      diff          0 relative diff          0 runtime 0.021425   OpenMP sum with double double kahan sum accumulator
  accurate sum 0.8000000007999999 sum 0.8000000007999999 diff          0 relative diff          0 runtime 0.000536   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 32 log 5 ndigits 4 ndigitsld 1 nbits 9 nbitsld 3
Initializing mesh with Leblanc problem, high values first
  accurate sum 1.6000000016      sum 1.6000000016      diff  4.441e-16 relative diff  2.776e-16 runtime 0.000000   Serial sum
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000001   Serial sum with digit truncation
  accurate sum 1.600000001599938 sum 1.600000001599938 diff          0 relative diff          0 runtime 0.000000   Serial sum with bit truncation
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000001   Serial sum with long double accumulator
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000001   Serial sum with long double accumulator with ndigit truncation
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000001   Serial sum with long double accumulator with bit truncation
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double kahan sum accumulator
  accurate sum 1.6000000016      sum 0.4000000004      diff       -1.2 relative diff      -0.75 runtime 0.000000   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 1.6000000016      sum 0.2000000002      diff       -1.4 relative diff     -0.875 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double knuth sum accumulator
  accurate sum 1.6000000016      sum 0.4000000004      diff       -1.2 relative diff      -0.75 runtime 0.000000   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 1.6000000016      sum 0.2000000002      diff       -1.4 relative diff     -0.875 runtime 0.000000   8 wide GCC vector extensions Knuth sum
  accurate sum 1.6000000016      sum 1.6000000016      diff          0 relative diff          0 runtime 0.000001   Pair-wise sum


  accurate sum 1.6000000016      sum 1.6000000016      diff  4.441e-16 relative diff  2.776e-16 runtime 0.000195   OpenMP sum
  accurate sum 1.600000001599994 sum 1.600000001599994 diff          0 relative diff          0 runtime 0.000225   OpenMP sum with bit truncation
  accurate sum 1.6000000016      sum 1.600000001600001 diff  6.661e-16 relative diff  4.163e-16 runtime 0.000620   OpenMP sum with double double kahan sum accumulator
  accurate sum 1.6000000016      sum 1.600000001600001 diff  8.882e-16 relative diff  5.551e-16 runtime 0.000505   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 64 log 6 ndigits 4 ndigitsld 1 nbits 9 nbitsld 3
Initializing mesh with Leblanc problem, high values first
  accurate sum 3.2000000032      sum 3.200000003200002 diff  1.776e-15 relative diff  5.551e-16 runtime 0.000000   Serial sum
  accurate sum 3.2000000032      sum 3.200000003200001 diff  8.882e-16 relative diff  2.776e-16 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000001   Serial sum with digit truncation
  accurate sum 3.200000003199875 sum 3.200000003199875 diff          0 relative diff          0 runtime 0.000000   Serial sum with bit truncation
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000001   Serial sum with long double accumulator
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000002   Serial sum with long double accumulator with ndigit truncation
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000002   Serial sum with long double accumulator with bit truncation
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000000   Serial sum with double double kahan sum accumulator
  accurate sum 3.2000000032      sum 0.8000000008      diff       -2.4 relative diff      -0.75 runtime 0.000000   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 3.2000000032      sum 0.4000000004      diff       -2.8 relative diff     -0.875 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000001   Serial sum with double double knuth sum accumulator
  accurate sum 3.2000000032      sum 0.8000000008      diff       -2.4 relative diff      -0.75 runtime 0.000000   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 3.2000000032      sum 0.4000000004      diff       -2.8 relative diff     -0.875 runtime 0.000000   8 wide GCC vector extensions Knuth sum
  accurate sum 3.2000000032      sum 3.2000000032      diff          0 relative diff          0 runtime 0.000002   Pair-wise sum


  accurate sum 3.2000000032      sum 3.200000003200002 diff  1.776e-15 relative diff  5.551e-16 runtime 0.000212   OpenMP sum
  accurate sum 3.200000003199989 sum 3.200000003199989 diff          0 relative diff          0 runtime 0.000158   OpenMP sum with bit truncation
  accurate sum 3.2000000032      sum 3.200000003200002 diff  1.776e-15 relative diff  5.551e-16 runtime 0.000644   OpenMP sum with double double kahan sum accumulator
  accurate sum 3.2000000032      sum 3.200000003200001 diff  1.776e-15 relative diff  5.551e-16 runtime 0.000568   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 128 log 7 ndigits 4 ndigitsld 1 nbits 11 nbitsld 4
Initializing mesh with Leblanc problem, high values first
  accurate sum 6.4000000064      sum 6.400000006399994 diff -6.217e-15 relative diff -9.714e-16 runtime 0.000000   Serial sum
  accurate sum 6.4000000064      sum 6.400000006400004 diff  3.553e-15 relative diff  5.551e-16 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000001   Serial sum with digit truncation
  accurate sum 6.400000006398841 sum 6.400000006398841 diff          0 relative diff          0 runtime 0.000000   Serial sum with bit truncation
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000002   Serial sum with long double accumulator
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000003   Serial sum with long double accumulator with ndigit truncation
  accurate sum 6.400000006399992 sum 6.400000006399992 diff          0 relative diff          0 runtime 0.000003   Serial sum with long double accumulator with bit truncation
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000001   Serial sum with double double kahan sum accumulator
  accurate sum 6.4000000064      sum 1.6000000016      diff       -4.8 relative diff      -0.75 runtime 0.000000   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 6.4000000064      sum 0.8000000008      diff       -5.6 relative diff     -0.875 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000001   Serial sum with double double knuth sum accumulator
  accurate sum 6.4000000064      sum 1.6000000016      diff       -4.8 relative diff      -0.75 runtime 0.000000   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 6.4000000064      sum 0.8000000008      diff       -5.6 relative diff     -0.875 runtime 0.000000   8 wide GCC vector extensions Knuth sum
  accurate sum 6.4000000064      sum 6.4000000064      diff          0 relative diff          0 runtime 0.000002   Pair-wise sum


  accurate sum 6.4000000064      sum 6.400000006399994 diff -6.217e-15 relative diff -9.714e-16 runtime 0.000229   OpenMP sum
  accurate sum 6.400000006399978 sum 6.400000006399978 diff          0 relative diff          0 runtime 0.000241   OpenMP sum with bit truncation
  accurate sum 6.4000000064      sum 6.400000006399994 diff -6.217e-15 relative diff -9.714e-16 runtime 0.000572   OpenMP sum with double double kahan sum accumulator
  accurate sum 6.400000006399999 sum 6.400000006399992 diff -7.105e-15 relative diff  -1.11e-15 runtime 0.000652   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 256 log 8 ndigits 4 ndigitsld 1 nbits 12 nbitsld 4
Initializing mesh with Leblanc problem, high values first
  accurate sum 12.8000000128     sum 12.80000001279997 diff -2.842e-14 relative diff  -2.22e-15 runtime 0.000001   Serial sum
  accurate sum 12.8000000128     sum 12.80000001279999 diff -1.243e-14 relative diff -9.714e-16 runtime 0.000000   Serial sum (OpenMP SIMD pragma)
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000001   Serial sum with digit truncation
  accurate sum 12.80000001279404 sum 12.80000001279404 diff          0 relative diff          0 runtime 0.000000   Serial sum with bit truncation
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000005   Serial sum with long double accumulator
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000006   Serial sum with long double accumulator with ndigit truncation
  accurate sum 12.80000001279998 sum 12.80000001279998 diff          0 relative diff          0 runtime 0.000005   Serial sum with long double accumulator with bit truncation
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000001   Serial sum with double double kahan sum accumulator
  accurate sum 12.8000000128     sum 3.2000000032      diff       -9.6 relative diff      -0.75 runtime 0.000000   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 12.8000000128     sum 1.6000000016      diff      -11.2 relative diff     -0.875 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000002   Serial sum with double double knuth sum accumulator
  accurate sum 12.8000000128     sum 3.2000000032      diff       -9.6 relative diff      -0.75 runtime 0.000001   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 12.8000000128     sum 1.6000000016      diff      -11.2 relative diff     -0.875 runtime 0.000001   8 wide GCC vector extensions Knuth sum
  accurate sum 12.8000000128     sum 12.8000000128     diff          0 relative diff          0 runtime 0.000002   Pair-wise sum


  accurate sum 12.8000000128     sum 12.80000001279999 diff -1.243e-14 relative diff -9.714e-16 runtime 0.000290   OpenMP sum
  accurate sum 12.8000000127995  sum 12.8000000127995  diff          0 relative diff          0 runtime 0.000174   OpenMP sum with bit truncation
  accurate sum 12.8000000128     sum 12.80000001279999 diff -1.243e-14 relative diff -9.714e-16 runtime 0.000682   OpenMP sum with double double kahan sum accumulator
  accurate sum 12.8000000128     sum 12.80000001279998 diff -1.421e-14 relative diff  -1.11e-15 runtime 0.000662   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 512 log 9 ndigits 4 ndigitsld 1 nbits 13 nbitsld 5
Initializing mesh with Leblanc problem, high values first
  accurate sum 25.6000000256     sum 25.60000002559964 diff -3.588e-13 relative diff -1.402e-14 runtime 0.000001   Serial sum
  accurate sum 25.6000000256     sum 25.60000002559994 diff -5.684e-14 relative diff  -2.22e-15 runtime 0.000001   Serial sum (OpenMP SIMD pragma)
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000001   Serial sum with digit truncation
  accurate sum 25.60000002558809 sum 25.60000002558809 diff          0 relative diff          0 runtime 0.000001   Serial sum with bit truncation
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000009   Serial sum with long double accumulator
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000010   Serial sum with long double accumulator with ndigit truncation
  accurate sum 25.60000002559991 sum 25.60000002559991 diff          0 relative diff          0 runtime 0.000009   Serial sum with long double accumulator with bit truncation
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000003   Serial sum with double double kahan sum accumulator
  accurate sum 25.6000000256     sum 6.4000000064      diff      -19.2 relative diff      -0.75 runtime 0.000001   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 25.6000000256     sum 3.2000000032      diff      -22.4 relative diff     -0.875 runtime 0.000000   8 wide GCC vector extensions Kahan sum
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000005   Serial sum with double double knuth sum accumulator
  accurate sum 25.6000000256     sum 6.4000000064      diff      -19.2 relative diff      -0.75 runtime 0.000001   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 25.6000000256     sum 3.2000000032      diff      -22.4 relative diff     -0.875 runtime 0.000001   8 wide GCC vector extensions Knuth sum
  accurate sum 25.6000000256     sum 25.6000000256     diff          0 relative diff          0 runtime 0.000002   Pair-wise sum


  accurate sum 25.6000000256     sum 25.60000002559994 diff  -6.04e-14 relative diff -2.359e-15 runtime 0.000166   OpenMP sum
  accurate sum 25.600000025599   sum 25.600000025599   diff          0 relative diff          0 runtime 0.000324   OpenMP sum with bit truncation
  accurate sum 25.6000000256     sum 25.60000002559991 diff -8.527e-14 relative diff -3.331e-15 runtime 0.000611   OpenMP sum with double double kahan sum accumulator
  accurate sum 25.6000000256     sum 25.6000000255999  diff -9.948e-14 relative diff -3.886e-15 runtime 0.000548   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 1024 log 10 ndigits 5 ndigitsld 2 nbits 14 nbitsld 6
Initializing mesh with Leblanc problem, high values first
  accurate sum 51.2000000512     sum 51.20000005120137 diff  1.371e-12 relative diff  2.678e-14 runtime 0.000002   Serial sum
  accurate sum 51.2000000512     sum 51.20000005119928 diff -7.176e-13 relative diff -1.402e-14 runtime 0.000001   Serial sum (OpenMP SIMD pragma)
  accurate sum 51.200000051      sum 51.200000051      diff          0 relative diff          0 runtime 0.000002   Serial sum with digit truncation
  accurate sum 51.20000005117618 sum 51.20000005117618 diff          0 relative diff          0 runtime 0.000001   Serial sum with bit truncation
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000017   Serial sum with long double accumulator
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000018   Serial sum with long double accumulator with ndigit truncation
  accurate sum 51.20000005119982 sum 51.20000005119982 diff          0 relative diff          0 runtime 0.000018   Serial sum with long double accumulator with bit truncation
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000005   Serial sum with double double kahan sum accumulator
  accurate sum 51.2000000512     sum 12.8000000128     diff      -38.4 relative diff      -0.75 runtime 0.000002   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 51.2000000512     sum 6.4000000064      diff      -44.8 relative diff     -0.875 runtime 0.000001   8 wide GCC vector extensions Kahan sum
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000010   Serial sum with double double knuth sum accumulator
  accurate sum 51.2000000512     sum 12.8000000128     diff      -38.4 relative diff      -0.75 runtime 0.000002   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 51.2000000512     sum 6.4000000064      diff      -44.8 relative diff     -0.875 runtime 0.000001   8 wide GCC vector extensions Knuth sum
  accurate sum 51.2000000512     sum 51.2000000512     diff          0 relative diff          0 runtime 0.000003   Pair-wise sum


  accurate sum 51.2000000512     sum 51.20000005119991 diff -8.527e-14 relative diff -1.665e-15 runtime 0.000185   OpenMP sum
  accurate sum 51.20000005119073 sum 51.20000005119073 diff          0 relative diff          0 runtime 0.000262   OpenMP sum with bit truncation
  accurate sum 51.2000000512     sum 51.20000005119977 diff -2.274e-13 relative diff -4.441e-15 runtime 0.000585   OpenMP sum with double double kahan sum accumulator
  accurate sum 51.20000005119999 sum 51.20000005119985 diff -1.421e-13 relative diff -2.776e-15 runtime 0.000699   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 2048 log 11 ndigits 5 ndigitsld 2 nbits 15 nbitsld 6
Initializing mesh with Leblanc problem, high values first
  accurate sum 102.4000001024    sum 102.4000001024003 diff  2.842e-13 relative diff  2.776e-15 runtime 0.000003   Serial sum
  accurate sum 102.4000001024    sum 102.4000001024027 diff  2.743e-12 relative diff  2.678e-14 runtime 0.000002   Serial sum (OpenMP SIMD pragma)
  accurate sum 102.4000001       sum 102.4000001       diff          0 relative diff          0 runtime 0.000002   Serial sum with digit truncation
  accurate sum 102.4000001023524 sum 102.4000001023524 diff          0 relative diff          0 runtime 0.000002   Serial sum with bit truncation
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000035   Serial sum with long double accumulator
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000036   Serial sum with long double accumulator with ndigit truncation
  accurate sum 102.4000001023996 sum 102.4000001023996 diff          0 relative diff          0 runtime 0.000035   Serial sum with long double accumulator with bit truncation
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000010   Serial sum with double double kahan sum accumulator
  accurate sum 102.4000001024    sum 25.6000000256     diff      -76.8 relative diff      -0.75 runtime 0.000003   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 102.4000001024    sum 12.8000000128     diff      -89.6 relative diff     -0.875 runtime 0.000001   8 wide GCC vector extensions Kahan sum
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000019   Serial sum with double double knuth sum accumulator
  accurate sum 102.4000001024    sum 25.6000000256     diff      -76.8 relative diff      -0.75 runtime 0.000005   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 102.4000001024    sum 12.8000000128     diff      -89.6 relative diff     -0.875 runtime 0.000003   8 wide GCC vector extensions Knuth sum
  accurate sum 102.4000001024    sum 102.4000001024    diff          0 relative diff          0 runtime 0.000005   Pair-wise sum


  accurate sum 102.4000001024    sum 102.4000001023996 diff -4.263e-13 relative diff -4.163e-15 runtime 0.000281   OpenMP sum
  accurate sum 102.4000001023524 sum 102.4000001023524 diff          0 relative diff          0 runtime 0.000323   OpenMP sum with bit truncation
  accurate sum 102.4000001024    sum 102.4000001023997 diff -3.126e-13 relative diff -3.053e-15 runtime 0.000605   OpenMP sum with double double kahan sum accumulator
  accurate sum 102.4000001024    sum 102.4000001023996 diff -3.979e-13 relative diff -3.886e-15 runtime 0.000565   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 4096 log 12 ndigits 5 ndigitsld 2 nbits 15 nbitsld 7
Initializing mesh with Leblanc problem, high values first
  accurate sum 204.8000002048    sum 204.8000002047672 diff  -3.28e-11 relative diff -1.601e-13 runtime 0.000007   Serial sum
  accurate sum 204.8000002048    sum 204.8000002048006 diff  5.684e-13 relative diff  2.776e-15 runtime 0.000003   Serial sum (OpenMP SIMD pragma)
  accurate sum 204.8000002       sum 204.8000002       diff          0 relative diff          0 runtime 0.000004   Serial sum with digit truncation
  accurate sum 204.8000002047047 sum 204.8000002047047 diff          0 relative diff          0 runtime 0.000003   Serial sum with bit truncation
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000076   Serial sum with long double accumulator
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000076   Serial sum with long double accumulator with ndigit truncation
  accurate sum 204.8000002047993 sum 204.8000002047993 diff          0 relative diff          0 runtime 0.000076   Serial sum with long double accumulator with bit truncation
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000020   Serial sum with double double kahan sum accumulator
  accurate sum 204.8000002048    sum 51.2000000512     diff     -153.6 relative diff      -0.75 runtime 0.000005   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 204.8000002048    sum 25.6000000256     diff     -179.2 relative diff     -0.875 runtime 0.000003   8 wide GCC vector extensions Kahan sum
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000039   Serial sum with double double knuth sum accumulator
  accurate sum 204.8000002048    sum 51.2000000512     diff     -153.6 relative diff      -0.75 runtime 0.000010   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 204.8000002048    sum 25.6000000256     diff     -179.2 relative diff     -0.875 runtime 0.000005   8 wide GCC vector extensions Knuth sum
  accurate sum 204.8000002048    sum 204.8000002048    diff          0 relative diff          0 runtime 0.000009   Pair-wise sum


  accurate sum 204.8000002048    sum 204.8000002047998 diff -1.705e-13 relative diff -8.327e-16 runtime 0.000298   OpenMP sum
  accurate sum 204.8000002047047 sum 204.8000002047047 diff          0 relative diff          0 runtime 0.000160   OpenMP sum with bit truncation
  accurate sum 204.8000002048    sum 204.8000002047998 diff -1.705e-13 relative diff -8.327e-16 runtime 0.000612   OpenMP sum with double double kahan sum accumulator
  accurate sum 204.8000002048    sum 204.8000002047997 diff -2.274e-13 relative diff  -1.11e-15 runtime 0.000619   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 8192 log 13 ndigits 5 ndigitsld 2 nbits 17 nbitsld 7
Initializing mesh with Leblanc problem, high values first
  accurate sum 409.6000004096    sum 409.6000004095737 diff -2.626e-11 relative diff -6.412e-14 runtime 0.000013   Serial sum
  accurate sum 409.6000004096    sum 409.6000004095344 diff  -6.56e-11 relative diff -1.601e-13 runtime 0.000007   Serial sum (OpenMP SIMD pragma)
  accurate sum 409.60000041      sum 409.60000041      diff          0 relative diff          0 runtime 0.000007   Serial sum with digit truncation
  accurate sum 409.6000004038215 sum 409.6000004038215 diff          0 relative diff          0 runtime 0.000007   Serial sum with bit truncation
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000139   Serial sum with long double accumulator
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000140   Serial sum with long double accumulator with ndigit truncation
  accurate sum 409.6000004095986 sum 409.6000004095986 diff          0 relative diff          0 runtime 0.000139   Serial sum with long double accumulator with bit truncation
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000039   Serial sum with double double kahan sum accumulator
  accurate sum 409.6000004096    sum 102.4000001024    diff     -307.2 relative diff      -0.75 runtime 0.000010   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 409.6000004096    sum 51.2000000512     diff     -358.4 relative diff     -0.875 runtime 0.000005   8 wide GCC vector extensions Kahan sum
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000077   Serial sum with double double knuth sum accumulator
  accurate sum 409.6000004096    sum 102.4000001024    diff     -307.2 relative diff      -0.75 runtime 0.000019   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 409.6000004096    sum 51.2000000512     diff     -358.4 relative diff     -0.875 runtime 0.000010   8 wide GCC vector extensions Knuth sum
  accurate sum 409.6000004096    sum 409.6000004096    diff          0 relative diff          0 runtime 0.000016   Pair-wise sum


  accurate sum 409.6000004096    sum 409.6000004095997 diff -2.842e-13 relative diff -6.939e-16 runtime 0.000190   OpenMP sum
  accurate sum 409.6000004094094 sum 409.6000004094094 diff          0 relative diff          0 runtime 0.000234   OpenMP sum with bit truncation
  accurate sum 409.6000004096    sum 409.6000004095995 diff -4.547e-13 relative diff  -1.11e-15 runtime 0.000589   OpenMP sum with double double kahan sum accumulator
  accurate sum 409.6000004095999 sum 409.6000004095995 diff -4.547e-13 relative diff  -1.11e-15 runtime 0.000563   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 16384 log 14 ndigits 5 ndigitsld 2 nbits 18 nbitsld 8
Initializing mesh with Leblanc problem, high values first
  accurate sum 819.2000008192    sum 819.2000008196816 diff  4.816e-10 relative diff  5.879e-13 runtime 0.000027   Serial sum
  accurate sum 819.2000008192    sum 819.2000008191475 diff -5.252e-11 relative diff -6.412e-14 runtime 0.000014   Serial sum (OpenMP SIMD pragma)
  accurate sum 819.20000082      sum 819.20000082      diff          0 relative diff          0 runtime 0.000015   Serial sum with digit truncation
  accurate sum 819.2000007927418 sum 819.2000007927418 diff          0 relative diff          0 runtime 0.000015   Serial sum with bit truncation
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000296   Serial sum with long double accumulator
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000295   Serial sum with long double accumulator with ndigit truncation
  accurate sum 819.2000008191972 sum 819.2000008191972 diff          0 relative diff          0 runtime 0.000296   Serial sum with long double accumulator with bit truncation
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000079   Serial sum with double double kahan sum accumulator
  accurate sum 819.2000008192    sum 204.8000002048    diff     -614.4 relative diff      -0.75 runtime 0.000021   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 819.2000008192    sum 102.4000001024    diff     -716.8 relative diff     -0.875 runtime 0.000010   8 wide GCC vector extensions Kahan sum
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000153   Serial sum with double double knuth sum accumulator
  accurate sum 819.2000008192    sum 204.8000002048    diff     -614.4 relative diff      -0.75 runtime 0.000039   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 819.2000008192    sum 102.4000001024    diff     -716.8 relative diff     -0.875 runtime 0.000020   8 wide GCC vector extensions Knuth sum
  accurate sum 819.2000008192    sum 819.2000008192    diff          0 relative diff          0 runtime 0.000043   Pair-wise sum


  accurate sum 819.2000008192    sum 819.2000008191981 diff -1.933e-12 relative diff -2.359e-15 runtime 0.000181   OpenMP sum
  accurate sum 819.2000008188188 sum 819.2000008188188 diff          0 relative diff          0 runtime 0.000265   OpenMP sum with bit truncation
  accurate sum 819.2000008192    sum 819.2000008191985 diff -1.478e-12 relative diff -1.804e-15 runtime 0.000622   OpenMP sum with double double kahan sum accumulator
  accurate sum 819.2000008191999 sum 819.2000008191981 diff -1.819e-12 relative diff  -2.22e-15 runtime 0.000585   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 32768 log 15 ndigits 6 ndigitsld 3 nbits 19 nbitsld 9
Initializing mesh with Leblanc problem, high values first
  accurate sum 1638.4000016384   sum 1638.400001638733 diff  3.331e-10 relative diff  2.033e-13 runtime 0.000055   Serial sum
  accurate sum 1638.4000016384   sum 1638.400001639363 diff  9.632e-10 relative diff  5.879e-13 runtime 0.000029   Serial sum (OpenMP SIMD pragma)
  accurate sum 1638.400002       sum 1638.400002       diff          0 relative diff          0 runtime 0.000029   Serial sum with digit truncation
  accurate sum 1638.400001525879 sum 1638.400001525879 diff          0 relative diff          0 runtime 0.000029   Serial sum with bit truncation
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000601   Serial sum with long double accumulator
  accurate sum 1638.400001638    sum 1638.400001638    diff          0 relative diff          0 runtime 0.000601   Serial sum with long double accumulator with ndigit truncation
  accurate sum 1638.400001638336 sum 1638.400001638336 diff          0 relative diff          0 runtime 0.000603   Serial sum with long double accumulator with bit truncation
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000159   Serial sum with double double kahan sum accumulator
  accurate sum 1638.4000016384   sum 409.6000004096    diff      -1229 relative diff      -0.75 runtime 0.000041   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 1638.4000016384   sum 204.8000002048    diff      -1434 relative diff     -0.875 runtime 0.000021   8 wide GCC vector extensions Kahan sum
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000311   Serial sum with double double knuth sum accumulator
  accurate sum 1638.4000016384   sum 409.6000004096    diff      -1229 relative diff      -0.75 runtime 0.000080   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 1638.4000016384   sum 204.8000002048    diff      -1434 relative diff     -0.875 runtime 0.000040   8 wide GCC vector extensions Knuth sum
  accurate sum 1638.4000016384   sum 1638.4000016384   diff          0 relative diff          0 runtime 0.000084   Pair-wise sum


  accurate sum 1638.4000016384   sum 1638.400001638398 diff -1.819e-12 relative diff  -1.11e-15 runtime 0.000274   OpenMP sum
  accurate sum 1638.400001630187 sum 1638.400001630187 diff          0 relative diff          0 runtime 0.000239   OpenMP sum with bit truncation
  accurate sum 1638.4000016384   sum 1638.400001638399 diff -6.821e-13 relative diff -4.163e-16 runtime 0.000587   OpenMP sum with double double kahan sum accumulator
  accurate sum 1638.4000016384   sum 1638.400001638399 diff -9.095e-13 relative diff -5.551e-16 runtime 0.000562   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 65536 log 16 ndigits 6 ndigitsld 3 nbits 20 nbitsld 9
Initializing mesh with Leblanc problem, high values first
  accurate sum 3276.8000032768   sum 3276.800003276371 diff -4.293e-10 relative diff  -1.31e-13 runtime 0.000106   Serial sum
  accurate sum 3276.8000032768   sum 3276.800003277466 diff  6.662e-10 relative diff  2.033e-13 runtime 0.000054   Serial sum (OpenMP SIMD pragma)
  accurate sum 3276.800003       sum 3276.800003       diff          0 relative diff          0 runtime 0.000055   Serial sum with digit truncation
  accurate sum 3276.800003051758 sum 3276.800003051758 diff          0 relative diff          0 runtime 0.000054   Serial sum with bit truncation
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.001124   Serial sum with long double accumulator
  accurate sum 3276.800003277    sum 3276.800003277    diff          0 relative diff          0 runtime 0.001132   Serial sum with long double accumulator with ndigit truncation
  accurate sum 3276.800003276672 sum 3276.800003276672 diff          0 relative diff          0 runtime 0.001126   Serial sum with long double accumulator with bit truncation
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000314   Serial sum with double double kahan sum accumulator
  accurate sum 3276.8000032768   sum 819.2000008192    diff      -2458 relative diff      -0.75 runtime 0.000080   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 3276.8000032768   sum 409.6000004096    diff      -2867 relative diff     -0.875 runtime 0.000040   8 wide GCC vector extensions Kahan sum
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000613   Serial sum with double double knuth sum accumulator
  accurate sum 3276.8000032768   sum 819.2000008192    diff      -2458 relative diff      -0.75 runtime 0.000157   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 3276.8000032768   sum 409.6000004096    diff      -2867 relative diff     -0.875 runtime 0.000078   8 wide GCC vector extensions Knuth sum
  accurate sum 3276.8000032768   sum 3276.8000032768   diff          0 relative diff          0 runtime 0.000174   Pair-wise sum


  accurate sum 3276.8000032768   sum 3276.8000032768   diff -4.547e-13 relative diff -1.388e-16 runtime 0.000281   OpenMP sum
  accurate sum 3276.800003260374 sum 3276.800003260374 diff          0 relative diff          0 runtime 0.000149   OpenMP sum with bit truncation
  accurate sum 3276.8000032768   sum 3276.800003276799 diff -1.364e-12 relative diff -4.163e-16 runtime 0.000539   OpenMP sum with double double kahan sum accumulator
  accurate sum 3276.8000032768   sum 3276.800003276798 diff -1.819e-12 relative diff -5.551e-16 runtime 0.000688   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 131072 log 17 ndigits 6 ndigitsld 3 nbits 21 nbitsld 10
Initializing mesh with Leblanc problem, high values first
  accurate sum 6553.6000065536   sum 6553.600006562821 diff  9.221e-09 relative diff  1.407e-12 runtime 0.000220   Serial sum
  accurate sum 6553.6000065536   sum 6553.600006552741 diff -8.586e-10 relative diff  -1.31e-13 runtime 0.000114   Serial sum (OpenMP SIMD pragma)
  accurate sum 6553.600007       sum 6553.600007       diff          0 relative diff          0 runtime 0.000114   Serial sum with digit truncation
  accurate sum 6553.600006103516 sum 6553.600006103516 diff          0 relative diff          0 runtime 0.000112   Serial sum with bit truncation
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.002390   Serial sum with long double accumulator
  accurate sum 6553.600006554    sum 6553.600006554    diff          0 relative diff          0 runtime 0.002409   Serial sum with long double accumulator with ndigit truncation
  accurate sum 6553.600006553344 sum 6553.600006553344 diff          0 relative diff          0 runtime 0.002437   Serial sum with long double accumulator with bit truncation
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000647   Serial sum with double double kahan sum accumulator
  accurate sum 6553.6000065536   sum 1638.4000016384   diff      -4915 relative diff      -0.75 runtime 0.009339   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 6553.6000065536   sum 819.2000008192    diff      -5734 relative diff     -0.875 runtime 0.000082   8 wide GCC vector extensions Kahan sum
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.001258   Serial sum with double double knuth sum accumulator
  accurate sum 6553.6000065536   sum 1638.4000016384   diff      -4915 relative diff      -0.75 runtime 0.000327   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 6553.6000065536   sum 819.2000008192    diff      -5734 relative diff     -0.875 runtime 0.000159   8 wide GCC vector extensions Knuth sum
  accurate sum 6553.6000065536   sum 6553.6000065536   diff          0 relative diff          0 runtime 0.000309   Pair-wise sum


  accurate sum 6553.6000065536   sum 6553.600006553649 diff  4.911e-11 relative diff  7.494e-15 runtime 0.000304   OpenMP sum
  accurate sum 6553.600006461143 sum 6553.600006461143 diff          0 relative diff          0 runtime 0.000275   OpenMP sum with bit truncation
  accurate sum 6553.6000065536   sum 6553.600006553596 diff -3.638e-12 relative diff -5.551e-16 runtime 0.000595   OpenMP sum with double double kahan sum accumulator
  accurate sum 6553.600006553599 sum 6553.600006553592 diff -7.276e-12 relative diff  -1.11e-15 runtime 0.000620   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 262144 log 18 ndigits 6 ndigitsld 3 nbits 22 nbitsld 10
Initializing mesh with Leblanc problem, high values first
  accurate sum 13107.2000131072  sum 13107.20001314317 diff  3.597e-08 relative diff  2.745e-12 runtime 0.000440   Serial sum
  accurate sum 13107.2000131072  sum 13107.20001312564 diff  1.844e-08 relative diff  1.407e-12 runtime 0.000231   Serial sum (OpenMP SIMD pragma)
  accurate sum 13107.20001       sum 13107.20001       diff          0 relative diff          0 runtime 0.000230   Serial sum with digit truncation
  accurate sum 13107.20001220703 sum 13107.20001220703 diff          0 relative diff          0 runtime 0.000230   Serial sum with bit truncation
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.004871   Serial sum with long double accumulator
  accurate sum 13107.20001311    sum 13107.20001311    diff          0 relative diff          0 runtime 0.004882   Serial sum with long double accumulator with ndigit truncation
  accurate sum 13107.20001310669 sum 13107.20001310669 diff          0 relative diff          0 runtime 0.017976   Serial sum with long double accumulator with bit truncation
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.001292   Serial sum with double double kahan sum accumulator
  accurate sum 13107.2000131072  sum 3276.8000032768   diff      -9830 relative diff      -0.75 runtime 0.000334   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 13107.2000131072  sum 1638.4000016384   diff -1.147e+04 relative diff     -0.875 runtime 0.000163   8 wide GCC vector extensions Kahan sum
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.002505   Serial sum with double double knuth sum accumulator
  accurate sum 13107.2000131072  sum 3276.8000032768   diff      -9830 relative diff      -0.75 runtime 0.000657   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 13107.2000131072  sum 1638.4000016384   diff -1.147e+04 relative diff     -0.875 runtime 0.000318   8 wide GCC vector extensions Knuth sum
  accurate sum 13107.2000131072  sum 13107.2000131072  diff          0 relative diff          0 runtime 0.000521   Pair-wise sum


  accurate sum 13107.2000131072  sum 13107.20001310715 diff -4.729e-11 relative diff -3.608e-15 runtime 0.000260   OpenMP sum
  accurate sum 13107.20001268387 sum 13107.20001268387 diff          0 relative diff          0 runtime 0.000235   OpenMP sum with bit truncation
  accurate sum 13107.2000131072  sum 13107.20001310718 diff -2.001e-11 relative diff -1.527e-15 runtime 0.000600   OpenMP sum with double double kahan sum accumulator
  accurate sum 13107.2000131072  sum 13107.20001310718 diff -2.183e-11 relative diff -1.665e-15 runtime 0.000595   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 524288 log 19 ndigits 6 ndigitsld 3 nbits 23 nbitsld 11
Initializing mesh with Leblanc problem, high values first
  accurate sum 26214.4000262144  sum 26214.40002564823 diff -5.662e-07 relative diff  -2.16e-11 runtime 0.001101   Serial sum
  accurate sum 26214.4000262144  sum 26214.40002628635 diff  7.195e-08 relative diff  2.745e-12 runtime 0.000678   Serial sum (OpenMP SIMD pragma)
  accurate sum 26214.40003       sum 26214.40003       diff          0 relative diff          0 runtime 0.000605   Serial sum with digit truncation
  accurate sum 26214.40002441406 sum 26214.40002441406 diff          0 relative diff          0 runtime 0.000518   Serial sum with bit truncation
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.009742   Serial sum with long double accumulator
  accurate sum 26214.40002621    sum 26214.40002621    diff          0 relative diff          0 runtime 0.024963   Serial sum with long double accumulator with ndigit truncation
  accurate sum 26214.40002620965 sum 26214.40002620965 diff          0 relative diff          0 runtime 0.024509   Serial sum with long double accumulator with bit truncation
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.002586   Serial sum with double double kahan sum accumulator
  accurate sum 26214.4000262144  sum 6553.6000065536   diff -1.966e+04 relative diff      -0.75 runtime 0.000663   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 26214.4000262144  sum 3276.8000032768   diff -2.294e+04 relative diff     -0.875 runtime 0.000326   8 wide GCC vector extensions Kahan sum
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.004988   Serial sum with double double knuth sum accumulator
  accurate sum 26214.4000262144  sum 6553.6000065536   diff -1.966e+04 relative diff      -0.75 runtime 0.001306   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 26214.4000262144  sum 3276.8000032768   diff -2.294e+04 relative diff     -0.875 runtime 0.000637   8 wide GCC vector extensions Knuth sum
  accurate sum 26214.4000262144  sum 26214.4000262144  diff          0 relative diff          0 runtime 0.001061   Pair-wise sum


  accurate sum 26214.4000262144  sum 26214.40002621354 diff -8.622e-10 relative diff -3.289e-14 runtime 0.000151   OpenMP sum
  accurate sum 26214.40002441406 sum 26214.40002441406 diff          0 relative diff          0 runtime 0.000138   OpenMP sum with bit truncation
  accurate sum 26214.4000262144  sum 26214.40002621439 diff -1.455e-11 relative diff -5.551e-16 runtime 0.000348   OpenMP sum with double double kahan sum accumulator
  accurate sum 26214.4000262144  sum 26214.40002621438 diff -1.455e-11 relative diff -5.551e-16 runtime 0.000360   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 1048576 log 20 ndigits 7 ndigitsld 4 nbits 24 nbitsld 12
Initializing mesh with Leblanc problem, high values first
  accurate sum 52428.8000524288  sum 52428.80005292332 diff  4.945e-07 relative diff  9.432e-12 runtime 0.002081   Serial sum
  accurate sum 52428.8000524288  sum 52428.80005129646 diff -1.132e-06 relative diff  -2.16e-11 runtime 0.001312   Serial sum (OpenMP SIMD pragma)
  accurate sum 52428.8001        sum 52428.8001        diff          0 relative diff          0 runtime 0.001341   Serial sum with digit truncation
  accurate sum 52428.80004882812 sum 52428.80004882812 diff          0 relative diff          0 runtime 0.001311   Serial sum with bit truncation
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.019660   Serial sum with long double accumulator
  accurate sum 52428.8000524     sum 52428.8000524     diff          0 relative diff          0 runtime 0.019739   Serial sum with long double accumulator with ndigit truncation
  accurate sum 52428.8000524044  sum 52428.8000524044  diff          0 relative diff          0 runtime 0.019721   Serial sum with long double accumulator with bit truncation
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.005652   Serial sum with double double kahan sum accumulator
  accurate sum 52428.8000524288  sum 13107.2000131072  diff -3.932e+04 relative diff      -0.75 runtime 0.001739   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 52428.8000524288  sum 6553.6000065536   diff -4.588e+04 relative diff     -0.875 runtime 0.000966   8 wide GCC vector extensions Kahan sum
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.010387   Serial sum with double double knuth sum accumulator
  accurate sum 52428.8000524288  sum 13107.2000131072  diff -3.932e+04 relative diff      -0.75 runtime 0.003089   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 52428.8000524288  sum 6553.6000065536   diff -4.588e+04 relative diff     -0.875 runtime 0.001572   8 wide GCC vector extensions Knuth sum
  accurate sum 52428.8000524288  sum 52428.8000524288  diff          0 relative diff          0 runtime 0.002851   Pair-wise sum


  accurate sum 52428.8000524288  sum 52428.80005242972 diff   9.24e-10 relative diff  1.762e-14 runtime 0.000186   OpenMP sum
  accurate sum 52428.80004882812 sum 52428.80004882812 diff          0 relative diff          0 runtime 0.000170   OpenMP sum with bit truncation
  accurate sum 52428.8000524288  sum 52428.80005242887 diff  6.548e-11 relative diff  1.249e-15 runtime 0.000392   OpenMP sum with double double kahan sum accumulator
  accurate sum 52428.80005242879 sum 52428.80005242891 diff  1.164e-10 relative diff   2.22e-15 runtime 0.000416   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 2097152 log 21 ndigits 7 ndigitsld 4 nbits 25 nbitsld 12
Initializing mesh with Leblanc problem, high values first
  accurate sum 104857.6001048576 sum 104857.6001084272 diff   3.57e-06 relative diff  3.404e-11 runtime 0.005365   Serial sum
  accurate sum 104857.6001048576 sum 104857.6001058466 diff   9.89e-07 relative diff  9.432e-12 runtime 0.004349   Serial sum (OpenMP SIMD pragma)
  accurate sum 104857.6          sum 104857.6          diff          0 relative diff          0 runtime 0.004320   Serial sum with digit truncation
  accurate sum 104857.6000976562 sum 104857.6000976562 diff          0 relative diff          0 runtime 0.004244   Serial sum with bit truncation
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.040531   Serial sum with long double accumulator
  accurate sum 104857.600105     sum 104857.600105     diff          0 relative diff          0 runtime 0.076876   Serial sum with long double accumulator with ndigit truncation
  accurate sum 104857.6001048088 sum 104857.6001048088 diff          0 relative diff          0 runtime 0.054701   Serial sum with long double accumulator with bit truncation
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.010988   Serial sum with double double kahan sum accumulator
  accurate sum 104857.6001048576 sum 26214.4000262144  diff -7.864e+04 relative diff      -0.75 runtime 0.002645   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 104857.6001048576 sum 13107.2000131072  diff -9.175e+04 relative diff     -0.875 runtime 0.001329   8 wide GCC vector extensions Kahan sum
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.022625   Serial sum with double double knuth sum accumulator
  accurate sum 104857.6001048576 sum 26214.4000262144  diff -7.864e+04 relative diff      -0.75 runtime 0.005333   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 104857.6001048576 sum 13107.2000131072  diff -9.175e+04 relative diff     -0.875 runtime 0.002664   8 wide GCC vector extensions Knuth sum
  accurate sum 104857.6001048576 sum 104857.6001048576 diff          0 relative diff          0 runtime 0.001814   Pair-wise sum


  accurate sum 104857.6001048576 sum 104857.6001048707 diff   1.31e-08 relative diff  1.249e-13 runtime 0.000262   OpenMP sum
  accurate sum 104857.6000976562 sum 104857.6000976562 diff          0 relative diff          0 runtime 0.000215   OpenMP sum with bit truncation
  accurate sum 104857.6001048576 sum 104857.6001048579 diff  3.201e-10 relative diff  3.053e-15 runtime 0.000644   OpenMP sum with double double kahan sum accumulator
  accurate sum 104857.6001048576 sum 104857.6001048578 diff  2.328e-10 relative diff   2.22e-15 runtime 0.000650   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 4194304 log 22 ndigits 7 ndigitsld 4 nbits 26 nbitsld 13
Initializing mesh with Leblanc problem, high values first
  accurate sum 209715.2002097152 sum 209715.2001908246 diff -1.889e-05 relative diff -9.008e-11 runtime 0.011913   Serial sum
  accurate sum 209715.2002097152 sum 209715.2002168543 diff  7.139e-06 relative diff  3.404e-11 runtime 0.011317   Serial sum (OpenMP SIMD pragma)
  accurate sum 209715.2          sum 209715.2          diff          0 relative diff          0 runtime 0.011190   Serial sum with digit truncation
  accurate sum 209715.19921875   sum 209715.19921875   diff          0 relative diff          0 runtime 0.011013   Serial sum with bit truncation
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.102381   Serial sum with long double accumulator
  accurate sum 209715.20021      sum 209715.20021      diff          0 relative diff          0 runtime 0.073797   Serial sum with long double accumulator with ndigit truncation
  accurate sum 209715.2002096176 sum 209715.2002096176 diff          0 relative diff          0 runtime 0.066790   Serial sum with long double accumulator with bit truncation
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.021506   Serial sum with double double kahan sum accumulator
  accurate sum 209715.2002097152 sum 52428.8000524288  diff -1.573e+05 relative diff      -0.75 runtime 0.005291   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 209715.2002097152 sum 26214.4000262144  diff -1.835e+05 relative diff     -0.875 runtime 0.002674   8 wide GCC vector extensions Kahan sum
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.045336   Serial sum with double double knuth sum accumulator
  accurate sum 209715.2002097152 sum 52428.8000524288  diff -1.573e+05 relative diff      -0.75 runtime 0.010656   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 209715.2002097152 sum 26214.4000262144  diff -1.835e+05 relative diff     -0.875 runtime 0.005338   8 wide GCC vector extensions Knuth sum
  accurate sum 209715.2002097152 sum 209715.2002097152 diff          0 relative diff          0 runtime 0.004390   Pair-wise sum


  accurate sum 209715.2002097152 sum 209715.2002097001 diff  -1.51e-08 relative diff -7.203e-14 runtime 0.000201   OpenMP sum
  accurate sum 209715.2001953125 sum 209715.2001953125 diff          0 relative diff          0 runtime 0.000180   OpenMP sum with bit truncation
  accurate sum 209715.2002097152 sum 209715.200209716  diff  7.858e-10 relative diff  3.747e-15 runtime 0.000686   OpenMP sum with double double kahan sum accumulator
  accurate sum 209715.2002097152 sum 209715.200209716  diff  8.149e-10 relative diff  3.886e-15 runtime 0.000857   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 8388608 log 23 ndigits 7 ndigitsld 4 nbits 27 nbitsld 13
Initializing mesh with Leblanc problem, high values first
  accurate sum 419430.4004194304 sum 419430.400462431  diff    4.3e-05 relative diff  1.025e-10 runtime 0.024186   Serial sum
  accurate sum 419430.4004194304 sum 419430.4003816492 diff -3.778e-05 relative diff -9.008e-11 runtime 0.023474   Serial sum (OpenMP SIMD pragma)
  accurate sum 419430.4          sum 419430.4          diff          0 relative diff          0 runtime 0.022345   Serial sum with digit truncation
  accurate sum 419430.3984375    sum 419430.3984375    diff          0 relative diff          0 runtime 0.022230   Serial sum with bit truncation
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.146817   Serial sum with long double accumulator
  accurate sum 419430.400419     sum 419430.400419     diff          0 relative diff          0 runtime 0.133087   Serial sum with long double accumulator with ndigit truncation
  accurate sum 419430.4004192352 sum 419430.4004192352 diff          0 relative diff          0 runtime 0.133061   Serial sum with long double accumulator with bit truncation
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.043069   Serial sum with double double kahan sum accumulator
  accurate sum 419430.4004194304 sum 104857.6001048576 diff -3.146e+05 relative diff      -0.75 runtime 0.010608   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 419430.4004194304 sum 52428.8000524288  diff  -3.67e+05 relative diff     -0.875 runtime 0.005430   8 wide GCC vector extensions Kahan sum
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.090438   Serial sum with double double knuth sum accumulator
  accurate sum 419430.4004194304 sum 104857.6001048576 diff -3.146e+05 relative diff      -0.75 runtime 0.021315   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 419430.4004194304 sum 52428.8000524288  diff  -3.67e+05 relative diff     -0.875 runtime 0.010692   8 wide GCC vector extensions Knuth sum
  accurate sum 419430.4004194304 sum 419430.4004194304 diff          0 relative diff          0 runtime 0.011498   Pair-wise sum


  accurate sum 419430.4004194304 sum 419430.4004192239 diff -2.065e-07 relative diff -4.924e-13 runtime 0.001019   OpenMP sum
  accurate sum 419430.400390625  sum 419430.400390625  diff          0 relative diff          0 runtime 0.000250   OpenMP sum with bit truncation
  accurate sum 419430.4004194304 sum 419430.4004194307 diff   2.91e-10 relative diff  6.939e-16 runtime 0.001261   OpenMP sum with double double kahan sum accumulator
  accurate sum 419430.4004194303 sum 419430.4004194308 diff  4.657e-10 relative diff   1.11e-15 runtime 0.001425   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 16777216 log 24 ndigits 7 ndigitsld 4 nbits 27 nbitsld 14
Initializing mesh with Leblanc problem, high values first
  accurate sum 838860.8008388608 sum 838860.800853056  diff   1.42e-05 relative diff  1.692e-11 runtime 0.051632   Serial sum
  accurate sum 838860.8008388608 sum 838860.800924862  diff    8.6e-05 relative diff  1.025e-10 runtime 0.050917   Serial sum (OpenMP SIMD pragma)
  accurate sum 838860.801        sum 838860.801        diff          0 relative diff          0 runtime 0.030804   Serial sum with digit truncation
  accurate sum 838860.796875     sum 838860.796875     diff          0 relative diff          0 runtime 0.013690   Serial sum with bit truncation
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.266223   Serial sum with long double accumulator
  accurate sum 838860.800839     sum 838860.800839     diff          0 relative diff          0 runtime 0.266176   Serial sum with long double accumulator with ndigit truncation
  accurate sum 838860.8008384705 sum 838860.8008384705 diff          0 relative diff          0 runtime 0.266149   Serial sum with long double accumulator with bit truncation
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.084767   Serial sum with double double kahan sum accumulator
  accurate sum 838860.8008388608 sum 209715.2002097152 diff -6.291e+05 relative diff      -0.75 runtime 0.021230   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 838860.8008388608 sum 104857.6001048576 diff  -7.34e+05 relative diff     -0.875 runtime 0.011032   8 wide GCC vector extensions Kahan sum
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.180948   Serial sum with double double knuth sum accumulator
  accurate sum 838860.8008388608 sum 209715.2002097152 diff -6.291e+05 relative diff      -0.75 runtime 0.042686   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 838860.8008388608 sum 104857.6001048576 diff  -7.34e+05 relative diff     -0.875 runtime 0.021462   8 wide GCC vector extensions Knuth sum
  accurate sum 838860.8008388608 sum 838860.8008388608 diff          0 relative diff          0 runtime 0.024996   Pair-wise sum


  accurate sum 838860.8008388608 sum 838860.8008391046 diff  2.438e-07 relative diff  2.906e-13 runtime 0.002325   OpenMP sum
  accurate sum 838860.80078125   sum 838860.80078125   diff          0 relative diff          0 runtime 0.001389   OpenMP sum with bit truncation
  accurate sum 838860.8008388608 sum 838860.8008388591 diff -1.746e-09 relative diff -2.082e-15 runtime 0.004506   OpenMP sum with double double kahan sum accumulator
  accurate sum 838860.8008388607 sum 838860.8008388584 diff -2.328e-09 relative diff -2.776e-15 runtime 0.004081   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 33554432 log 25 ndigits 8 ndigitsld 5 nbits 29 nbitsld 15
Initializing mesh with Leblanc problem, high values first
  accurate sum 1677721.601677722 sum 1677721.600413603 diff  -0.001264 relative diff -7.535e-10 runtime 0.080192   Serial sum
  accurate sum 1677721.601677722 sum 1677721.601706112 diff  2.839e-05 relative diff  1.692e-11 runtime 0.026732   Serial sum (OpenMP SIMD pragma)
  accurate sum 1677721.6         sum 1677721.6         diff          0 relative diff          0 runtime 0.026788   Serial sum with digit truncation
  accurate sum 1677721.5         sum 1677721.5         diff          0 relative diff          0 runtime 0.026832   Serial sum with bit truncation
  accurate sum 1677721.601677722 sum 1677721.601677722 diff -2.777e-20 relative diff -1.655e-26 runtime 0.532354   Serial sum with long double accumulator
  accurate sum 1677721.6017      sum 1677721.6017      diff          0 relative diff          0 runtime 0.532323   Serial sum with long double accumulator with ndigit truncation
  accurate sum 1677721.601676941 sum 1677721.601676941 diff          0 relative diff          0 runtime 0.532321   Serial sum with long double accumulator with bit truncation
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.173170   Serial sum with double double kahan sum accumulator
  accurate sum 1677721.601677722 sum 419430.4004194304 diff -1.258e+06 relative diff      -0.75 runtime 0.045807   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 1677721.601677722 sum 209715.2002097152 diff -1.468e+06 relative diff     -0.875 runtime 0.022113   8 wide GCC vector extensions Kahan sum
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.362287   Serial sum with double double knuth sum accumulator
  accurate sum 1677721.601677722 sum 419430.4004194304 diff -1.258e+06 relative diff      -0.75 runtime 0.085439   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 1677721.601677722 sum 209715.2002097152 diff -1.468e+06 relative diff     -0.875 runtime 0.042960   8 wide GCC vector extensions Knuth sum
  accurate sum 1677721.601677722 sum 1677721.601677722 diff          0 relative diff          0 runtime 0.049347   Pair-wise sum


  accurate sum 1677721.601677722 sum 1677721.601681021 diff  3.299e-06 relative diff  1.966e-12 runtime 0.008991   OpenMP sum
  accurate sum 1677721.6015625   sum 1677721.6015625   diff          0 relative diff          0 runtime 0.002713   OpenMP sum with bit truncation
  accurate sum 1677721.601677722 sum 1677721.601677724 diff  2.095e-09 relative diff  1.249e-15 runtime 0.007413   OpenMP sum with double double kahan sum accumulator
  accurate sum 1677721.601677721 sum 1677721.601677723 diff  1.863e-09 relative diff   1.11e-15 runtime 0.006206   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 67108864 log 26 ndigits 8 ndigitsld 5 nbits 30 nbitsld 15
Initializing mesh with Leblanc problem, high values first
  accurate sum 3355443.203355443 sum 3355443.201976103 diff  -0.001379 relative diff -4.111e-10 runtime 0.114133   Serial sum
  accurate sum 3355443.203355443 sum 3355443.200827206 diff  -0.002528 relative diff -7.535e-10 runtime 0.052792   Serial sum (OpenMP SIMD pragma)
  accurate sum 3355443.2         sum 3355443.2         diff          0 relative diff          0 runtime 0.052852   Serial sum with digit truncation
  accurate sum 3355443           sum 3355443           diff          0 relative diff          0 runtime 0.052869   Serial sum with bit truncation
  accurate sum 3355443.203355443 sum 3355443.203355443 diff  6.115e-20 relative diff  1.822e-26 runtime 1.066504   Serial sum with long double accumulator
  accurate sum 3355443.2034      sum 3355443.2034      diff          0 relative diff          0 runtime 1.065987   Serial sum with long double accumulator with ndigit truncation
  accurate sum 3355443.203353882 sum 3355443.203353882 diff          0 relative diff          0 runtime 1.065428   Serial sum with long double accumulator with bit truncation
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.349315   Serial sum with double double kahan sum accumulator
  accurate sum 3355443.203355443 sum 838860.8008388608 diff -2.517e+06 relative diff      -0.75 runtime 0.084934   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 3355443.203355443 sum 419430.4004194304 diff -2.936e+06 relative diff     -0.875 runtime 0.043986   8 wide GCC vector extensions Kahan sum
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.724355   Serial sum with double double knuth sum accumulator
  accurate sum 3355443.203355443 sum 838860.8008388608 diff -2.517e+06 relative diff      -0.75 runtime 0.170903   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 3355443.203355443 sum 419430.4004194304 diff -2.936e+06 relative diff     -0.875 runtime 0.085868   8 wide GCC vector extensions Knuth sum
  accurate sum 3355443.203355443 sum 3355443.203355443 diff          0 relative diff          0 runtime 0.098664   Pair-wise sum


  accurate sum 3355443.203355443 sum 3355443.203351501 diff -3.942e-06 relative diff -1.175e-12 runtime 0.012045   OpenMP sum
  accurate sum 3355443.1875      sum 3355443.1875      diff          0 relative diff          0 runtime 0.005706   OpenMP sum with bit truncation
  accurate sum 3355443.203355443 sum 3355443.20335545  diff  6.985e-09 relative diff  2.082e-15 runtime 0.016127   OpenMP sum with double double kahan sum accumulator
  accurate sum 3355443.203355443 sum 3355443.203355448 diff  5.588e-09 relative diff  1.665e-15 runtime 0.011342   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 134217728 log 27 ndigits 8 ndigitsld 5 nbits 31 nbitsld 16
Initializing mesh with Leblanc problem, high values first
  accurate sum 6710886.406710886 sum 6710886.393382353 diff   -0.01333 relative diff -1.986e-09 runtime 0.228086   Serial sum
  accurate sum 6710886.406710886 sum 6710886.403952206 diff  -0.002759 relative diff -4.111e-10 runtime 0.117759   Serial sum (OpenMP SIMD pragma)
  accurate sum 6710886.4         sum 6710886.4         diff          0 relative diff          0 runtime 0.117734   Serial sum with digit truncation
  accurate sum 6710886           sum 6710886           diff          0 relative diff          0 runtime 0.117714   Serial sum with bit truncation
  accurate sum 6710886.406710886 sum 6710886.406710886 diff  3.781e-19 relative diff  5.635e-26 runtime 2.129334   Serial sum with long double accumulator
  accurate sum 6710886.4067      sum 6710886.4067      diff          0 relative diff          0 runtime 2.131598   Serial sum with long double accumulator with ndigit truncation
  accurate sum 6710886.406677246 sum 6710886.406677246 diff          0 relative diff          0 runtime 2.138708   Serial sum with long double accumulator with bit truncation
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.687641   Serial sum with double double kahan sum accumulator
  accurate sum 6710886.406710886 sum 1677721.601677722 diff -5.033e+06 relative diff      -0.75 runtime 0.180344   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 6710886.406710886 sum 838860.8008388608 diff -5.872e+06 relative diff     -0.875 runtime 0.101619   8 wide GCC vector extensions Kahan sum
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 1.447392   Serial sum with double double knuth sum accumulator
  accurate sum 6710886.406710886 sum 1677721.601677722 diff -5.033e+06 relative diff      -0.75 runtime 0.342056   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 6710886.406710886 sum 838860.8008388608 diff -5.872e+06 relative diff     -0.875 runtime 0.177494   8 wide GCC vector extensions Knuth sum
  accurate sum 6710886.406710886 sum 6710886.406710886 diff          0 relative diff          0 runtime 0.210545   Pair-wise sum


  accurate sum 6710886.406710886 sum 6710886.406658108 diff -5.278e-05 relative diff -7.865e-12 runtime 0.010431   OpenMP sum
  accurate sum 6710886.375       sum 6710886.375       diff          0 relative diff          0 runtime 0.009301   OpenMP sum with bit truncation
  accurate sum 6710886.406710886 sum 6710886.406710881 diff -5.588e-09 relative diff -8.327e-16 runtime 0.017059   OpenMP sum with double double kahan sum accumulator
  accurate sum 6710886.406710885 sum 6710886.406710878 diff -7.451e-09 relative diff  -1.11e-15 runtime 0.019853   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 268435456 log 28 ndigits 8 ndigitsld 5 nbits 32 nbitsld 16
Initializing mesh with Leblanc problem, high values first
  accurate sum 13421772.81342177 sum 13421772.76838235 diff   -0.04504 relative diff -3.356e-09 runtime 0.457456   Serial sum
  accurate sum 13421772.81342177 sum 13421772.78676471 diff   -0.02666 relative diff -1.986e-09 runtime 0.207380   Serial sum (OpenMP SIMD pragma)
  accurate sum 13421773          sum 13421773          diff          0 relative diff          0 runtime 0.207405   Serial sum with digit truncation
  accurate sum 13421768          sum 13421768          diff          0 relative diff          0 runtime 0.207387   Serial sum with bit truncation
  accurate sum 13421772.81342177 sum 13421772.81342177 diff  -1.29e-18 relative diff -9.615e-26 runtime 4.261912   Serial sum with long double accumulator
  accurate sum 13421772.813      sum 13421772.813      diff          0 relative diff          0 runtime 4.331344   Serial sum with long double accumulator with ndigit truncation
  accurate sum 13421772.81335449 sum 13421772.81335449 diff          0 relative diff          0 runtime 4.338907   Serial sum with long double accumulator with bit truncation
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 1.461721   Serial sum with double double kahan sum accumulator
  accurate sum 13421772.81342177 sum 3355443.203355443 diff -1.007e+07 relative diff      -0.75 runtime 0.402047   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 13421772.81342177 sum 1677721.601677722 diff -1.174e+07 relative diff     -0.875 runtime 0.296316   8 wide GCC vector extensions Kahan sum
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 2.973027   Serial sum with double double knuth sum accumulator
  accurate sum 13421772.81342177 sum 3355443.203355443 diff -1.007e+07 relative diff      -0.75 runtime 0.685471   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 13421772.81342177 sum 1677721.601677722 diff -1.174e+07 relative diff     -0.875 runtime 0.395068   8 wide GCC vector extensions Knuth sum
  accurate sum 13421772.81342177 sum 13421772.81342177 diff          0 relative diff          0 runtime 0.515126   Pair-wise sum


  accurate sum 13421772.81342177 sum 13421772.81348494 diff  6.317e-05 relative diff  4.707e-12 runtime 0.021253   OpenMP sum
  accurate sum 13421772.5        sum 13421772.5        diff          0 relative diff          0 runtime 0.021301   OpenMP sum with bit truncation
  accurate sum 13421772.81342177 sum 13421772.81342176 diff -1.118e-08 relative diff -8.327e-16 runtime 0.046142   OpenMP sum with double double kahan sum accumulator
  accurate sum 13421772.81342177 sum 13421772.81342176 diff  -1.49e-08 relative diff  -1.11e-15 runtime 0.040169   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 536870912 log 29 ndigits 8 ndigitsld 5 nbits 33 nbitsld 17
Initializing mesh with Leblanc problem, high values first
  accurate sum 26843545.62684355 sum 26843545.70588235 diff    0.07904 relative diff  2.944e-09 runtime 0.917655   Serial sum
  accurate sum 26843545.62684355 sum 26843545.53676471 diff   -0.09008 relative diff -3.356e-09 runtime 0.416062   Serial sum (OpenMP SIMD pragma)
  accurate sum 26843546          sum 26843546          diff          0 relative diff          0 runtime 0.415964   Serial sum with digit truncation
  accurate sum 26843520          sum 26843520          diff          0 relative diff          0 runtime 0.416145   Serial sum with bit truncation
  accurate sum 26843545.62684355 sum 26843545.62684355 diff  5.426e-18 relative diff  2.021e-25 runtime 8.517520   Serial sum with long double accumulator
  accurate sum 26843545.627      sum 26843545.627      diff          0 relative diff          0 runtime 8.528376   Serial sum with long double accumulator with ndigit truncation
  accurate sum 26843545.62646484 sum 26843545.62646484 diff          0 relative diff          0 runtime 8.531940   Serial sum with long double accumulator with bit truncation
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 2.759086   Serial sum with double double kahan sum accumulator
  accurate sum 26843545.62684355 sum 6710886.406710886 diff -2.013e+07 relative diff      -0.75 runtime 0.679490   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 26843545.62684355 sum 3355443.203355443 diff -2.349e+07 relative diff     -0.875 runtime 0.351040   8 wide GCC vector extensions Kahan sum
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 5.790518   Serial sum with double double knuth sum accumulator
  accurate sum 26843545.62684355 sum 6710886.406710886 diff -2.013e+07 relative diff      -0.75 runtime 1.369893   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 26843545.62684355 sum 3355443.203355443 diff -2.349e+07 relative diff     -0.875 runtime 0.687206   8 wide GCC vector extensions Knuth sum
  accurate sum 26843545.62684355 sum 26843545.62684355 diff          0 relative diff          0 runtime 0.730332   Pair-wise sum


  accurate sum 26843545.62684355 sum 26843545.62768796 diff  0.0008444 relative diff  3.146e-11 runtime 0.047161   OpenMP sum
  accurate sum 26843544          sum 26843544          diff          0 relative diff          0 runtime 0.037487   OpenMP sum with bit truncation
  accurate sum 26843545.62684355 sum 26843545.62684357 diff  2.608e-08 relative diff  9.714e-16 runtime 0.061777   OpenMP sum with double double kahan sum accumulator
  accurate sum 26843545.62684354 sum 26843545.62684356 diff   1.49e-08 relative diff  5.551e-16 runtime 0.049707   OpenMP sum with double double kahan sum accumulator with bit truncation

SETTINGS INFO -- ncells 1073741824 log 30 ndigits 9 ndigitsld 6 nbits 34 nbitsld 18
Initializing mesh with Leblanc problem, high values first
  accurate sum 53687091.25368709 sum 53687091.70588235 diff     0.4522 relative diff  8.423e-09 runtime 1.831098   Serial sum
  accurate sum 53687091.25368709 sum 53687091.4117647  diff     0.1581 relative diff  2.944e-09 runtime 0.838075   Serial sum (OpenMP SIMD pragma)
  accurate sum 53687090          sum 53687090          diff          0 relative diff          0 runtime 0.830870   Serial sum with digit truncation
  accurate sum 53687040          sum 53687040          diff          0 relative diff          0 runtime 0.832080   Serial sum with bit truncation
  accurate sum 53687091.25368709 sum 53687091.25368709 diff  2.277e-17 relative diff  4.242e-25 runtime 17.045993   Serial sum with long double accumulator
  accurate sum 53687091.25       sum 53687091.25       diff          0 relative diff          0 runtime 17.061191   Serial sum with long double accumulator with ndigit truncation
  accurate sum 53687091.25195312 sum 53687091.25195312 diff          0 relative diff          0 runtime 17.060498   Serial sum with long double accumulator with bit truncation
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 5.512768   Serial sum with double double kahan sum accumulator
  accurate sum 53687091.25368709 sum 13421772.81342177 diff -4.027e+07 relative diff      -0.75 runtime 1.364988   GCC Extensions Vectorized sum with double double kahan sum accumulator
  accurate sum 53687091.25368709 sum 6710886.406710886 diff -4.698e+07 relative diff     -0.875 runtime 0.702100   8 wide GCC vector extensions Kahan sum
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 11.583615   Serial sum with double double knuth sum accumulator
  accurate sum 53687091.25368709 sum 13421772.81342177 diff -4.027e+07 relative diff      -0.75 runtime 2.737210   GCC Extensions Vectorized sum with double double knuth sum accumulator
  accurate sum 53687091.25368709 sum 6710886.406710886 diff -4.698e+07 relative diff     -0.875 runtime 1.376823   8 wide GCC vector extensions Knuth sum
  accurate sum 53687091.25368709 sum 53687091.25368709 diff          0 relative diff          0 runtime 1.463551   Pair-wise sum


  accurate sum 53687091.25368709 sum 53687091.25267604 diff  -0.001011 relative diff -1.883e-11 runtime 0.061462   OpenMP sum
  accurate sum 53687088          sum 53687088          diff          0 relative diff          0 runtime 0.055433   OpenMP sum with bit truncation
  accurate sum 53687091.25368709 sum 53687091.25368716 diff  6.706e-08 relative diff  1.249e-15 runtime 0.097283   OpenMP sum with double double kahan sum accumulator
  accurate sum 53687091.25368708 sum 53687091.25368717 diff  8.941e-08 relative diff  1.665e-15 runtime 0.104465   OpenMP sum with double double kahan sum accumulator with bit truncation

Scanning dependencies of target distclean
Built target distclean
/usr/bin/modulecmd bash $*
MANPATH=/usr/share/man:/usr/local/share/man ;export MANPATH;PATH=/home/brobey/bin:/home/brobey/parsplice-install/bin:/home/brobey/bin:/home/brobey/parsplice-install/bin:/home/brobey/spack/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/opt/ibutils/bin ;export PATH;unset CC;unset CPP;unset CXX;unset F77;unset FC;unset LD_LIBRARY_PATH;unset LM_LICENSE_FILE;unset LOADEDMODULES;unset PGROUPD_LICENSE_FILE;unset _LMFILES_;unset f90;
